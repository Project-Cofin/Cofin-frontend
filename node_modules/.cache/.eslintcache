[{"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\index.js":"1","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\serviceWorker.js":"2","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\App.js":"3","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\app\\store.js":"4","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\index.js":"5","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\index.js":"6","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\index.js":"7","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\index.js":"8","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\medpt\\MedptPage.js":"9","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\pages\\ChatbotPage.js":"10","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\index.js":"11","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\medpt\\MedptTable.js":"12","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\HeaderChart.js":"13","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\AppBugReports.js":"14","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\StackChart.js":"15","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\MainChart.js":"16","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\ChartLayOut.js":"17","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\pages\\ChartPage.js":"18","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\index.js":"19","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnAWritePage.js":"20","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnABoardPage.js":"21","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\components\\MsgTable.js":"22","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserLost.js":"23","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\pages\\LoginPage.js":"24","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\pages\\UserPage.js":"25","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\pages\\MsgPage.js":"26","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\Unregister.js":"27","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserJoin.js":"28","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserInfo.js":"29","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserLogin.js":"30","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\demo-data\\data-vizualization.js":"31","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\index.js":"32","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\WorldMap.js":"33","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\Options.js":"34","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\Geolocation.js":"35","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\MapLayOut.js":"36","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\LocalMap.js":"37","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\pages\\LocalMapPage.js":"38","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\pages\\WorldMapPage.js":"39","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\LocalMapInfo.js":"40","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAWrite.js":"41","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAList.js":"42","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Header.js":"43","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Footer.js":"44","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\ChatLayOut.js":"45","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\Chat.js":"46","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Navi.js":"47","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\LayOut.js":"48","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Icon.js":"49","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Login.js":"50","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\home\\components\\CofinHome.js":"51","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\common\\Pagination.js":"52","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\reducer\\mapSlice.js":"53","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\reducer\\mapAPI.js":"54","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\utils\\paginate.js":"55","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\ChatModules.js":"56","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\reducer\\chatbotAPI.js":"57","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\reducer\\chatbotSlice.js":"58","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\EventMarkerContainer.js":"59","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnAViewPage.js":"60","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAView.js":"61","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAComment.js":"62","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\ViewLayout.js":"63","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\reducer\\coronaSlice.js":"64","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\reducer\\coronaAPI.js":"65","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\pages\\NewsPage.js":"66","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\components\\NewsTable.js":"67","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\index.js":"68"},{"size":721,"mtime":1636513052224,"results":"69","hashOfConfig":"70"},{"size":5014,"mtime":1633311719727,"results":"71","hashOfConfig":"70"},{"size":1686,"mtime":1640847645285,"results":"72","hashOfConfig":"70"},{"size":495,"mtime":1640841315459,"results":"73","hashOfConfig":"70"},{"size":300,"mtime":1640835391322,"results":"74","hashOfConfig":"70"},{"size":541,"mtime":1640841376886,"results":"75","hashOfConfig":"70"},{"size":142,"mtime":1636680997807,"results":"76","hashOfConfig":"70"},{"size":1184,"mtime":1640240349462,"results":"77","hashOfConfig":"70"},{"size":464,"mtime":1636606979764,"results":"78","hashOfConfig":"70"},{"size":278,"mtime":1637213531615,"results":"79","hashOfConfig":"70"},{"size":825,"mtime":1640312192510,"results":"80","hashOfConfig":"70"},{"size":6790,"mtime":1638233133346,"results":"81","hashOfConfig":"70"},{"size":1282,"mtime":1640841427881,"results":"82","hashOfConfig":"70"},{"size":1516,"mtime":1640841405506,"results":"83","hashOfConfig":"70"},{"size":1378,"mtime":1640841436645,"results":"84","hashOfConfig":"70"},{"size":7184,"mtime":1636608359803,"results":"85","hashOfConfig":"70"},{"size":1482,"mtime":1640841417689,"results":"86","hashOfConfig":"70"},{"size":572,"mtime":1636620006030,"results":"87","hashOfConfig":"70"},{"size":302,"mtime":1640310611473,"results":"88","hashOfConfig":"70"},{"size":273,"mtime":1637731973167,"results":"89","hashOfConfig":"70"},{"size":270,"mtime":1637913259806,"results":"90","hashOfConfig":"70"},{"size":3778,"mtime":1640848620270,"results":"91","hashOfConfig":"70"},{"size":2962,"mtime":1640240443911,"results":"92","hashOfConfig":"70"},{"size":932,"mtime":1640831707885,"results":"93","hashOfConfig":"70"},{"size":550,"mtime":1640827785208,"results":"94","hashOfConfig":"70"},{"size":515,"mtime":1636680930174,"results":"95","hashOfConfig":"70"},{"size":957,"mtime":1640222712535,"results":"96","hashOfConfig":"70"},{"size":8335,"mtime":1640568913589,"results":"97","hashOfConfig":"70"},{"size":7524,"mtime":1640827599110,"results":"98","hashOfConfig":"70"},{"size":3471,"mtime":1640831706146,"results":"99","hashOfConfig":"70"},{"size":34574,"mtime":1636598761912,"results":"100","hashOfConfig":"70"},{"size":488,"mtime":1637201633090,"results":"101","hashOfConfig":"70"},{"size":1394,"mtime":1638339877641,"results":"102","hashOfConfig":"70"},{"size":1165,"mtime":1640591807851,"results":"103","hashOfConfig":"70"},{"size":1044,"mtime":1640682729685,"results":"104","hashOfConfig":"70"},{"size":732,"mtime":1638339822946,"results":"105","hashOfConfig":"70"},{"size":2488,"mtime":1640850697688,"results":"106","hashOfConfig":"70"},{"size":377,"mtime":1637221864787,"results":"107","hashOfConfig":"70"},{"size":239,"mtime":1638151709283,"results":"108","hashOfConfig":"70"},{"size":751,"mtime":1640592059083,"results":"109","hashOfConfig":"70"},{"size":4216,"mtime":1639987773008,"results":"110","hashOfConfig":"70"},{"size":7029,"mtime":1640831962244,"results":"111","hashOfConfig":"70"},{"size":466,"mtime":1640750617784,"results":"112","hashOfConfig":"70"},{"size":1445,"mtime":1638164230143,"results":"113","hashOfConfig":"70"},{"size":621,"mtime":1640310489171,"results":"114","hashOfConfig":"70"},{"size":7340,"mtime":1640310490501,"results":"115","hashOfConfig":"70"},{"size":1606,"mtime":1640850999945,"results":"116","hashOfConfig":"70"},{"size":519,"mtime":1640835254945,"results":"117","hashOfConfig":"70"},{"size":513,"mtime":1640750616354,"results":"118","hashOfConfig":"70"},{"size":754,"mtime":1640248391873,"results":"119","hashOfConfig":"70"},{"size":299,"mtime":1636438153363,"results":"120","hashOfConfig":"70"},{"size":1231,"mtime":1640247398379,"results":"121","hashOfConfig":"70"},{"size":1603,"mtime":1640585745037,"results":"122","hashOfConfig":"70"},{"size":528,"mtime":1640571383713,"results":"123","hashOfConfig":"70"},{"size":377,"mtime":1640247397770,"results":"124","hashOfConfig":"70"},{"size":3523,"mtime":1640310507041,"results":"125","hashOfConfig":"70"},{"size":487,"mtime":1640571393471,"results":"126","hashOfConfig":"70"},{"size":1722,"mtime":1640310591508,"results":"127","hashOfConfig":"70"},{"size":1119,"mtime":1640850714069,"results":"128","hashOfConfig":"70"},{"size":362,"mtime":1640835831282,"results":"129","hashOfConfig":"70"},{"size":2540,"mtime":1640835343732,"results":"130","hashOfConfig":"70"},{"size":2958,"mtime":1640841275176,"results":"131","hashOfConfig":"70"},{"size":698,"mtime":1640835857556,"results":"132","hashOfConfig":"70"},{"size":1791,"mtime":1640841365887,"results":"133","hashOfConfig":"70"},{"size":408,"mtime":1640841359566,"results":"134","hashOfConfig":"70"},{"size":750,"mtime":1640848518732,"results":"135","hashOfConfig":"70"},{"size":3557,"mtime":1640848629480,"results":"136","hashOfConfig":"70"},{"size":137,"mtime":1640847639673,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"15mdklq",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"140"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"140"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"140"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"140"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"140"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"140"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"140"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"140"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"140"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"140"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"140"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"140"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"140"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"140"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"140"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"140"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"140"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"140"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"140"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"140"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\index.js",[],["300","301"],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\App.js",["302"],"import {Route, Routes} from 'react-router-dom'; \nimport axios from 'axios';\n//21-11-06 v6로 버전업이후 switch -> routes / component -> element= {<Home/>}/>\n\nimport { Geolocation, LocalMapPage, WorldMapPage } from 'features/map';\nimport { QnABoardPage, QnAViewPage, QnAWritePage } from 'features/QnA/index';\n\nimport MedptPage from \"features/medpt/MedptPage\";\nimport {MsgPage} from \"features/message/index\";\nimport {NewsPage} from \"features/news/index\";\nimport {LoginPage, UserPage} from \"features/user/index\";\nimport {ChartPage} from 'features/corona/index';\nimport ChatbotPage from 'features/chatbot/pages/ChatbotPage';\n\n//Attempted import error: 'Action' is not exported from 'history'. histroy 버전 5로 업.\n\nfunction App() {\n\n  return(<>\n    <Geolocation/>\n    <Routes>\n\n          <Route path=\"/\" element= { <ChartPage/> }/>\n          <Route path='/home' element= { '/' }/>\n          <Route path='/main/corona' element={<ChartPage/>}/>\n\n\n          <Route path=\"/QnA\" element={<QnABoardPage/>}/>\n          <Route path=\"/QnA/view\" element={<QnAViewPage/>}/>\n          <Route path=\"/write\" element={<QnAWritePage/>}/>\n          \n          <Route path=\"/organ/chat\" element={<ChatbotPage/>}/>\n          <Route path=\"/organ/local\" element={<LocalMapPage/>}/>\n          <Route path='/organ/world' element= { <WorldMapPage/> }/>      \n\n          <Route path='/medpts' element={<MedptPage/>}/>\n          <Route path='/message' element={<MsgPage/>}/>\n          <Route path='/news' element={<NewsPage/>}/>\n          <Route path='/login' element={<LoginPage/>}/>\n          <Route path='/user' element={<UserPage/>}/>\n          \n      \n    </Routes>  \n</>)}\n\n\n\n\n\n\n\nexport default App;\n\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\app\\store.js",["303"],"import {\n  configureStore,\n  combineReducers,  // redux의 reducer의 집합과 같다.\n  getDefaultMiddleware\n} from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport { map } from 'features/map'\nimport { chatbot } from 'features/chatbot'\nimport { corona } from 'features/corona'\n\nconst rootReducer = combineReducers({map, chatbot, corona})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\n});","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\medpt\\MedptPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\pages\\ChatbotPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\medpt\\MedptTable.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\HeaderChart.js",["304"],"import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Chart,\r\n  LineSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getConfirmed } from '../reducer/coronaSlice';\r\n\r\nexport default function HeaderChart(){\r\n  const dispatch = useDispatch()\r\n  const data = useSelector(state => state.corona.confirmedState)\r\n  const labelHalfWidth = 50;\r\n  let lastLabelCoordinate;\r\n  const ArgumentLabel = (props) => {\r\n    const { x } = props;\r\n    // filter Labels\r\n    if (\r\n      lastLabelCoordinate &&\r\n      lastLabelCoordinate < x &&\r\n      x - lastLabelCoordinate <= labelHalfWidth\r\n    ) {\r\n      return null;\r\n    }\r\n    lastLabelCoordinate = x;\r\n    return <ArgumentAxis.Label {...props} />;\r\n  };\r\n  \r\n  useEffect(()=>{\r\n    dispatch(getConfirmed())\r\n  },[])\r\n\r\n    return (\r\n      <Paper>\r\n        <Chart\r\n          data={data} \r\n        >\r\n          <ArgumentAxis labelComponent={ArgumentLabel}/>\r\n          <ValueAxis />\r\n\r\n          <LineSeries\r\n            name=\"line\"\r\n            valueField=\"lineValue\"\r\n            argumentField=\"argument\"\r\n          />\r\n        </Chart>\r\n      </Paper>\r\n    );\r\n  }","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\AppBugReports.js",["305"],"import { Icon } from '@iconify/react';\r\nimport bugFilled from '@iconify/icons-ant-design/bug-filled';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, Typography } from '@mui/material';\r\n// utils\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  padding: theme.spacing(5, 0),\r\n  color: theme.palette.error.darker,\r\n  backgroundColor: theme.palette.error.lighter\r\n}));\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  width: theme.spacing(8),\r\n  height: theme.spacing(8),\r\n  justifyContent: 'center',\r\n  marginBottom: theme.spacing(3),\r\n  color: theme.palette.error.dark,\r\n  backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.error.dark, 0)} 0%, ${alpha(\r\n    theme.palette.error.dark,\r\n    0.24\r\n  )} 100%)`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TOTAL = 234;\r\n\r\nexport default function AppBugReports(x) {\r\n  // console.log(JSON.stringify(x.param))\r\n  return (\r\n    <RootStyle>\r\n      <IconWrapperStyle>\r\n        <Icon icon={bugFilled} width={24} height={24} />\r\n      </IconWrapperStyle>\r\n      <Typography variant=\"h3\">{x.param.value}</Typography>\r\n      <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\r\n        {x.param.label}\r\n      </Typography>\r\n    </RootStyle>\r\n  );\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\StackChart.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\MainChart.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\ChartLayOut.js",["306","307","308"],"import * as React from 'react';\r\nimport Header from 'features/common/components/Header'\r\nimport Footer from 'features/common/components/Footer'\r\n\r\nimport 'features/corona/style/ChartLayOutStyle.css'\r\nimport { AppBugReports, HeaderChart, MainChart, StackChart } from 'features/corona/index';\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getToday, getWeek } from \"../reducer/coronaSlice\";\r\n\r\nconst ChartLayOut = () => {\r\n  const dispatch = useDispatch()\r\n  const today = useSelector(state => state.corona.todayState)\r\n  const week = useSelector(state => state.corona.weekState)\r\n  useEffect(()=>{\r\n      dispatch(getToday())\r\n      dispatch(getWeek())\r\n  },[])\r\n  return (\r\n    <div class = \"wrapper\">\r\n      <div class=\"Chartcontainer\">\r\n      <span className=\"header\"><Header/></span> \r\n\r\n        <span class =\"item6\"><HeaderChart/></span>\r\n        {\r\n          Object.keys(today).map((x, i) => {\r\n            if(x != 'update_at'){\r\n              return(<span class = {`item${i+7}`}><AppBugReports param={{'label':x, 'value': today[x]}}/></span>)\r\n            }\r\n          })\r\n        }\r\n        <span class =\"item11\"><StackChart param={Object.keys(week).map(x => {\r\n              return({'label':x, 'value': week[x]*0.01})\r\n          })}/></span>\r\n        <span class =\"item12\"><MainChart/></span>\r\n        \r\n      <span class=\"ChartFooter\"><Footer/></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartLayOut;","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\pages\\ChartPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnAWritePage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnABoardPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\components\\MsgTable.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserLost.js",["309","310","311","312","313","314","315","316","317","318","319","320"],"import React, {useState} from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {UserPage} from 'features/user'\r\n\r\nexport default function UserLost(){\r\n\r\n    const navigate = useNavigate();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const LostSchema = Yup.object().shape({\r\n        user_email: Yup.string().email().required('*필수 항목'),\r\n        // user_phone: Yup.string().required('*필수 항목')\r\n        // because user/views.py searches by user_email only\r\n      });\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            user_email: ''           \r\n            // user_phone:'',\r\n    },\r\n    validationSchema: LostSchema,\r\n    onSubmit: () => {\r\n        // need pop up with id/pw info\r\n        navigate({ UserPage }, { replace: true });        \r\n    }});\r\n    const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n    return(\r\n        <div align=\"center\" style={{ display: \"inline-block\" }}>\r\n                <h2>PW 찾기</h2>\r\n            <FormikProvider value={formik}>\r\n                <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                    <Stack spacing={3}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoComplete=\"user_email\"\r\n                            type=\"email\"\r\n                            label=\"이메일\"\r\n                            {...getFieldProps('email')}\r\n                            error={Boolean(touched.user_email && errors.user_email)}\r\n                            helperText={touched.user_email && errors.user_email}\r\n                        />\r\n                        {/* <TextField\r\n                            fullWidth\r\n                            label=\"연락처\"\r\n                            {...getFieldProps('user_phone')}\r\n                            error={Boolean(touched.user_phone && errors.user_phone)}\r\n                            helperText={touched.user_phone && errors.user_phone}\r\n                        />*/}\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            loading={isSubmitting}>\r\n                            PW 찾기\r\n                        </LoadingButton>        \r\n                    </Stack>\r\n                </Form>\r\n            </FormikProvider>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\pages\\LoginPage.js",["321","322"],"import React from 'react'\r\nimport {UserLogin,UserLost,UserJoin} from 'features/user'\r\nimport { Button } from '@mui/material'\r\nimport { LayOut } from 'features/common'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LoginPage(){\r\n    return(\r\n    <LayOut>\r\n        <div align=\"center\" style={{ display: \"inline-block\" }}>\r\n        \r\n            <ul type='none'>\r\n            <li></li>\r\n            <br/><br/>\r\n            <li><UserLogin/></li>\r\n            <br/><br/>\r\n            <Link to=\"/user\" style={{ display: \"inline-block\", marginLeft:\"200px\", width: \"800px\" }}>\r\n                <Button\r\n                fullWidth                \r\n                size=\"large\"          \r\n                variant=\"contained\"\r\n                >          \r\n                회원가입          \r\n                </Button>\r\n            </Link>\r\n            <br/><br/></ul>\r\n        \r\n        </div>\r\n    </LayOut>\r\n    )\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\pages\\UserPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\pages\\MsgPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\Unregister.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserJoin.js",["323","324","325","326","327","328","329","330","331","332","333","334"],"import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { useNavigate } from 'react-router';\r\n// material\r\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\n\r\n\r\nexport default function RegisterForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [user, setUser] = useState({\r\n    user_email: '',\r\n    username:'',\r\n    password: '',\r\n    user_name: '',\r\n    user_birthday: '',\r\n    user_sex:'',\r\n    user_phone:'',\r\n    user_address:'',\r\n    user_vaccinated:'',\r\n    vaccine_type:''\r\n  })\r\n  const handleChange = e => {\r\n    const {name, value} = e.target\r\n    setUser({\r\n      ...user,\r\n      [name]:value\r\n    })\r\n    console.log(e.target.name);\r\n    console.log(setUser);\r\n  }\r\n\r\n  const handleSubmit=e=>{\r\n    e.preventDefault();\r\n    console.log(`가입 : ${JSON.stringify(user)}`)\r\n    RegisterForm({user})\r\n    .then(res=>{alert(`가입 완료: ${res.data.result}`)})\r\n    .catch(err=>{alert(`가입 실패: ${err}`)})\r\n  }\r\n\r\n  // const userJoin=joinRequest=>axios.post(`${SERVER}/??`, JSON.stringify(joinRequest),{headers})\r\n  \r\n//   const SERVER='http://127.0.0.1:8000/api/user/join'\r\n// // ????\r\n\r\n  const{user_email, username, password, \r\n    user_name, user_birthday, user_sex, user_phone, \r\n    user_address, user_vaccinated, vaccine_type}=`user`\r\n  \r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    user_email: Yup.string().email('메일 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\r\n    password: Yup.string().required('비밀번호 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),  \r\n    passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다'),\r\n    username: Yup.string().required('아이디 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),\r\n    user_birthday: Yup.string().required('생년월일 8자리 입력해주세요').min(8),\r\n    user_sex: Yup.string().required('m / f'),\r\n    user_phone: Yup.string().required('연락처 11자리 입력해주세요'),\r\n    user_address: Yup.string().required(),\r\n    user_vaccinated: Yup.string().required('yes/ no 백신 접종완료 여부를 알려주세요'),\r\n    vaccine_type: Yup.string('대중적인 명칭으로 기입해주세요').max(30)        \r\n    });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      user_email: '',\r\n      username:'',\r\n      password: '',\r\n      user_name: '',\r\n      user_birthday: '',\r\n      user_sex:'',\r\n      user_phone:'',\r\n      user_address:'',\r\n      user_vaccinated:'',\r\n      vaccine_type:''\r\n    },\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: () => {\r\n      navigate('/', { replace: true });\r\n    }\r\n  });\r\n\r\n  const { errors, touched, isSubmitting, getFieldProps } = formik;\r\n\r\n  return (\r\n    <div align=\"center\" style={{ display: \"inline-block\"}}>\r\n      <h1><b>회원 가입</b></h1>\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"이름\"\r\n                {...getFieldProps('user_name')}\r\n                error={Boolean(touched.user_name && errors.user_name)}\r\n                helperText={touched.user_name && errors.user_name}\r\n              />\r\n  \r\n              <TextField\r\n                fullWidth\r\n                label=\"생년월일\"\r\n                {...getFieldProps('user_birthday')}\r\n                error={Boolean(touched.user_birthday && errors.user_birthday)}\r\n                helperText={touched.user_birthday && errors.user_birthday}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"성별\"\r\n                {...getFieldProps('user_sex')}\r\n                error={Boolean(touched.user_sex && errors.user_sex)}\r\n                helperText={touched.user_sex && errors.user_sex}\r\n                // 성별은 radio? \r\n              /></Stack>\r\n        <TextField\r\n              fullWidth\r\n              autoComplete=\"user_email\"\r\n              type=\"email\"\r\n              label=\"이메일=로그인 아이디\"\r\n              {...getFieldProps('user_email')}\r\n              error={Boolean(touched.user_email && errors.user_email)}\r\n              helperText={touched.user_email && errors.user_email}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"6~12자리 비밀번호\"\r\n              {...getFieldProps('password')}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"비밀번호 확인\"\r\n              {...getFieldProps('password')}  // how to make pw chk?\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n              // 확인!!\r\n            />\r\n            \r\n              \r\n              <TextField\r\n                fullWidth\r\n                label=\"01000000000\"\r\n                {...getFieldProps('user_phone')}\r\n                error={Boolean(touched.user_phone && errors.user_phone)}\r\n                helperText={touched.user_phone && errors.user_phone}\r\n              />\r\n            \r\n              <TextField\r\n                fullWidth\r\n                label=\"주소지\"\r\n                {...getFieldProps('user_address')}\r\n                error={Boolean(touched.user_address && errors.user_address)}\r\n                helperText={touched.user_address && errors.user_address}\r\n              />\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>             \r\n              <TextField\r\n                fullWidth\r\n                label=\"백신접종 여부 (Y/N)\"\r\n                {...getFieldProps('user_vaccinated')}\r\n                error={Boolean(touched.user_vaccinated && errors.user_vaccinated)}\r\n                helperText={touched.user_vaccinated && errors.user_vaccinated}\r\n              />\r\n  \r\n              <TextField\r\n                fullWidth\r\n                label=\"접종 백신 종류\"\r\n                {...getFieldProps('vaccine_type')}\r\n                error={Boolean(touched.vaccine_type && errors.vaccine_type)}\r\n                helperText={touched.vaccine_type && errors.vaccine_type}\r\n              /></Stack>          \r\n            \r\n            <Button variant=\"outlined\"\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              loading={isSubmitting}\r\n              onClick={()=>{\r\n                console.log('가입 완료.')\r\n            }}>\r\n              회원 가입\r\n            </Button>\r\n        </Stack>\r\n      </Form>\r\n    </FormikProvider>\r\n    </div>\r\n  );\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserInfo.js",["335","336","337","338","339","340","341","342","343","344","345"],"import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { useNavigate } from 'react-router';\r\n// material\r\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\n\r\nexport default function UserInfo(){\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const{user_email, username, password, \r\n        user_name, user_birthday, user_sex, user_phone, \r\n        user_address, user_vaccinated, vaccine_type}=`user`\r\n\r\n    const EditSchema = Yup.object().shape({\r\n        user_email: Yup.string().email().required('변경 불가'), //no chg?\r\n        password: Yup.string().required('변경 가능').min(6, '6 ~ 12자 이내로 작성해주세요'),  \r\n        passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다'),\r\n        username: Yup.string().required('변경 불가'), // no chg\r\n        user_sex: Yup.string().required('변경 불가'),  // no chg\r\n        user_phone: Yup.string().required('연락처 11자리 입력해주세요'),  //no chg?\r\n        user_address: Yup.string().required(),\r\n        user_vaccinated: Yup.string().required('백신 접종완료 여부를 알려주세요'),\r\n        vaccine_type: Yup.string()        \r\n    });\r\n    \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            user_email: '',\r\n            username:'',\r\n            password: '',\r\n            user_name: '',\r\n            user_birthday: '',\r\n            user_sex:'',\r\n            user_phone:'',\r\n            user_address:'',\r\n            user_vaccinated:'',\r\n            vaccine_type:''\r\n        },\r\n        validationSchema: EditSchema,\r\n        onSubmit: () => {\r\n            navigate('/userinfo', { replace: true }); // refreshes page after edit?\r\n        }\r\n    });\r\n\r\n    const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\r\n\r\n    return(\r\n        <div align=\"center\" style={{ display: \"inline-block\" , marginLeft:\"300px\"}}>\r\n            <h1>회원 정보</h1>\r\n            {/* shows all user info, with boxes for editables: */}\r\n            <FormikProvider value={formik}>\r\n            <Form autoComplete='off' onSubmit={handleSubmit}>\r\n                <Stack spacing={3}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n                <TextField\r\n                fullWidth\r\n                label=\"이름\"\r\n                {...getFieldProps('user_name')}\r\n                error={Boolean(touched.user_name && errors.user_name)}\r\n                helperText={touched.user_name && errors.user_name}\r\n              />\r\n  \r\n              <TextField\r\n                fullWidth\r\n                label=\"생년월일\"\r\n                {...getFieldProps('user_birthday')}\r\n                error={Boolean(touched.user_birthday && errors.user_birthday)}\r\n                helperText={touched.user_birthday && errors.user_birthday}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"성별\"\r\n                {...getFieldProps('user_sex')}\r\n                error={Boolean(touched.user_sex && errors.user_sex)}\r\n                helperText={touched.user_sex && errors.user_sex}\r\n                // 성별은 radio? \r\n              /></Stack>\r\n        <TextField\r\n              fullWidth\r\n              autoComplete=\"user_email\"\r\n              type=\"email\"\r\n              label=\"이메일=로그인 아이디\"\r\n              {...getFieldProps('user_email')}\r\n              error={Boolean(touched.user_email && errors.user_email)}\r\n              helperText={touched.user_email && errors.user_email}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"6~12자리 비밀번호\"\r\n              {...getFieldProps('password')}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"비밀번호 확인\"\r\n              {...getFieldProps('password')}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n              // 확인!!\r\n            />\r\n            \r\n              \r\n              <TextField\r\n                fullWidth\r\n                label=\"010-0000-0000\"\r\n                {...getFieldProps('user_phone')}\r\n                error={Boolean(touched.user_phone && errors.user_phone)}\r\n                helperText={touched.user_phone && errors.user_phone}\r\n              />\r\n            \r\n              <TextField\r\n                fullWidth\r\n                label=\"주소지\"\r\n                {...getFieldProps('user_address')}\r\n                error={Boolean(touched.user_address && errors.user_address)}\r\n                helperText={touched.user_address && errors.user_address}\r\n              />\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>             \r\n              <TextField\r\n                fullWidth\r\n                label=\"백신접종 여부 (Y/N)\"\r\n                {...getFieldProps('user_vaccinated')}\r\n                error={Boolean(touched.user_vaccinated && errors.user_vaccinated)}\r\n                helperText={touched.user_vaccinated && errors.user_vaccinated}\r\n              />\r\n  \r\n              <TextField\r\n                fullWidth\r\n                label=\"접종 백신 종류\"\r\n                {...getFieldProps('vaccine_type')}\r\n                error={Boolean(touched.vaccine_type && errors.vaccine_type)}\r\n                helperText={touched.vaccine_type && errors.vaccine_type}\r\n              /></Stack>  \r\n            <Button variant=\"outlined\"\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              loading={isSubmitting}\r\n              onClick={()=>{\r\n                  console.log('가입 완료.')\r\n              }}>\r\n              가입하기\r\n            </Button>\r\n            <Button variant=\"\" \r\n            onClick={()=>{\r\n              \r\n            }}></Button>\r\n            </Stack></Form></FormikProvider>\r\n        </div>\r\n)};\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserLogin.js",["346","347","348"],"import React, {useState} from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport { Button } from '@mui/material';\r\n// import Navigation from 'common/Navigation';\r\nimport { UserLost, UserPage } from 'features/user';\r\n\r\nexport default function LoginForm() {\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email().required('*필수 항목'),\r\n    password: Yup.string().required('*필수 항목')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      remember: true\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: () => {\r\n      navigate({UserPage}, { replace: true });\r\n    }\r\n  });\r\n\r\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((show) => !show);\r\n  };\r\n\r\n  return (\r\n    <div align=\"center\" style={{ display: \"inline-block\", marginLeft:\"200px\", width: \"800px\" }}>\r\n      <h1><b>로그인</b></h1>\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"user_email\"\r\n            type=\"email\"\r\n            label=\"이메일\"\r\n            {...getFieldProps('email')}\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"current-password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            label=\"비밀번호\"\r\n            {...getFieldProps('password')}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\r\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\r\n          <FormControlLabel\r\n            control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\r\n            label=\"로그인 상태 유지\"\r\n          />\r\n\r\n          <a href=\"lost\"><small>비밀번호 찾기</small></a>\r\n          <a href=\"unregis\"><small>회원 탈퇴</small></a>\r\n        </Stack>\r\n\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          loading={isSubmitting}\r\n          onClick={()=>{\r\n            \r\n            console.log(`success`)\r\n        }}>\r\n          로그인\r\n        </Button>        \r\n      </Form>\r\n    </FormikProvider>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\demo-data\\data-vizualization.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\WorldMap.js",["349"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { WorldMap } from 'react-svg-worldmap';\r\nimport styled from 'styled-components';\r\nimport { worldMap } from \"features/map/reducer/mapSlice\";\r\n\r\nexport default function World() {\r\n    const maps = useSelector(state => state.map.mapsState)\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n      dispatch(worldMap())\r\n    },[])\r\n\r\n    const stylingFunction = ({\r\n        countryValue,\r\n        minValue,\r\n        maxValue,\r\n        country,\r\n        color,\r\n      }) => {\r\n        const opacityLevel = 0.1 + (1.0 * (countryValue - minValue)) / (maxValue - minValue);\r\n        return {\r\n          // fill: country === 'US' ? 'blue' : color,\r\n          fill: countryValue < 300000 ? 'green' : color,\r\n          fillOpacity: opacityLevel,\r\n          stroke: 'brown',\r\n          strokeWidth: 1,\r\n          strokeOpacity: 0.2,\r\n          cursor: 'pointer',\r\n        };\r\n      };\r\n\r\n    return (<>\r\n        <WorldMapDiv className=\"App\" >\r\n            <WorldMap color=\"red\" title=\"Top 10 Coronavirus Rates\" value-suffix=\"people\" size=\"xxl\" \r\n            data={maps.map(x => {return {country: x.meta, value: parseInt(x.cases)}})} \r\n            frame={true} styleFunction={stylingFunction} />\r\n        </WorldMapDiv>\r\n    </>) \r\n}\r\n\r\nconst WorldMapDiv = styled.div`\r\n  text-align: center;\r\n`","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\Options.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\Geolocation.js",["350"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { medPoints } from \"features/map/reducer/mapSlice\";\r\n\r\nexport default function Geolocation() {\r\n  const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (navigator.geolocation) { // GPS를 지원하면\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n            const latlng = [position.coords.latitude, position.coords.longitude]\r\n            dispatch(medPoints({'latitude': latlng[0], 'longitude': latlng[1]}))\r\n            window.localStorage.setItem('sessionGeo', [...latlng])\r\n            }, function(error) {\r\n              console.error(error);\r\n            }, {\r\n              enableHighAccuracy: false,\r\n              maximumAge: 0,\r\n              timeout: Infinity\r\n            });\r\n          } else {\r\n            alert('GPS를 지원하지 않습니다');\r\n            window.localStorage.setItem('sessionGeo', ['37.49939596822029', '127.02902373805311'])\r\n          }\r\n    },[])\r\n    return(<></>)\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\MapLayOut.js",["351"],"import React from 'react';\r\nimport Header from 'features/common/components/Header'\r\nimport Footer from 'features/common/components/Footer'\r\nimport styled from \"styled-components\";\r\nimport 'features/map/style/Map.css'\r\nimport { LocalMap, LocalMapInfo, Options } from \"features/map/index\"\r\n\r\n\r\nconst MapLayOut = (props) => {\r\n  return (\r\n    <div class = \"wrapper\">\r\n      <div class=\"Mapcontainer\">\r\n      <span className=\"header\"><Header/></span>  \r\n\r\n        <span class =\"Options\"><Options/></span><br/>\r\n        <span class =\"LocalMap\"><LocalMap/></span>\r\n        <span class =\"LocalMapInfo\"><LocalMapInfo/></span>\r\n\r\n        <span class=\"Footer\"><Footer/></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapLayOut;\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\LocalMap.js",["352"],"import { Map, MapMarker } from 'react-kakao-maps-sdk';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EventMarkerContainer } from '..';\r\nimport { medPoints } from '../reducer/mapSlice';\r\n\r\n\r\nexport default function LocalMap() {\r\n    const geoInfo = window.localStorage.getItem('sessionGeo').split(',')\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [map, setMap] = useState()\r\n    let points = useSelector(state => state.map.mapsState.map(\r\n        x => {return {content: <div style={{ padding: \"5px\", color: \"#000\" }}>{x.name}</div>,\r\n                      latlng: {lat: x.latitude, lng:x.longitude},\r\n                      id: x.med_point != null ? x.med_point.split(']')[0].substr(1) : \"None\"\r\n                    }}\r\n    )) \r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{ dispatch(medPoints({'latitude': geoInfo[0], 'longitude': geoInfo[1]})) },[])\r\n    return(<>\r\n    <Map\r\n          center={{\r\n            lat: geoInfo[0],\r\n            lng: geoInfo[1],\r\n          }}\r\n          style={{\r\n            width: \"1400px\",\r\n            height: \"500px\",\r\n          }}\r\n          level={6}\r\n          onCreate={setMap}\r\n        >\r\n            <MapMarker\r\n            position={{lat: geoInfo[0], lng:geoInfo[1]}}\r\n            // title='현재 위치'\r\n            image={{\r\n                // 무료 마커이미지의 주소: https://www.flaticon.com/kr/\r\n                src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693914.png?token=exp=1640851561~hmac=498da795f36d3ed3b80dcdd877886950\", \r\n                size: {\r\n                  width: 45,\r\n                  height: 45,\r\n                }, \r\n                options: {\r\n                  offset: {\r\n                    x: 25,\r\n                    y: 45,\r\n                  }, \r\n                },\r\n              }}\r\n              onClick={(marker) => map.panTo(marker.getPosition())}\r\n              onMouseOver={() => setIsOpen(true)}\r\n              onMouseOut={() => setIsOpen(false)}\r\n            >{isOpen && <div style={{ padding: \"5px\", color: \"#000\" }}>내 위치</div>}</MapMarker>\r\n            {points.map((value) => (\r\n              <EventMarkerContainer\r\n                key={`EventMarkerContainer-${value.latlng.lat}-${value.latlng.lng}`}\r\n                position={value.latlng}\r\n                content={value.content}\r\n                id={value.id}\r\n              />\r\n            ))}\r\n        </Map>\r\n    </>);\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\pages\\LocalMapPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\pages\\WorldMapPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\LocalMapInfo.js",["353"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LocalMapInfo = () => {\r\n    const info = useSelector(state => state.map.mapState )\r\n    return(<>\r\n        {\r\n            info.name == '' ? \r\n            <></> :\r\n            <InfoUl>\r\n                <li>\r\n                    <InfoDiv>\r\n                        <h1>{info.name}</h1>\r\n                        <label>{info.meta}</label>\r\n                    </InfoDiv>\r\n                </li>\r\n            </InfoUl>\r\n        }\r\n\r\n    </>)\r\n}\r\n\r\nexport default LocalMapInfo\r\n\r\nconst InfoDiv = styled.div`\r\n\r\n    width: 1300px;\r\n    height: 300px;\r\n    display: inline-block;\r\n`\r\n\r\nconst InfoUl = styled.ul`\r\n\r\n    list-style: none;\r\n`","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAWrite.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAList.js",["354","355","356"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Pagination from '../common/Pagination';\r\nimport { paginate } from '../utils/paginate';\r\nimport axios from 'axios';\r\nimport 'features/QnA/style/QnAList.css'\r\n\r\nimport { Link } from \"react-router-dom\";\r\n \r\nconst QnAList = () => {\r\n    const getQnA = () => { // 영화 정보를 반환하는 함수\r\n      const QnA = [\r\n        { no: \"1\", title: <Link className=\"QnALink\" to=\"/QnA/view\">질문 거리 하나</Link>, writer: \"띠리빠바\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"2\", title: \"질문 2\", writer: \"아모르파뤼\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"3\", title: \"신고 1\", writer: \"십센티\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"4\", title: \"질문 3\", writer: \"뿌바라\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"5\", title: \"답변 1\", writer: \"넥넥타르\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"6\", title: \"질문 4\", writer: \"알로하오에\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"7\", title: \"답변 2\", writer: \"채강소다파팅\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"8\", title: \"신고 2\", writer: \"빠다꼬꼬낫\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"9\", title: \"질문 5\", writer: \"유후유후\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"10\", title: \"질문 6\", writer: \"명란젓에밥비벼머거\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"11\", title: \"답변 1\", writer: \"넥넥타르\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"12\", title: \"질문 4\", writer: \"알로하오에\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"13\", title: \"답변 2\", writer: \"채강소다파팅\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"14\", title: \"신고 2\", writer: \"빠다꼬꼬낫\", date: \"2019-07-17\", review: \"5\"},\r\n        { no: \"15\", title: \"질문 5\", writer: \"유후유후\", date: \"2019-07-17\", review: \"5\"}\r\n      ]\r\n      \r\n      return QnA;\r\n    }\r\n  \r\n    const [QnA, setQnA] = useState({\r\n        data: getQnA(),\r\n        pageSize: 10,\r\n        currentPage: 1\r\n    });\r\n\r\n    const handlePageChange = (page) => {\r\n        setQnA({ ...QnA, currentPage: page });\r\n      }\r\n    \r\n    const { data, pageSize, currentPage } = QnA;\r\n\r\n    const pagedQnA = paginate(data, currentPage, pageSize);\r\n  \r\n    const { length: count } = QnA.data;\r\n    \r\n    if(count === 0)\r\n      return <p>정보가 없습니다.</p>\r\n\r\n    return (\r\n        <>\r\n        <p>{count} 개의 질문이 있습니다.</p>\r\n        <div class=\"ui middle aligned center aligned grid\">\r\n            <br/><h2 class=\"ui teal image header\">\r\n                QnA 게시판\r\n            </h2>\r\n            <table className=\"table\" style={{width: \"100%\"}}>\r\n\r\n                <colgroup>\r\n                    <col width=\"10%\" />\r\n                    <col width=\"40%\" />\r\n                    <col width=\"10%\" />\r\n                    <col width=\"20%\" />\r\n                    <col width=\"10%\" />\r\n                </colgroup>\r\n                <thead>\r\n                    <tr>\r\n                        <th>번호</th>\r\n                        <th>제목</th>\r\n                        <th>작성자</th>\r\n                        <th>작성일</th>\r\n                        <th>조회수</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {pagedQnA.map((QnA) => (\r\n                        <tr key={QnA.title}>\r\n                            <td>{QnA.no}</td>\r\n                            <td>{QnA.title}</td>\r\n                            <td>{QnA.writer}</td>\r\n                            <td>{QnA.date}</td>\r\n                            <td>{QnA.review}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>              \r\n                <Pagination\r\n                    pageSize={pageSize} \r\n                    currentPage={currentPage} \r\n                    itemsCount={count}\r\n                    onPageChange={handlePageChange}/>                \r\n            </table><br/>\r\n            <table>\r\n                <div class=\"search-wrap\">\r\n                    <div class=\"col-4 input-group\">\r\n                        <input id=\"Search\" type=\"text\" class=\"form-control kw\" />\r\n                        <div class=\"input-group-append\">\r\n                            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"btn_search\">찾기</button>\r\n                        </div>                    \r\n                        <Link to=\"/write\" style={{marginLeft:\"900px\"}}>                        \r\n                            <button class=\"btn btn-outline-secondary\">게시글 작성하기</button>                        \r\n                        </Link>\r\n                    </div>    \r\n                </div>\r\n            </table>       \r\n        </div>\r\n    </>);\r\n};\r\n \r\nexport default QnAList;\r\n\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <>\r\n//     <div class=\"ui middle aligned center aligned grid\" align=\"center\">\r\n//         <h2 class=\"ui teal image header\">\r\n//             QnA 게시판\r\n//         </h2>\r\n//         <div class=\"ui large form\">\r\n//         <div class=\"ui stacked segment\">\r\n//         <QnATable headersName={[\"번호\", '제목', '작성자', '작성일', '조회수']} >\r\n//             <QnATableRow>\r\n//                 <QnATableColumn>1</QnATableColumn>\r\n//                 <QnATableColumn>첫번째 게시글</QnATableColumn>\r\n//                 <QnATableColumn>ss지존준넥서스ss</QnATableColumn>\r\n//                 <QnATableColumn>2020-01-01</QnATableColumn>\r\n//                 <QnATableColumn>12</QnATableColumn>\r\n//             </QnATableRow>\r\n//             <QnATableRow>\r\n//                 <QnATableColumn>2</QnATableColumn>\r\n//                 <QnATableColumn>두번째 게시글</QnATableColumn>\r\n//                 <QnATableColumn>채강$$준넥서스</QnATableColumn>\r\n//                 <QnATableColumn>2020-04-16</QnATableColumn>\r\n//                 <QnATableColumn>5</QnATableColumn>\r\n//             </QnATableRow>\r\n//             <QnATableRow>\r\n//                 <QnATableColumn>3</QnATableColumn>\r\n//                 <QnATableColumn>세번째 게시글</QnATableColumn>\r\n//                 <QnATableColumn>허접♥등신♥</QnATableColumn>\r\n//                 <QnATableColumn>2020-09-07</QnATableColumn>\r\n//                 <QnATableColumn>66</QnATableColumn>\r\n//             </QnATableRow>\r\n//             <QnATableRow>\r\n//                 <QnATableColumn>4</QnATableColumn>\r\n//                 <QnATableColumn>네번째 게시글</QnATableColumn>\r\n//                 <QnATableColumn>닉넴짓기귀찮다</QnATableColumn>\r\n//                 <QnATableColumn>2021-07-29</QnATableColumn>\r\n//                 <QnATableColumn>43</QnATableColumn>\r\n//             </QnATableRow>\r\n           \r\n//             <a href=\"/write\"><button class=\"ui fluid large teal submit button\">게시글 작성하기</button></a>\r\n//         </QnATable>\r\n//         </div>\r\n//         </div>\r\n//     </div>\r\n//     </>\r\n//   )\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Header.js",["357"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Icon, Navi, Login} from '..'\r\nimport {Navbar} from 'react-bootstrap';\r\nimport 'features/common/style/LayOutStyle.css'\r\n\r\n\r\nconst Header = () => {\r\n    return(\r\n        <>\r\n        <header>\r\n            <Navbar bg=\"primary\" variant=\"dark\" id=\"centerboxs\">\r\n                <Icon/><Navi/><Login/>\r\n            </Navbar>\r\n        </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Footer.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\ChatLayOut.js",["358"],"import * as React from 'react';\r\nimport Header from 'features/common/components/Header'\r\nimport Footer from 'features/common/components/Footer'\r\nimport {Chat} from 'features/chatbot/index'\r\nimport 'features/chatbot/style/ChatLayOutStyle.css'\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst ChatLayOut = (props) => {\r\n  return (\r\n    <div class = \"wrapper\">\r\n      <div class=\"Chatcontainer\">\r\n        <span className=\"header\"><Header/></span>  \r\n\r\n        <span class =\"item13\"><Chat/></span>\r\n        \r\n        <span class =\"Footer\"><Footer/></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatLayOut;\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\Chat.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Navi.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\LayOut.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Icon.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Login.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\home\\components\\CofinHome.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\common\\Pagination.js",["359"],"import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n\r\n  const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\r\n  if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\r\n\r\n  const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n\r\n  return (\r\n    <nav> {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li \r\n            key={page} \r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\r\n            style={{ cursor: \"pointer\" }}>\r\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>{page}</a> {/* 페이지 번호 클릭 이벤트 처리기 지정 */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\reducer\\mapSlice.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\reducer\\mapAPI.js",["360"],"import axios from \"axios\"\r\nconst SERVER = 'http://127.0.0.1:8001/api/map'\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  'Authorization': 'JWT fefege..'\r\n}\r\n\r\nconst world = () => axios.get(`${SERVER}/world`)\r\nconst medPoint = x => axios.get(`${SERVER}/med-point/${x}`)\r\nconst medPoints = x => axios.post(`${SERVER}/med-points`, JSON.stringify(x), {headers})\r\nconst cases = x => axios.post(`${SERVER}/cases-points`, JSON.stringify(x), {headers})\r\n\r\nexport default {\r\n  world,\r\n  medPoint,\r\n  medPoints,\r\n  cases,\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\utils\\paginate.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\ChatModules.js",["361","362","363","364"],"import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { answer, answerStatus } from \"features/chatbot/reducer/chatbotSlice\"\r\n\r\nexport function Ask(props){\r\n    const dispatch = useDispatch()\r\n    const [ text, setText ] = useState('')\r\n    const key = props.previousStep.key\r\n    const botAnswer = {\r\n      [key]:useSelector((state)=>state.chatbot.answersState[key])\r\n    }\r\n    useEffect(()=>{\r\n      setText(props.steps.userinput.value)\r\n      dispatch(answer({'key': props.previousStep.key,'query':props.steps.userinput.value}))\r\n    },[text])\r\n      return (\r\n        <>\r\n        {/* <div>{text}이(가) 라고 질문하신 것이 맞습니까?</div> */}\r\n        {text == \"체크리스트\" ? <button onClick={() => props.triggerNextStep({trigger: 'fever'})} \r\n        style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"1em 2em 5px 2em\", cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\"}} >\r\n          백신 접종 증상 체크하기!\r\n        </button>:<div>{botAnswer[key]}</div>}\r\n        </>\r\n      );\r\n  }\r\n  \r\n  \r\n  export function CheckStatus(props){\r\n    const dispatch = useDispatch()\r\n    const pain_arr = ['fever', 'ino_area', 'swell', 'sick', 'pain', 'fatigue', 'allergy', 'etc', 'welcome']\r\n    const symptom = props.previousStep.value.slice(0, -1)\r\n    const choice = useSelector((state)=>state.chatbot.healthStates[symptom])\r\n    useEffect(()=>{\r\n      dispatch(answerStatus({'symptom': symptom, 'details':props.previousStep.message}))\r\n    },[])\r\n      return (\r\n        <>\r\n        <div>{choice['answer']}</div>\r\n        <button style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"0.7em auto\", \r\n                        cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\", width: \"10em\", display: \"block\"}} \r\n                onClick={() => {\r\n                  try {\r\n                    if(props.previousStep.value.slice(-1)>2){\r\n                      window.localStorage.setItem(\"counter\", parseInt(localStorage.getItem(\"counter\"))+1)\r\n                    }\r\n                    props.triggerNextStep((pain_arr.indexOf(symptom)+1) < 8 ? {trigger: pain_arr[pain_arr.indexOf(symptom)+1]} : {trigger: 'alert'})\r\n                  } catch (error) {\r\n                  }\r\n                }}>\r\n          이어서 진행하기\r\n        </button>\r\n        <button style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"0.5em auto\", \r\n                        cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\", width: \"10em\", display: \"block\"}} \r\n                onClick={() => {\r\n                  if(props.previousStep.value.slice(-1)>2){\r\n                    window.localStorage.setItem(\"counter\", parseInt(localStorage.getItem(\"counter\"))+1)\r\n                  }\r\n                  props.triggerNextStep({trigger: 'alert'})\r\n                }}>\r\n          그만하기\r\n        </button>\r\n        </>\r\n      );\r\n  }\r\n  \r\n  export function AlertMessage(){\r\n    return(<>\r\n    {\r\n      localStorage.getItem(\"counter\") == 0\r\n      ? <div>주요 이상 반응이 없습니다.</div>\r\n      : <div>주요 이상 반응이 '{localStorage.getItem(\"counter\")}' 건 있습니다. 가까운 의료기관에 방문하시기를 추천드립니다.</div>\r\n    }\r\n    </>)\r\n  }\r\n  \r\n  export function ResetMessage(){\r\n    // localStorage.setItem(\"counter\", 0)\r\n    return(<>\r\n      <div>\r\n        또 다른 궁금하신 부분이 있나요?\r\n      </div>\r\n    </>)\r\n  }","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\reducer\\chatbotAPI.js",["365"],"import axios from \"axios\"\r\nconst SERVER = 'http://127.0.0.1:8002/api/chatbot'\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  'Authorization': 'JWT fefege..'\r\n}\r\n\r\nconst chatAnswer = x => axios.post(`${SERVER}/chat-answer`, JSON.stringify(x), {headers})\r\nconst statusAnswer = x => axios.post(`${SERVER}/find-by-detail`, JSON.stringify(x), {headers})\r\nconst getStatus = () => axios.get(`${SERVER}/find-all`)\r\n\r\nexport default {\r\n  chatAnswer,\r\n  statusAnswer,\r\n  getStatus\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\reducer\\chatbotSlice.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\EventMarkerContainer.js",["366"],"import React, { useState } from \"react\"\r\nimport { MapMarker, useMap } from \"react-kakao-maps-sdk\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { medPoint } from \"../reducer/mapSlice\"\r\n\r\nexport default function EventMarkerContainer({ position, content, id }) {\r\n    const map = useMap()\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n      <MapMarker\r\n        position={position}\r\n        image={{\r\n          src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693879.png?token=exp=1640851550~hmac=d92d4a2f6e1db4f0774f561ddd44e584\", \r\n          size: {\r\n            width: 45,\r\n            height: 45,\r\n          }, \r\n          options: {\r\n            offset: {\r\n              x: 25,\r\n              y: 45,\r\n            }, \r\n          },\r\n        }}\r\n        onClick={(marker) => {\r\n          if (id != \"None\") dispatch(medPoint(id))\r\n          map.panTo(marker.getPosition())}}\r\n        onMouseOver={() => setIsVisible(true)}\r\n        onMouseOut={() => setIsVisible(false)}\r\n      >\r\n        {isVisible && content}\r\n      </MapMarker>\r\n    )\r\n  }","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnAViewPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAView.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAComment.js",["367","368"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport 'features/QnA/style/QnAView.css'\r\n\r\nconst QnAComment = () => {\r\n    return (\r\n    <>\r\n    <div class=\"view_comment\" id=\"focus_cmt\">\r\n        <div id=\"comment_wrap\" class=\"comment_wrap show\" data-article-lv=\"10\" data-sort-type data-comment-cnt=\"0\">\r\n            <div class=\"comment_count\">\r\n                <div class=\"f1 num_box\">\r\n                    전체 댓글\r\n                    <em class=\"font_red\">\r\n                        <span id=\"comment_total\">2</span>\r\n                        개\r\n                    </em>\r\n                    <div class=\"selecet_box array_latest\">\r\n                        <select name=\"selCommentSort\">\r\n                            <option value=\"D\">등록순</option>\r\n                            <option value=\"N\">최신순</option>\r\n                        </select>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"comment_box\">\r\n            <ul class=\"cmt_list\">\r\n                <li id=\"comment_li\" class=\"ub-content\">\r\n                    <div class=\"cmt_info clear\" data-rcnt=\"0\">\r\n                        \r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"cmt_write_box clear\">\r\n        <div class=\"f1\">\r\n            <div class=\"user_info_input\">\r\n                <label for=\"user_nick\" class=\"blind\">닉네임</label>\r\n                <input type=\"text\" id=\"name_158651\" name=\"name\" placeholder=\"닉네임\" maxlength=\"20\"></input>                            \r\n            </div>\r\n            <div class=\"user_info_input\">\r\n                <label for=\"user_pw\" class=\"blind\">비밀번호</label>\r\n                <input type=\"password\" id=\"password_158651\" name=\"password\" placeholder=\"비밀번호\" maxlength=\"20\"></input>\r\n            </div>\r\n            <div class=\"cmt_txt_cont\">\r\n                <div class=\"cmt_write\" >\r\n                    <label for=\"cmt_textarea\" class=\"cmt_textarea_label\" onclick=\"$('.cmt_textarea_label').hide();$(this).siblings('textarea').focus();\">\r\n                        타인의 권리를 침해하거나 명예를 훼손하는 댓글은 운영원칙 및 관련 법률에 제재를 받을 수 있습니다.<br/>\r\n                        Shift+Enter 키를 동시에 누르면 줄바꿈이 됩니다.\r\n                    </label>\r\n                    <textarea id=\"memo\" onfocus=\"$('.cmt_textarea_label').hide();\" maxlength=\"400\"\r\n                    onkeyup=\"javascript:reply_length_count(158651);\"></textarea>\r\n                </div>\r\n                <div class=\"cmt_cont_bottm clear\">\r\n                    <button type=\"button\" class=\"btn_blue btn_svc small repley_add\" data-no=\"158651\">등록</button>\r\n                </div>\r\n            </div>\r\n        </div>                    \r\n    </div>  \r\n</>);\r\n};\r\n\r\nexport default QnAComment;","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\ViewLayout.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\reducer\\coronaSlice.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\reducer\\coronaAPI.js",["369","370"],"import axios from \"axios\"\r\nconst SERVER = 'http://127.0.0.1:8000/api'\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  'Authorization': 'JWT fefege..'\r\n}\r\n\r\nconst today = () => axios.get(`${SERVER}/crwaling/today`)\r\nconst week = () => axios.get(`${SERVER}/crwaling/week`)\r\nconst confirmed = () => axios.get(`${SERVER}/googledrive/confirmed`)\r\n\r\nexport default {\r\n  today,\r\n  week,\r\n  confirmed\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\pages\\NewsPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\components\\NewsTable.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\index.js",[],{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","replacedBy":"374"},{"ruleId":"375","severity":1,"message":"376","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":13},{"ruleId":"375","severity":1,"message":"379","line":4,"column":3,"nodeType":"377","messageId":"378","endLine":4,"endColumn":23},{"ruleId":"380","severity":1,"message":"381","line":34,"column":5,"nodeType":"382","endLine":34,"endColumn":7,"suggestions":"383"},{"ruleId":"375","severity":1,"message":"384","line":36,"column":7,"nodeType":"377","messageId":"378","endLine":36,"endColumn":12},{"ruleId":"380","severity":1,"message":"381","line":18,"column":5,"nodeType":"382","endLine":18,"endColumn":7,"suggestions":"385"},{"ruleId":"386","severity":1,"message":"387","line":26,"column":41,"nodeType":"388","messageId":"389","endLine":26,"endColumn":43},{"ruleId":"390","severity":1,"message":"391","line":27,"column":18,"nodeType":"392","messageId":"393","endLine":27,"endColumn":20},{"ruleId":"375","severity":1,"message":"394","line":3,"column":18,"nodeType":"377","messageId":"378","endLine":3,"endColumn":28},{"ruleId":"375","severity":1,"message":"395","line":5,"column":10,"nodeType":"377","messageId":"378","endLine":5,"endColumn":14},{"ruleId":"375","severity":1,"message":"396","line":6,"column":8,"nodeType":"377","messageId":"378","endLine":6,"endColumn":15},{"ruleId":"375","severity":1,"message":"397","line":7,"column":8,"nodeType":"377","messageId":"378","endLine":7,"endColumn":18},{"ruleId":"375","severity":1,"message":"398","line":9,"column":3,"nodeType":"377","messageId":"378","endLine":9,"endColumn":7},{"ruleId":"375","severity":1,"message":"399","line":11,"column":3,"nodeType":"377","messageId":"378","endLine":11,"endColumn":11},{"ruleId":"375","severity":1,"message":"400","line":13,"column":3,"nodeType":"377","messageId":"378","endLine":13,"endColumn":13},{"ruleId":"375","severity":1,"message":"401","line":14,"column":3,"nodeType":"377","messageId":"378","endLine":14,"endColumn":17},{"ruleId":"375","severity":1,"message":"402","line":15,"column":3,"nodeType":"377","messageId":"378","endLine":15,"endColumn":19},{"ruleId":"375","severity":1,"message":"403","line":23,"column":12,"nodeType":"377","messageId":"378","endLine":23,"endColumn":24},{"ruleId":"375","severity":1,"message":"404","line":23,"column":26,"nodeType":"377","messageId":"378","endLine":23,"endColumn":41},{"ruleId":"375","severity":1,"message":"405","line":39,"column":30,"nodeType":"377","messageId":"378","endLine":39,"endColumn":36},{"ruleId":"375","severity":1,"message":"406","line":2,"column":19,"nodeType":"377","messageId":"378","endLine":2,"endColumn":27},{"ruleId":"375","severity":1,"message":"407","line":2,"column":28,"nodeType":"377","messageId":"378","endLine":2,"endColumn":36},{"ruleId":"375","severity":1,"message":"408","line":31,"column":9,"nodeType":"377","messageId":"378","endLine":31,"endColumn":21},{"ruleId":"375","severity":1,"message":"409","line":54,"column":9,"nodeType":"377","messageId":"378","endLine":54,"endColumn":19},{"ruleId":"375","severity":1,"message":"410","line":54,"column":21,"nodeType":"377","messageId":"378","endLine":54,"endColumn":29},{"ruleId":"375","severity":1,"message":"411","line":54,"column":31,"nodeType":"377","messageId":"378","endLine":54,"endColumn":39},{"ruleId":"375","severity":1,"message":"412","line":55,"column":5,"nodeType":"377","messageId":"378","endLine":55,"endColumn":14},{"ruleId":"375","severity":1,"message":"413","line":55,"column":16,"nodeType":"377","messageId":"378","endLine":55,"endColumn":29},{"ruleId":"375","severity":1,"message":"414","line":55,"column":31,"nodeType":"377","messageId":"378","endLine":55,"endColumn":39},{"ruleId":"375","severity":1,"message":"415","line":55,"column":41,"nodeType":"377","messageId":"378","endLine":55,"endColumn":51},{"ruleId":"375","severity":1,"message":"416","line":56,"column":5,"nodeType":"377","messageId":"378","endLine":56,"endColumn":17},{"ruleId":"375","severity":1,"message":"417","line":56,"column":19,"nodeType":"377","messageId":"378","endLine":56,"endColumn":34},{"ruleId":"375","severity":1,"message":"418","line":56,"column":36,"nodeType":"377","messageId":"378","endLine":56,"endColumn":48},{"ruleId":"419","severity":1,"message":"420","line":207,"column":15,"nodeType":"421","endLine":207,"endColumn":34},{"ruleId":"375","severity":1,"message":"409","line":20,"column":11,"nodeType":"377","messageId":"378","endLine":20,"endColumn":21},{"ruleId":"375","severity":1,"message":"410","line":20,"column":23,"nodeType":"377","messageId":"378","endLine":20,"endColumn":31},{"ruleId":"375","severity":1,"message":"411","line":20,"column":33,"nodeType":"377","messageId":"378","endLine":20,"endColumn":41},{"ruleId":"375","severity":1,"message":"412","line":21,"column":9,"nodeType":"377","messageId":"378","endLine":21,"endColumn":18},{"ruleId":"375","severity":1,"message":"413","line":21,"column":20,"nodeType":"377","messageId":"378","endLine":21,"endColumn":33},{"ruleId":"375","severity":1,"message":"414","line":21,"column":35,"nodeType":"377","messageId":"378","endLine":21,"endColumn":43},{"ruleId":"375","severity":1,"message":"415","line":21,"column":45,"nodeType":"377","messageId":"378","endLine":21,"endColumn":55},{"ruleId":"375","severity":1,"message":"416","line":22,"column":9,"nodeType":"377","messageId":"378","endLine":22,"endColumn":21},{"ruleId":"375","severity":1,"message":"417","line":22,"column":23,"nodeType":"377","messageId":"378","endLine":22,"endColumn":38},{"ruleId":"375","severity":1,"message":"418","line":22,"column":40,"nodeType":"377","messageId":"378","endLine":22,"endColumn":52},{"ruleId":"419","severity":1,"message":"420","line":171,"column":15,"nodeType":"421","endLine":171,"endColumn":34},{"ruleId":"375","severity":1,"message":"394","line":3,"column":18,"nodeType":"377","messageId":"378","endLine":3,"endColumn":28},{"ruleId":"375","severity":1,"message":"398","line":11,"column":3,"nodeType":"377","messageId":"378","endLine":11,"endColumn":7},{"ruleId":"375","severity":1,"message":"406","line":21,"column":10,"nodeType":"377","messageId":"378","endLine":21,"endColumn":18},{"ruleId":"380","severity":1,"message":"381","line":12,"column":7,"nodeType":"382","endLine":12,"endColumn":9,"suggestions":"422"},{"ruleId":"380","severity":1,"message":"381","line":24,"column":7,"nodeType":"382","endLine":24,"endColumn":9,"suggestions":"423"},{"ruleId":"375","severity":1,"message":"424","line":4,"column":8,"nodeType":"377","messageId":"378","endLine":4,"endColumn":14},{"ruleId":"380","severity":1,"message":"425","line":19,"column":94,"nodeType":"382","endLine":19,"endColumn":96,"suggestions":"426"},{"ruleId":"390","severity":1,"message":"427","line":9,"column":23,"nodeType":"392","messageId":"393","endLine":9,"endColumn":25},{"ruleId":"375","severity":1,"message":"428","line":1,"column":17,"nodeType":"377","messageId":"378","endLine":1,"endColumn":26},{"ruleId":"375","severity":1,"message":"429","line":1,"column":38,"nodeType":"377","messageId":"378","endLine":1,"endColumn":44},{"ruleId":"375","severity":1,"message":"376","line":4,"column":8,"nodeType":"377","messageId":"378","endLine":4,"endColumn":13},{"ruleId":"375","severity":1,"message":"424","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":14},{"ruleId":"375","severity":1,"message":"424","line":6,"column":8,"nodeType":"377","messageId":"378","endLine":6,"endColumn":14},{"ruleId":"430","severity":1,"message":"431","line":20,"column":15,"nodeType":"432","endLine":20,"endColumn":75},{"ruleId":"433","severity":1,"message":"434","line":13,"column":1,"nodeType":"435","endLine":18,"endColumn":2},{"ruleId":"380","severity":1,"message":"436","line":15,"column":7,"nodeType":"382","endLine":15,"endColumn":13,"suggestions":"437"},{"ruleId":"390","severity":1,"message":"427","line":19,"column":15,"nodeType":"392","messageId":"393","endLine":19,"endColumn":17},{"ruleId":"380","severity":1,"message":"438","line":35,"column":7,"nodeType":"382","endLine":35,"endColumn":9,"suggestions":"439"},{"ruleId":"390","severity":1,"message":"427","line":69,"column":39,"nodeType":"392","messageId":"393","endLine":69,"endColumn":41},{"ruleId":"433","severity":1,"message":"434","line":12,"column":1,"nodeType":"435","endLine":16,"endColumn":2},{"ruleId":"390","severity":1,"message":"391","line":28,"column":18,"nodeType":"392","messageId":"393","endLine":28,"endColumn":20},{"ruleId":"375","severity":1,"message":"398","line":2,"column":10,"nodeType":"377","messageId":"378","endLine":2,"endColumn":14},{"ruleId":"440","severity":1,"message":"441","line":56,"column":29,"nodeType":"442","messageId":"443","endLine":56,"endColumn":69},{"ruleId":"375","severity":1,"message":"444","line":3,"column":7,"nodeType":"377","messageId":"378","endLine":3,"endColumn":14},{"ruleId":"433","severity":1,"message":"434","line":12,"column":1,"nodeType":"435","endLine":16,"endColumn":2},"no-native-reassign",["445"],"no-negated-in-lhs",["446"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'getDefaultMiddleware' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["447"],"'TOTAL' is assigned a value but never used.",["448"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'RouterLink' is defined but never used.","'Icon' is defined but never used.","'eyeFill' is defined but never used.","'eyeOffFill' is defined but never used.","'Link' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'FormControlLabel' is defined but never used.","'showPassword' is assigned a value but never used.","'setShowPassword' is assigned a value but never used.","'values' is assigned a value but never used.","'UserLost' is defined but never used.","'UserJoin' is defined but never used.","'handleChange' is assigned a value but never used.","'user_email' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'user_name' is assigned a value but never used.","'user_birthday' is assigned a value but never used.","'user_sex' is assigned a value but never used.","'user_phone' is assigned a value but never used.","'user_address' is assigned a value but never used.","'user_vaccinated' is assigned a value but never used.","'vaccine_type' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["449"],["450"],"'styled' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'geoInfo'. Either include them or remove the dependency array.",["451"],"Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'useRef' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch', 'props.previousStep.key', and 'props.steps.userinput.value'. Either include them or remove the dependency array. If 'setText' needs the current value of 'props.steps.userinput.value', you can also switch to useReducer instead of useState and read 'props.steps.userinput.value' in the reducer.",["452"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.previousStep.message', and 'symptom'. Either include them or remove the dependency array.",["453"],"no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'headers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"454","fix":"455"},{"desc":"454","fix":"456"},{"desc":"454","fix":"457"},{"desc":"454","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},"Update the dependencies array to be: [dispatch]",{"range":"465","text":"466"},{"range":"467","text":"466"},{"range":"468","text":"466"},{"range":"469","text":"466"},"Update the dependencies array to be: [dispatch, geoInfo]",{"range":"470","text":"471"},"Update the dependencies array to be: [dispatch, props.previousStep.key, props.steps.userinput.value, text]",{"range":"472","text":"473"},"Update the dependencies array to be: [dispatch, props.previousStep.message, symptom]",{"range":"474","text":"475"},[929,931],"[dispatch]",[713,715],[436,438],[991,993],[943,945],"[dispatch, geoInfo]",[593,599],"[dispatch, props.previousStep.key, props.steps.userinput.value, text]",[1494,1496],"[dispatch, props.previousStep.message, symptom]"]
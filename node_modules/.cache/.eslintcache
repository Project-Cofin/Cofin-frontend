[{"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\index.js":"1","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\serviceWorker.js":"2","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\App.js":"3","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\app\\store.js":"4","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\index.js":"5","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\index.js":"6","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\NewsPage.js":"7","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\index.js":"8","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\index.js":"9","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\medpt\\MedptPage.js":"10","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\pages\\ChatbotPage.js":"11","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\index.js":"12","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\NewsTable.js":"13","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\medpt\\MedptTable.js":"14","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\HeaderChart.js":"15","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\AppBugReports.js":"16","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\StackChart.js":"17","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\MainChart.js":"18","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\ChartLayOut.js":"19","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\pages\\ChartPage.js":"20","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\index.js":"21","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnAWritePage.js":"22","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnABoardPage.js":"23","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\components\\MsgTable.js":"24","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserLost.js":"25","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\pages\\LoginPage.js":"26","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\pages\\UserPage.js":"27","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\pages\\MsgPage.js":"28","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\Unregister.js":"29","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserJoin.js":"30","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserInfo.js":"31","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserLogin.js":"32","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\demo-data\\data-vizualization.js":"33","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\index.js":"34","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\WorldMap.js":"35","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\Options.js":"36","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\Geolocation.js":"37","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\MapLayOut.js":"38","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\LocalMap.js":"39","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\pages\\LocalMapPage.js":"40","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\pages\\WorldMapPage.js":"41","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\LocalMapInfo.js":"42","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAWrite.js":"43","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAList.js":"44","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Header.js":"45","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Footer.js":"46","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\ChatLayOut.js":"47","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\Chat.js":"48","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Navi.js":"49","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\LayOut.js":"50","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Icon.js":"51","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Login.js":"52","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\home\\components\\CofinHome.js":"53","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\common\\Pagination.js":"54","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\reducer\\mapSlice.js":"55","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\reducer\\mapAPI.js":"56","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\utils\\paginate.js":"57","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\ChatModules.js":"58","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\reducer\\chatbotAPI.js":"59","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\reducer\\chatbotSlice.js":"60","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\EventMarkerContainer.js":"61","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnAViewPage.js":"62","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAView.js":"63"},{"size":721,"mtime":1636513052224,"results":"64","hashOfConfig":"65"},{"size":5014,"mtime":1633311719727,"results":"66","hashOfConfig":"65"},{"size":1665,"mtime":1640754869553,"results":"67","hashOfConfig":"65"},{"size":446,"mtime":1640312194105,"results":"68","hashOfConfig":"65"},{"size":223,"mtime":1640754873157,"results":"69","hashOfConfig":"65"},{"size":390,"mtime":1636620223247,"results":"70","hashOfConfig":"65"},{"size":452,"mtime":1636606919521,"results":"71","hashOfConfig":"65"},{"size":142,"mtime":1636680997807,"results":"72","hashOfConfig":"65"},{"size":1184,"mtime":1640240349462,"results":"73","hashOfConfig":"65"},{"size":464,"mtime":1636606979764,"results":"74","hashOfConfig":"65"},{"size":278,"mtime":1637213531615,"results":"75","hashOfConfig":"65"},{"size":825,"mtime":1640312192510,"results":"76","hashOfConfig":"65"},{"size":2230,"mtime":1638233196908,"results":"77","hashOfConfig":"65"},{"size":6790,"mtime":1638233133346,"results":"78","hashOfConfig":"65"},{"size":2267,"mtime":1636598721072,"results":"79","hashOfConfig":"65"},{"size":1456,"mtime":1636598711554,"results":"80","hashOfConfig":"65"},{"size":1869,"mtime":1636598749728,"results":"81","hashOfConfig":"65"},{"size":7184,"mtime":1636608359803,"results":"82","hashOfConfig":"65"},{"size":1050,"mtime":1638170852420,"results":"83","hashOfConfig":"65"},{"size":572,"mtime":1636620006030,"results":"84","hashOfConfig":"65"},{"size":302,"mtime":1640310611473,"results":"85","hashOfConfig":"65"},{"size":273,"mtime":1637731973167,"results":"86","hashOfConfig":"65"},{"size":270,"mtime":1637913259806,"results":"87","hashOfConfig":"65"},{"size":3777,"mtime":1638233185034,"results":"88","hashOfConfig":"65"},{"size":2962,"mtime":1640240443911,"results":"89","hashOfConfig":"65"},{"size":543,"mtime":1640248448315,"results":"90","hashOfConfig":"65"},{"size":668,"mtime":1640568740964,"results":"91","hashOfConfig":"65"},{"size":515,"mtime":1636680930174,"results":"92","hashOfConfig":"65"},{"size":957,"mtime":1640222712535,"results":"93","hashOfConfig":"65"},{"size":8335,"mtime":1640568913589,"results":"94","hashOfConfig":"65"},{"size":7736,"mtime":1640568925899,"results":"95","hashOfConfig":"65"},{"size":3389,"mtime":1640569255939,"results":"96","hashOfConfig":"65"},{"size":34574,"mtime":1636598761912,"results":"97","hashOfConfig":"65"},{"size":488,"mtime":1637201633090,"results":"98","hashOfConfig":"65"},{"size":1394,"mtime":1638339877641,"results":"99","hashOfConfig":"65"},{"size":1165,"mtime":1640591807851,"results":"100","hashOfConfig":"65"},{"size":1044,"mtime":1640682729685,"results":"101","hashOfConfig":"65"},{"size":732,"mtime":1638339822946,"results":"102","hashOfConfig":"65"},{"size":2488,"mtime":1640750615130,"results":"103","hashOfConfig":"65"},{"size":377,"mtime":1637221864787,"results":"104","hashOfConfig":"65"},{"size":239,"mtime":1638151709283,"results":"105","hashOfConfig":"65"},{"size":751,"mtime":1640592059083,"results":"106","hashOfConfig":"65"},{"size":4216,"mtime":1639987773008,"results":"107","hashOfConfig":"65"},{"size":7682,"mtime":1640760651259,"results":"108","hashOfConfig":"65"},{"size":466,"mtime":1640750617784,"results":"109","hashOfConfig":"65"},{"size":1445,"mtime":1638164230143,"results":"110","hashOfConfig":"65"},{"size":621,"mtime":1640310489171,"results":"111","hashOfConfig":"65"},{"size":7340,"mtime":1640310490501,"results":"112","hashOfConfig":"65"},{"size":1902,"mtime":1640750617096,"results":"113","hashOfConfig":"65"},{"size":560,"mtime":1638170851027,"results":"114","hashOfConfig":"65"},{"size":513,"mtime":1640750616354,"results":"115","hashOfConfig":"65"},{"size":754,"mtime":1640248391873,"results":"116","hashOfConfig":"65"},{"size":299,"mtime":1636438153363,"results":"117","hashOfConfig":"65"},{"size":1231,"mtime":1640247398379,"results":"118","hashOfConfig":"65"},{"size":1603,"mtime":1640585745037,"results":"119","hashOfConfig":"65"},{"size":528,"mtime":1640571383713,"results":"120","hashOfConfig":"65"},{"size":377,"mtime":1640247397770,"results":"121","hashOfConfig":"65"},{"size":3523,"mtime":1640310507041,"results":"122","hashOfConfig":"65"},{"size":487,"mtime":1640571393471,"results":"123","hashOfConfig":"65"},{"size":1722,"mtime":1640310591508,"results":"124","hashOfConfig":"65"},{"size":1119,"mtime":1640750614107,"results":"125","hashOfConfig":"65"},{"size":268,"mtime":1640754365694,"results":"126","hashOfConfig":"65"},{"size":10360,"mtime":1640762515414,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"s16scj",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"130"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"130"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"130"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\index.js",[],["273","274"],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\App.js",["275"],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\app\\store.js",["276"],"import {\n  configureStore,\n  combineReducers,  // redux의 reducer의 집합과 같다.\n  getDefaultMiddleware\n} from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport { map } from 'features/map'\nimport { chatbot } from 'features/chatbot'\n\nconst rootReducer = combineReducers({map, chatbot})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\n});","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\NewsPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\medpt\\MedptPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\pages\\ChatbotPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\news\\NewsTable.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\medpt\\MedptTable.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\HeaderChart.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\AppBugReports.js",["277"],"import { Icon } from '@iconify/react';\r\nimport bugFilled from '@iconify/icons-ant-design/bug-filled';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, Typography } from '@mui/material';\r\n// utils\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  padding: theme.spacing(5, 0),\r\n  color: theme.palette.error.darker,\r\n  backgroundColor: theme.palette.error.lighter\r\n}));\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  width: theme.spacing(8),\r\n  height: theme.spacing(8),\r\n  justifyContent: 'center',\r\n  marginBottom: theme.spacing(3),\r\n  color: theme.palette.error.dark,\r\n  backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.error.dark, 0)} 0%, ${alpha(\r\n    theme.palette.error.dark,\r\n    0.24\r\n  )} 100%)`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TOTAL = 234;\r\n\r\nexport default function AppBugReports() {\r\n  return (\r\n    <RootStyle>\r\n      <IconWrapperStyle>\r\n        <Icon icon={bugFilled} width={24} height={24} />\r\n      </IconWrapperStyle>\r\n      <Typography variant=\"h3\">3</Typography>\r\n      <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\r\n        Bug Reports\r\n      </Typography>\r\n    </RootStyle>\r\n  );\r\n}\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\StackChart.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\MainChart.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\components\\ChartLayOut.js",["278"],"import * as React from 'react';\r\nimport Header from 'features/common/components/Header'\r\nimport Footer from 'features/common/components/Footer'\r\nimport styled from \"styled-components\";\r\n\r\nimport 'features/corona/style/ChartLayOutStyle.css'\r\nimport { AppBugReports, HeaderChart, MainChart, StackChart } from 'features/corona/index';\r\n\r\nconst ChartLayOut = (props) => {\r\n  return (\r\n    <div class = \"wrapper\">\r\n      <div class=\"Chartcontainer\">\r\n      <span className=\"header\"><Header/></span> \r\n\r\n        <span class =\"item6\"><HeaderChart/>헤드차트</span>\r\n        <span class =\"item7\"><AppBugReports/>앱1</span>\r\n        <span class =\"item8\"><AppBugReports/>앱2</span>\r\n        <span class =\"item9\"><AppBugReports/>앱3</span>\r\n        <span class =\"item10\"><AppBugReports/>앱4</span>\r\n        <span class =\"item11\"><StackChart/>스택차트</span>\r\n        <span class =\"item12\"><MainChart/>메인차트</span>\r\n        \r\n      <span class=\"ChartFooter\"><Footer/></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartLayOut;\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\pages\\ChartPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnAWritePage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnABoardPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\components\\MsgTable.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserLost.js",["279","280","281","282","283","284","285","286","287","288","289","290"],"import React, {useState} from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {UserPage} from 'features/user'\r\n\r\nexport default function UserLost(){\r\n\r\n    const navigate = useNavigate();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const LostSchema = Yup.object().shape({\r\n        user_email: Yup.string().email().required('*필수 항목'),\r\n        // user_phone: Yup.string().required('*필수 항목')\r\n        // because user/views.py searches by user_email only\r\n      });\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            user_email: ''           \r\n            // user_phone:'',\r\n    },\r\n    validationSchema: LostSchema,\r\n    onSubmit: () => {\r\n        // need pop up with id/pw info\r\n        navigate({ UserPage }, { replace: true });        \r\n    }});\r\n    const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n    return(\r\n        <div align=\"center\" style={{ display: \"inline-block\" }}>\r\n                <h2>PW 찾기</h2>\r\n            <FormikProvider value={formik}>\r\n                <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                    <Stack spacing={3}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoComplete=\"user_email\"\r\n                            type=\"email\"\r\n                            label=\"이메일\"\r\n                            {...getFieldProps('email')}\r\n                            error={Boolean(touched.user_email && errors.user_email)}\r\n                            helperText={touched.user_email && errors.user_email}\r\n                        />\r\n                        {/* <TextField\r\n                            fullWidth\r\n                            label=\"연락처\"\r\n                            {...getFieldProps('user_phone')}\r\n                            error={Boolean(touched.user_phone && errors.user_phone)}\r\n                            helperText={touched.user_phone && errors.user_phone}\r\n                        />*/}\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            loading={isSubmitting}>\r\n                            PW 찾기\r\n                        </LoadingButton>        \r\n                    </Stack>\r\n                </Form>\r\n            </FormikProvider>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\pages\\LoginPage.js",["291","292"],"import React from 'react'\r\nimport {UserLogin,UserLost,UserJoin} from 'features/user'\r\nimport { LayOut } from 'features/common'\r\n\r\n\r\nexport default function LoginPage(){\r\n    return(\r\n    <LayOut>\r\n        <div align=\"center\" style={{ display: \"inline-block\" }}>\r\n        \r\n            <ul type='none'>\r\n            <li></li>\r\n            <br/><br/>\r\n            <li><UserLogin/></li>\r\n            <br/><br/>\r\n            <li><a href=\"/user\">회원 가입</a></li>\r\n            <br/><br/></ul>\r\n        \r\n        </div>\r\n    </LayOut>\r\n    )\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\pages\\UserPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\message\\pages\\MsgPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\Unregister.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserJoin.js",["293","294","295","296","297","298","299","300","301","302","303","304"],"import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { useNavigate } from 'react-router';\r\n// material\r\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\n\r\n\r\nexport default function RegisterForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [user, setUser] = useState({\r\n    user_email: '',\r\n    username:'',\r\n    password: '',\r\n    user_name: '',\r\n    user_birthday: '',\r\n    user_sex:'',\r\n    user_phone:'',\r\n    user_address:'',\r\n    user_vaccinated:'',\r\n    vaccine_type:''\r\n  })\r\n  const handleChange = e => {\r\n    const {name, value} = e.target\r\n    setUser({\r\n      ...user,\r\n      [name]:value\r\n    })\r\n    console.log(e.target.name);\r\n    console.log(setUser);\r\n  }\r\n\r\n  const handleSubmit=e=>{\r\n    e.preventDefault();\r\n    console.log(`가입 : ${JSON.stringify(user)}`)\r\n    RegisterForm({user})\r\n    .then(res=>{alert(`가입 완료: ${res.data.result}`)})\r\n    .catch(err=>{alert(`가입 실패: ${err}`)})\r\n  }\r\n\r\n  // const userJoin=joinRequest=>axios.post(`${SERVER}/??`, JSON.stringify(joinRequest),{headers})\r\n  \r\n//   const SERVER='http://127.0.0.1:8000/api/user/join'\r\n// // ????\r\n\r\n  const{user_email, username, password, \r\n    user_name, user_birthday, user_sex, user_phone, \r\n    user_address, user_vaccinated, vaccine_type}=`user`\r\n  \r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    user_email: Yup.string().email('메일 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\r\n    password: Yup.string().required('비밀번호 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),  \r\n    passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다'),\r\n    username: Yup.string().required('아이디 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),\r\n    user_birthday: Yup.string().required('생년월일 8자리 입력해주세요').min(8),\r\n    user_sex: Yup.string().required('m / f'),\r\n    user_phone: Yup.string().required('연락처 11자리 입력해주세요'),\r\n    user_address: Yup.string().required(),\r\n    user_vaccinated: Yup.string().required('yes/ no 백신 접종완료 여부를 알려주세요'),\r\n    vaccine_type: Yup.string('대중적인 명칭으로 기입해주세요').max(30)        \r\n    });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      user_email: '',\r\n      username:'',\r\n      password: '',\r\n      user_name: '',\r\n      user_birthday: '',\r\n      user_sex:'',\r\n      user_phone:'',\r\n      user_address:'',\r\n      user_vaccinated:'',\r\n      vaccine_type:''\r\n    },\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: () => {\r\n      navigate('/', { replace: true });\r\n    }\r\n  });\r\n\r\n  const { errors, touched, isSubmitting, getFieldProps } = formik;\r\n\r\n  return (\r\n    <div align=\"center\" style={{ display: \"inline-block\"}}>\r\n      <h1><b>회원 가입</b></h1>\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"이름\"\r\n                {...getFieldProps('user_name')}\r\n                error={Boolean(touched.user_name && errors.user_name)}\r\n                helperText={touched.user_name && errors.user_name}\r\n              />\r\n  \r\n              <TextField\r\n                fullWidth\r\n                label=\"생년월일\"\r\n                {...getFieldProps('user_birthday')}\r\n                error={Boolean(touched.user_birthday && errors.user_birthday)}\r\n                helperText={touched.user_birthday && errors.user_birthday}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"성별\"\r\n                {...getFieldProps('user_sex')}\r\n                error={Boolean(touched.user_sex && errors.user_sex)}\r\n                helperText={touched.user_sex && errors.user_sex}\r\n                // 성별은 radio? \r\n              /></Stack>\r\n        <TextField\r\n              fullWidth\r\n              autoComplete=\"user_email\"\r\n              type=\"email\"\r\n              label=\"이메일=로그인 아이디\"\r\n              {...getFieldProps('user_email')}\r\n              error={Boolean(touched.user_email && errors.user_email)}\r\n              helperText={touched.user_email && errors.user_email}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"6~12자리 비밀번호\"\r\n              {...getFieldProps('password')}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"비밀번호 확인\"\r\n              {...getFieldProps('password')}  // how to make pw chk?\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n              // 확인!!\r\n            />\r\n            \r\n              \r\n              <TextField\r\n                fullWidth\r\n                label=\"01000000000\"\r\n                {...getFieldProps('user_phone')}\r\n                error={Boolean(touched.user_phone && errors.user_phone)}\r\n                helperText={touched.user_phone && errors.user_phone}\r\n              />\r\n            \r\n              <TextField\r\n                fullWidth\r\n                label=\"주소지\"\r\n                {...getFieldProps('user_address')}\r\n                error={Boolean(touched.user_address && errors.user_address)}\r\n                helperText={touched.user_address && errors.user_address}\r\n              />\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>             \r\n              <TextField\r\n                fullWidth\r\n                label=\"백신접종 여부 (Y/N)\"\r\n                {...getFieldProps('user_vaccinated')}\r\n                error={Boolean(touched.user_vaccinated && errors.user_vaccinated)}\r\n                helperText={touched.user_vaccinated && errors.user_vaccinated}\r\n              />\r\n  \r\n              <TextField\r\n                fullWidth\r\n                label=\"접종 백신 종류\"\r\n                {...getFieldProps('vaccine_type')}\r\n                error={Boolean(touched.vaccine_type && errors.vaccine_type)}\r\n                helperText={touched.vaccine_type && errors.vaccine_type}\r\n              /></Stack>          \r\n            \r\n            <Button variant=\"outlined\"\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              loading={isSubmitting}\r\n              onClick={()=>{\r\n                console.log('가입 완료.')\r\n            }}>\r\n              회원 가입\r\n            </Button>\r\n        </Stack>\r\n      </Form>\r\n    </FormikProvider>\r\n    </div>\r\n  );\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserInfo.js",["305","306","307","308","309","310","311","312","313","314","315"],"import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { useNavigate } from 'react-router';\r\n// material\r\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\n\r\nexport default function UserInfo(){\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const{user_email, username, password, \r\n        user_name, user_birthday, user_sex, user_phone, \r\n        user_address, user_vaccinated, vaccine_type}=`user`\r\n\r\n    const EditSchema = Yup.object().shape({\r\n        user_email: Yup.string().email().required('변경 불가'), //no chg?\r\n        password: Yup.string().required('변경 가능').min(6, '6 ~ 12자 이내로 작성해주세요'),  \r\n        passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다'),\r\n        username: Yup.string().required('변경 불가'), // no chg\r\n        user_sex: Yup.string().required('변경 불가'),  // no chg\r\n        user_phone: Yup.string().required('연락처 11자리 입력해주세요'),  //no chg?\r\n        user_address: Yup.string().required(),\r\n        user_vaccinated: Yup.string().required('백신 접종완료 여부를 알려주세요'),\r\n        vaccine_type: Yup.string()        \r\n    });\r\n    \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            user_email: '',\r\n            username:'',\r\n            password: '',\r\n            user_name: '',\r\n            user_birthday: '',\r\n            user_sex:'',\r\n            user_phone:'',\r\n            user_address:'',\r\n            user_vaccinated:'',\r\n            vaccine_type:''\r\n        },\r\n        validationSchema: EditSchema,\r\n        onSubmit: () => {\r\n            navigate('/userinfo', { replace: true }); // refreshes page after edit?\r\n        }\r\n    });\r\n\r\n    const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\r\n\r\n    return(\r\n        <div align=\"center\" style={{ display: \"inline-block\" , marginLeft:\"300px\"}}>\r\n            <h1>회원 정보</h1>\r\n            {/* shows all user info, with boxes for editables: */}\r\n            <FormikProvider value={formik}>\r\n            <Form autoComplete='off' onSubmit={handleSubmit}>\r\n                <Stack spacing={3}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n                <TextField\r\n                fullWidth\r\n                label=\"이름\"\r\n                {...getFieldProps('user_name')}\r\n                error={Boolean(touched.user_name && errors.user_name)}\r\n                helperText={touched.user_name && errors.user_name}\r\n              />\r\n  \r\n              <TextField\r\n                fullWidth\r\n                label=\"생년월일\"\r\n                {...getFieldProps('user_birthday')}\r\n                error={Boolean(touched.user_birthday && errors.user_birthday)}\r\n                helperText={touched.user_birthday && errors.user_birthday}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"성별\"\r\n                {...getFieldProps('user_sex')}\r\n                error={Boolean(touched.user_sex && errors.user_sex)}\r\n                helperText={touched.user_sex && errors.user_sex}\r\n                // 성별은 radio? \r\n              /></Stack>\r\n        <TextField\r\n              fullWidth\r\n              autoComplete=\"user_email\"\r\n              type=\"email\"\r\n              label=\"이메일=로그인 아이디\"\r\n              {...getFieldProps('user_email')}\r\n              error={Boolean(touched.user_email && errors.user_email)}\r\n              helperText={touched.user_email && errors.user_email}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"6~12자리 비밀번호\"\r\n              {...getFieldProps('password')}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"current-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              label=\"비밀번호 확인\"\r\n              {...getFieldProps('password')}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n              // 확인!!\r\n            />\r\n            \r\n              \r\n              <TextField\r\n                fullWidth\r\n                label=\"010-0000-0000\"\r\n                {...getFieldProps('user_phone')}\r\n                error={Boolean(touched.user_phone && errors.user_phone)}\r\n                helperText={touched.user_phone && errors.user_phone}\r\n              />\r\n            \r\n              <TextField\r\n                fullWidth\r\n                label=\"주소지\"\r\n                {...getFieldProps('user_address')}\r\n                error={Boolean(touched.user_address && errors.user_address)}\r\n                helperText={touched.user_address && errors.user_address}\r\n              />\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>             \r\n              <TextField\r\n                fullWidth\r\n                label=\"백신접종 여부 (Y/N)\"\r\n                {...getFieldProps('user_vaccinated')}\r\n                error={Boolean(touched.user_vaccinated && errors.user_vaccinated)}\r\n                helperText={touched.user_vaccinated && errors.user_vaccinated}\r\n              />\r\n  \r\n              <TextField\r\n                fullWidth\r\n                label=\"접종 백신 종류\"\r\n                {...getFieldProps('vaccine_type')}\r\n                error={Boolean(touched.vaccine_type && errors.vaccine_type)}\r\n                helperText={touched.vaccine_type && errors.vaccine_type}\r\n              /></Stack>  \r\n                <ul>\r\n                <li>pw</li>\r\n                <li>phone</li>\r\n                <li>address</li>\r\n                <li>vaccinated</li>\r\n                <li>vaccine type</li>\r\n            </ul>\r\n            <Button variant=\"outlined\"\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              loading={isSubmitting}\r\n              onClick={()=>{\r\n                  console.log('수정 완료.')\r\n              }}>\r\n              수정하기\r\n            </Button>\r\n            <Button variant=\"\" \r\n            onClick={()=>{\r\n              \r\n            }}></Button>\r\n            </Stack></Form></FormikProvider>\r\n        </div>\r\n)};\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\user\\components\\UserLogin.js",["316","317","318"],"import React, {useState} from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport { Button } from '@mui/material';\r\n// import Navigation from 'common/Navigation';\r\nimport { UserLost, UserPage } from 'features/user';\r\n\r\nexport default function LoginForm() {\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email().required('*필수 항목'),\r\n    password: Yup.string().required('*필수 항목')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      remember: true\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: () => {\r\n      navigate({UserPage}, { replace: true });\r\n    }\r\n  });\r\n\r\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((show) => !show);\r\n  };\r\n\r\n  return (\r\n    <div align=\"center\" style={{ display: \"inline-block\", marginLeft:\"200px\", width: \"800px\" }}>\r\n      <h1><b>로그인</b></h1>\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"user_email\"\r\n            type=\"email\"\r\n            label=\"이메일\"\r\n            {...getFieldProps('email')}\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"current-password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            label=\"비밀번호\"\r\n            {...getFieldProps('password')}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\r\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\r\n          <FormControlLabel\r\n            control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\r\n            label=\"로그인 상태 유지\"\r\n          />\r\n\r\n          <a href=\"lost\"><small>비밀번호 찾기</small></a>\r\n        </Stack>\r\n\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          loading={isSubmitting}\r\n          onClick={()=>{\r\n            \r\n            console.log(`success`)\r\n        }}>\r\n          로그인\r\n        </Button>\r\n      </Form>\r\n    </FormikProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\corona\\demo-data\\data-vizualization.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\WorldMap.js",["319"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { WorldMap } from 'react-svg-worldmap';\r\nimport styled from 'styled-components';\r\nimport { worldMap } from \"features/map/reducer/mapSlice\";\r\n\r\nexport default function World() {\r\n    const maps = useSelector(state => state.map.mapsState)\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n      dispatch(worldMap())\r\n    },[])\r\n\r\n    const stylingFunction = ({\r\n        countryValue,\r\n        minValue,\r\n        maxValue,\r\n        country,\r\n        color,\r\n      }) => {\r\n        const opacityLevel = 0.1 + (1.0 * (countryValue - minValue)) / (maxValue - minValue);\r\n        return {\r\n          // fill: country === 'US' ? 'blue' : color,\r\n          fill: countryValue < 300000 ? 'green' : color,\r\n          fillOpacity: opacityLevel,\r\n          stroke: 'brown',\r\n          strokeWidth: 1,\r\n          strokeOpacity: 0.2,\r\n          cursor: 'pointer',\r\n        };\r\n      };\r\n\r\n    return (<>\r\n        <WorldMapDiv className=\"App\" >\r\n            <WorldMap color=\"red\" title=\"Top 10 Coronavirus Rates\" value-suffix=\"people\" size=\"xxl\" \r\n            data={maps.map(x => {return {country: x.meta, value: parseInt(x.cases)}})} \r\n            frame={true} styleFunction={stylingFunction} />\r\n        </WorldMapDiv>\r\n    </>) \r\n}\r\n\r\nconst WorldMapDiv = styled.div`\r\n  text-align: center;\r\n`","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\Options.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\Geolocation.js",["320"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { medPoints } from \"features/map/reducer/mapSlice\";\r\n\r\nexport default function Geolocation() {\r\n  const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (navigator.geolocation) { // GPS를 지원하면\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n            const latlng = [position.coords.latitude, position.coords.longitude]\r\n            dispatch(medPoints({'latitude': latlng[0], 'longitude': latlng[1]}))\r\n            window.localStorage.setItem('sessionGeo', [...latlng])\r\n            }, function(error) {\r\n              console.error(error);\r\n            }, {\r\n              enableHighAccuracy: false,\r\n              maximumAge: 0,\r\n              timeout: Infinity\r\n            });\r\n          } else {\r\n            alert('GPS를 지원하지 않습니다');\r\n            window.localStorage.setItem('sessionGeo', ['37.49939596822029', '127.02902373805311'])\r\n          }\r\n    },[])\r\n    return(<></>)\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\MapLayOut.js",["321"],"import React from 'react';\r\nimport Header from 'features/common/components/Header'\r\nimport Footer from 'features/common/components/Footer'\r\nimport styled from \"styled-components\";\r\nimport 'features/map/style/Map.css'\r\nimport { LocalMap, LocalMapInfo, Options } from \"features/map/index\"\r\n\r\n\r\nconst MapLayOut = (props) => {\r\n  return (\r\n    <div class = \"wrapper\">\r\n      <div class=\"Mapcontainer\">\r\n      <span className=\"header\"><Header/></span>  \r\n\r\n        <span class =\"Options\"><Options/></span><br/>\r\n        <span class =\"LocalMap\"><LocalMap/></span>\r\n        <span class =\"LocalMapInfo\"><LocalMapInfo/></span>\r\n\r\n        <span class=\"Footer\"><Footer/></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapLayOut;\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\LocalMap.js",["322"],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\pages\\LocalMapPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\pages\\WorldMapPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\LocalMapInfo.js",["323"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LocalMapInfo = () => {\r\n    const info = useSelector(state => state.map.mapState )\r\n    return(<>\r\n        {\r\n            info.name == '' ? \r\n            <></> :\r\n            <InfoUl>\r\n                <li>\r\n                    <InfoDiv>\r\n                        <h1>{info.name}</h1>\r\n                        <label>{info.meta}</label>\r\n                    </InfoDiv>\r\n                </li>\r\n            </InfoUl>\r\n        }\r\n\r\n    </>)\r\n}\r\n\r\nexport default LocalMapInfo\r\n\r\nconst InfoDiv = styled.div`\r\n\r\n    width: 1300px;\r\n    height: 300px;\r\n    display: inline-block;\r\n`\r\n\r\nconst InfoUl = styled.ul`\r\n\r\n    list-style: none;\r\n`","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAWrite.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAList.js",["324","325","326"],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Header.js",["327"],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Footer.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\ChatLayOut.js",["328"],"import * as React from 'react';\r\nimport Header from 'features/common/components/Header'\r\nimport Footer from 'features/common/components/Footer'\r\nimport {Chat} from 'features/chatbot/index'\r\nimport 'features/chatbot/style/ChatLayOutStyle.css'\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst ChatLayOut = (props) => {\r\n  return (\r\n    <div class = \"wrapper\">\r\n      <div class=\"Chatcontainer\">\r\n        <span className=\"header\"><Header/></span>  \r\n\r\n        <span class =\"item13\"><Chat/></span>\r\n        \r\n        <span class =\"Footer\"><Footer/></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatLayOut;\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\Chat.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Navi.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\LayOut.js",["329"],"import * as React from 'react';\r\nimport Header from 'features/common/components/Header'\r\nimport Footer from 'features/common/components/Footer'\r\nimport styled from \"styled-components\";\r\nimport 'features/common/style/LayOutStyle.css'\r\n\r\nconst LayOut = (props) => {\r\n  return (\r\n    <div class = \"wrapper\">\r\n      <div class=\"layoutcontainer\">\r\n        <span className=\"header\"><Header/></span> \r\n          <span class =\"main\">{props.children}</span>\r\n        <span class=\"Footer\"><Footer/></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LayOut;\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Icon.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\common\\components\\Login.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\home\\components\\CofinHome.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\common\\Pagination.js",["330"],"import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n\r\n  const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\r\n  if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\r\n\r\n  const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n\r\n  return (\r\n    <nav> {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li \r\n            key={page} \r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\r\n            style={{ cursor: \"pointer\" }}>\r\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>{page}</a> {/* 페이지 번호 클릭 이벤트 처리기 지정 */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\reducer\\mapSlice.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\reducer\\mapAPI.js",["331"],"import axios from \"axios\"\r\nconst SERVER = 'http://127.0.0.1:8001/api/map'\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  'Authorization': 'JWT fefege..'\r\n}\r\n\r\nconst world = () => axios.get(`${SERVER}/world`)\r\nconst medPoint = x => axios.get(`${SERVER}/med-point/${x}`)\r\nconst medPoints = x => axios.post(`${SERVER}/med-points`, JSON.stringify(x), {headers})\r\nconst cases = x => axios.post(`${SERVER}/cases-points`, JSON.stringify(x), {headers})\r\n\r\nexport default {\r\n  world,\r\n  medPoint,\r\n  medPoints,\r\n  cases,\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\utils\\paginate.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\components\\ChatModules.js",["332","333","334","335"],"import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { answer, answerStatus } from \"features/chatbot/reducer/chatbotSlice\"\r\n\r\nexport function Ask(props){\r\n    const dispatch = useDispatch()\r\n    const [ text, setText ] = useState('')\r\n    const key = props.previousStep.key\r\n    const botAnswer = {\r\n      [key]:useSelector((state)=>state.chatbot.answersState[key])\r\n    }\r\n    useEffect(()=>{\r\n      setText(props.steps.userinput.value)\r\n      dispatch(answer({'key': props.previousStep.key,'query':props.steps.userinput.value}))\r\n    },[text])\r\n      return (\r\n        <>\r\n        {/* <div>{text}이(가) 라고 질문하신 것이 맞습니까?</div> */}\r\n        {text == \"체크리스트\" ? <button onClick={() => props.triggerNextStep({trigger: 'fever'})} \r\n        style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"1em 2em 5px 2em\", cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\"}} >\r\n          백신 접종 증상 체크하기!\r\n        </button>:<div>{botAnswer[key]}</div>}\r\n        </>\r\n      );\r\n  }\r\n  \r\n  \r\n  export function CheckStatus(props){\r\n    const dispatch = useDispatch()\r\n    const pain_arr = ['fever', 'ino_area', 'swell', 'sick', 'pain', 'fatigue', 'allergy', 'etc', 'welcome']\r\n    const symptom = props.previousStep.value.slice(0, -1)\r\n    const choice = useSelector((state)=>state.chatbot.healthStates[symptom])\r\n    useEffect(()=>{\r\n      dispatch(answerStatus({'symptom': symptom, 'details':props.previousStep.message}))\r\n    },[])\r\n      return (\r\n        <>\r\n        <div>{choice['answer']}</div>\r\n        <button style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"0.7em auto\", \r\n                        cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\", width: \"10em\", display: \"block\"}} \r\n                onClick={() => {\r\n                  try {\r\n                    if(props.previousStep.value.slice(-1)>2){\r\n                      window.localStorage.setItem(\"counter\", parseInt(localStorage.getItem(\"counter\"))+1)\r\n                    }\r\n                    props.triggerNextStep((pain_arr.indexOf(symptom)+1) < 8 ? {trigger: pain_arr[pain_arr.indexOf(symptom)+1]} : {trigger: 'alert'})\r\n                  } catch (error) {\r\n                  }\r\n                }}>\r\n          이어서 진행하기\r\n        </button>\r\n        <button style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"0.5em auto\", \r\n                        cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\", width: \"10em\", display: \"block\"}} \r\n                onClick={() => {\r\n                  if(props.previousStep.value.slice(-1)>2){\r\n                    window.localStorage.setItem(\"counter\", parseInt(localStorage.getItem(\"counter\"))+1)\r\n                  }\r\n                  props.triggerNextStep({trigger: 'alert'})\r\n                }}>\r\n          그만하기\r\n        </button>\r\n        </>\r\n      );\r\n  }\r\n  \r\n  export function AlertMessage(){\r\n    return(<>\r\n    {\r\n      localStorage.getItem(\"counter\") == 0\r\n      ? <div>주요 이상 반응이 없습니다.</div>\r\n      : <div>주요 이상 반응이 '{localStorage.getItem(\"counter\")}' 건 있습니다. 가까운 의료기관에 방문하시기를 추천드립니다.</div>\r\n    }\r\n    </>)\r\n  }\r\n  \r\n  export function ResetMessage(){\r\n    // localStorage.setItem(\"counter\", 0)\r\n    return(<>\r\n      <div>\r\n        또 다른 궁금하신 부분이 있나요?\r\n      </div>\r\n    </>)\r\n  }","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\reducer\\chatbotAPI.js",["336"],"import axios from \"axios\"\r\nconst SERVER = 'http://127.0.0.1:8002/api/chatbot'\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n  'Authorization': 'JWT fefege..'\r\n}\r\n\r\nconst chatAnswer = x => axios.post(`${SERVER}/chat-answer`, JSON.stringify(x), {headers})\r\nconst statusAnswer = x => axios.post(`${SERVER}/find-by-detail`, JSON.stringify(x), {headers})\r\nconst getStatus = () => axios.get(`${SERVER}/find-all`)\r\n\r\nexport default {\r\n  chatAnswer,\r\n  statusAnswer,\r\n  getStatus\r\n}","C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\chatbot\\reducer\\chatbotSlice.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\map\\components\\EventMarkerContainer.js",["337"],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\pages\\QnAViewPage.js",[],"C:\\Users\\bitcamp\\Desktop\\cofin-msa-board\\frontend\\src\\features\\QnA\\components\\QnAView.js",["338"],{"ruleId":"339","replacedBy":"340"},{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","severity":1,"message":"344","line":2,"column":8,"nodeType":"345","messageId":"346","endLine":2,"endColumn":13},{"ruleId":"343","severity":1,"message":"347","line":4,"column":3,"nodeType":"345","messageId":"346","endLine":4,"endColumn":23},{"ruleId":"343","severity":1,"message":"348","line":36,"column":7,"nodeType":"345","messageId":"346","endLine":36,"endColumn":12},{"ruleId":"343","severity":1,"message":"349","line":4,"column":8,"nodeType":"345","messageId":"346","endLine":4,"endColumn":14},{"ruleId":"343","severity":1,"message":"350","line":3,"column":18,"nodeType":"345","messageId":"346","endLine":3,"endColumn":28},{"ruleId":"343","severity":1,"message":"351","line":5,"column":10,"nodeType":"345","messageId":"346","endLine":5,"endColumn":14},{"ruleId":"343","severity":1,"message":"352","line":6,"column":8,"nodeType":"345","messageId":"346","endLine":6,"endColumn":15},{"ruleId":"343","severity":1,"message":"353","line":7,"column":8,"nodeType":"345","messageId":"346","endLine":7,"endColumn":18},{"ruleId":"343","severity":1,"message":"354","line":9,"column":3,"nodeType":"345","messageId":"346","endLine":9,"endColumn":7},{"ruleId":"343","severity":1,"message":"355","line":11,"column":3,"nodeType":"345","messageId":"346","endLine":11,"endColumn":11},{"ruleId":"343","severity":1,"message":"356","line":13,"column":3,"nodeType":"345","messageId":"346","endLine":13,"endColumn":13},{"ruleId":"343","severity":1,"message":"357","line":14,"column":3,"nodeType":"345","messageId":"346","endLine":14,"endColumn":17},{"ruleId":"343","severity":1,"message":"358","line":15,"column":3,"nodeType":"345","messageId":"346","endLine":15,"endColumn":19},{"ruleId":"343","severity":1,"message":"359","line":23,"column":12,"nodeType":"345","messageId":"346","endLine":23,"endColumn":24},{"ruleId":"343","severity":1,"message":"360","line":23,"column":26,"nodeType":"345","messageId":"346","endLine":23,"endColumn":41},{"ruleId":"343","severity":1,"message":"361","line":39,"column":30,"nodeType":"345","messageId":"346","endLine":39,"endColumn":36},{"ruleId":"343","severity":1,"message":"362","line":2,"column":19,"nodeType":"345","messageId":"346","endLine":2,"endColumn":27},{"ruleId":"343","severity":1,"message":"363","line":2,"column":28,"nodeType":"345","messageId":"346","endLine":2,"endColumn":36},{"ruleId":"343","severity":1,"message":"364","line":31,"column":9,"nodeType":"345","messageId":"346","endLine":31,"endColumn":21},{"ruleId":"343","severity":1,"message":"365","line":54,"column":9,"nodeType":"345","messageId":"346","endLine":54,"endColumn":19},{"ruleId":"343","severity":1,"message":"366","line":54,"column":21,"nodeType":"345","messageId":"346","endLine":54,"endColumn":29},{"ruleId":"343","severity":1,"message":"367","line":54,"column":31,"nodeType":"345","messageId":"346","endLine":54,"endColumn":39},{"ruleId":"343","severity":1,"message":"368","line":55,"column":5,"nodeType":"345","messageId":"346","endLine":55,"endColumn":14},{"ruleId":"343","severity":1,"message":"369","line":55,"column":16,"nodeType":"345","messageId":"346","endLine":55,"endColumn":29},{"ruleId":"343","severity":1,"message":"370","line":55,"column":31,"nodeType":"345","messageId":"346","endLine":55,"endColumn":39},{"ruleId":"343","severity":1,"message":"371","line":55,"column":41,"nodeType":"345","messageId":"346","endLine":55,"endColumn":51},{"ruleId":"343","severity":1,"message":"372","line":56,"column":5,"nodeType":"345","messageId":"346","endLine":56,"endColumn":17},{"ruleId":"343","severity":1,"message":"373","line":56,"column":19,"nodeType":"345","messageId":"346","endLine":56,"endColumn":34},{"ruleId":"343","severity":1,"message":"374","line":56,"column":36,"nodeType":"345","messageId":"346","endLine":56,"endColumn":48},{"ruleId":"375","severity":1,"message":"376","line":207,"column":15,"nodeType":"377","endLine":207,"endColumn":34},{"ruleId":"343","severity":1,"message":"365","line":20,"column":11,"nodeType":"345","messageId":"346","endLine":20,"endColumn":21},{"ruleId":"343","severity":1,"message":"366","line":20,"column":23,"nodeType":"345","messageId":"346","endLine":20,"endColumn":31},{"ruleId":"343","severity":1,"message":"367","line":20,"column":33,"nodeType":"345","messageId":"346","endLine":20,"endColumn":41},{"ruleId":"343","severity":1,"message":"368","line":21,"column":9,"nodeType":"345","messageId":"346","endLine":21,"endColumn":18},{"ruleId":"343","severity":1,"message":"369","line":21,"column":20,"nodeType":"345","messageId":"346","endLine":21,"endColumn":33},{"ruleId":"343","severity":1,"message":"370","line":21,"column":35,"nodeType":"345","messageId":"346","endLine":21,"endColumn":43},{"ruleId":"343","severity":1,"message":"371","line":21,"column":45,"nodeType":"345","messageId":"346","endLine":21,"endColumn":55},{"ruleId":"343","severity":1,"message":"372","line":22,"column":9,"nodeType":"345","messageId":"346","endLine":22,"endColumn":21},{"ruleId":"343","severity":1,"message":"373","line":22,"column":23,"nodeType":"345","messageId":"346","endLine":22,"endColumn":38},{"ruleId":"343","severity":1,"message":"374","line":22,"column":40,"nodeType":"345","messageId":"346","endLine":22,"endColumn":52},{"ruleId":"375","severity":1,"message":"376","line":178,"column":15,"nodeType":"377","endLine":178,"endColumn":34},{"ruleId":"343","severity":1,"message":"350","line":3,"column":18,"nodeType":"345","messageId":"346","endLine":3,"endColumn":28},{"ruleId":"343","severity":1,"message":"354","line":9,"column":3,"nodeType":"345","messageId":"346","endLine":9,"endColumn":7},{"ruleId":"343","severity":1,"message":"362","line":19,"column":10,"nodeType":"345","messageId":"346","endLine":19,"endColumn":18},{"ruleId":"378","severity":1,"message":"379","line":12,"column":7,"nodeType":"380","endLine":12,"endColumn":9,"suggestions":"381"},{"ruleId":"378","severity":1,"message":"379","line":24,"column":7,"nodeType":"380","endLine":24,"endColumn":9,"suggestions":"382"},{"ruleId":"343","severity":1,"message":"349","line":4,"column":8,"nodeType":"345","messageId":"346","endLine":4,"endColumn":14},{"ruleId":"378","severity":1,"message":"383","line":19,"column":94,"nodeType":"380","endLine":19,"endColumn":96,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":9,"column":23,"nodeType":"387","messageId":"388","endLine":9,"endColumn":25},{"ruleId":"343","severity":1,"message":"389","line":1,"column":17,"nodeType":"345","messageId":"346","endLine":1,"endColumn":26},{"ruleId":"343","severity":1,"message":"390","line":1,"column":38,"nodeType":"345","messageId":"346","endLine":1,"endColumn":44},{"ruleId":"343","severity":1,"message":"344","line":4,"column":8,"nodeType":"345","messageId":"346","endLine":4,"endColumn":13},{"ruleId":"343","severity":1,"message":"349","line":2,"column":8,"nodeType":"345","messageId":"346","endLine":2,"endColumn":14},{"ruleId":"343","severity":1,"message":"349","line":6,"column":8,"nodeType":"345","messageId":"346","endLine":6,"endColumn":14},{"ruleId":"343","severity":1,"message":"349","line":4,"column":8,"nodeType":"345","messageId":"346","endLine":4,"endColumn":14},{"ruleId":"391","severity":1,"message":"392","line":20,"column":15,"nodeType":"393","endLine":20,"endColumn":75},{"ruleId":"394","severity":1,"message":"395","line":13,"column":1,"nodeType":"396","endLine":18,"endColumn":2},{"ruleId":"378","severity":1,"message":"397","line":15,"column":7,"nodeType":"380","endLine":15,"endColumn":13,"suggestions":"398"},{"ruleId":"385","severity":1,"message":"386","line":19,"column":15,"nodeType":"387","messageId":"388","endLine":19,"endColumn":17},{"ruleId":"378","severity":1,"message":"399","line":35,"column":7,"nodeType":"380","endLine":35,"endColumn":9,"suggestions":"400"},{"ruleId":"385","severity":1,"message":"386","line":69,"column":39,"nodeType":"387","messageId":"388","endLine":69,"endColumn":41},{"ruleId":"394","severity":1,"message":"395","line":12,"column":1,"nodeType":"396","endLine":16,"endColumn":2},{"ruleId":"385","severity":1,"message":"401","line":28,"column":18,"nodeType":"387","messageId":"388","endLine":28,"endColumn":20},{"ruleId":"402","severity":1,"message":"403","line":174,"column":127,"nodeType":"404","messageId":"405","endLine":174,"endColumn":167},"no-native-reassign",["406"],"no-negated-in-lhs",["407"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'getDefaultMiddleware' is defined but never used.","'TOTAL' is assigned a value but never used.","'styled' is defined but never used.","'RouterLink' is defined but never used.","'Icon' is defined but never used.","'eyeFill' is defined but never used.","'eyeOffFill' is defined but never used.","'Link' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'FormControlLabel' is defined but never used.","'showPassword' is assigned a value but never used.","'setShowPassword' is assigned a value but never used.","'values' is assigned a value but never used.","'UserLost' is defined but never used.","'UserJoin' is defined but never used.","'handleChange' is assigned a value but never used.","'user_email' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'user_name' is assigned a value but never used.","'user_birthday' is assigned a value but never used.","'user_sex' is assigned a value but never used.","'user_phone' is assigned a value but never used.","'user_address' is assigned a value but never used.","'user_vaccinated' is assigned a value but never used.","'vaccine_type' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["408"],["409"],"React Hook useEffect has missing dependencies: 'dispatch' and 'geoInfo'. Either include them or remove the dependency array.",["410"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useRef' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch', 'props.previousStep.key', and 'props.steps.userinput.value'. Either include them or remove the dependency array. If 'setText' needs the current value of 'props.steps.userinput.value', you can also switch to useReducer instead of useState and read 'props.steps.userinput.value' in the reducer.",["411"],"React Hook useEffect has missing dependencies: 'dispatch', 'props.previousStep.message', and 'symptom'. Either include them or remove the dependency array.",["412"],"Expected '!==' and instead saw '!='.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation",{"desc":"413","fix":"414"},{"desc":"413","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},"Update the dependencies array to be: [dispatch]",{"range":"422","text":"423"},{"range":"424","text":"423"},"Update the dependencies array to be: [dispatch, geoInfo]",{"range":"425","text":"426"},"Update the dependencies array to be: [dispatch, props.previousStep.key, props.steps.userinput.value, text]",{"range":"427","text":"428"},"Update the dependencies array to be: [dispatch, props.previousStep.message, symptom]",{"range":"429","text":"430"},[436,438],"[dispatch]",[991,993],[943,945],"[dispatch, geoInfo]",[593,599],"[dispatch, props.previousStep.key, props.steps.userinput.value, text]",[1494,1496],"[dispatch, props.previousStep.message, symptom]"]
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\cofin-msa-board\\\\frontend\\\\src\\\\features\\\\user\\\\components\\\\UserLost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { Link, Stack, Checkbox, TextField, IconButton, InputAdornment, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { UserPage } from 'features/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserLost() {\n  _s();\n\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const LostSchema = Yup.object().shape({\n    user_email: Yup.string().email().required('*필수 항목') // user_phone: Yup.string().required('*필수 항목')\n    // because user/views.py searches by user_email only\n\n  });\n  const formik = useFormik({\n    initialValues: {\n      user_email: '' // user_phone:'',\n\n    },\n    validationSchema: LostSchema,\n    onSubmit: () => {\n      // need pop up with id/pw info\n      navigate({\n        UserPage\n      }, {\n        replace: true\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    style: {\n      display: \"inline-block\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PW \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"user_email\",\n            type: \"email\",\n            label: \"\\uC774\\uBA54\\uC77C\",\n            ...getFieldProps('email'),\n            error: Boolean(touched.user_email && errors.user_email),\n            helperText: touched.user_email && errors.user_email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"PW \\uCC3E\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserLost, \"TyfXYEpvWDWRGnFGjig1zuRer3M=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = UserLost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLost\");","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/user/components/UserLost.js"],"names":["React","useState","Yup","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","LoadingButton","UserPage","UserLost","navigate","showPassword","setShowPassword","LostSchema","object","shape","user_email","string","email","required","formik","initialValues","validationSchema","onSubmit","replace","errors","touched","values","isSubmitting","handleSubmit","getFieldProps","display","Boolean"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAI,IAAIC,UAAjB,EAA6BC,WAA7B,QAAgD,kBAAhD;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,cAA1B,QAAgD,QAAhD;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SACER,IADF,EAEES,KAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,UALF,EAMEC,cANF,EAOEC,gBAPF,QAQO,eARP;AASA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAE9B,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMuB,UAAU,GAAGtB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB;AAClCC,IAAAA,UAAU,EAAEzB,GAAG,CAAC0B,MAAJ,GAAaC,KAAb,GAAqBC,QAArB,CAA8B,QAA9B,CADsB,CAElC;AACA;;AAHkC,GAAnB,CAAnB;AAKA,QAAMC,MAAM,GAAGzB,SAAS,CAAC;AACrB0B,IAAAA,aAAa,EAAE;AACXL,MAAAA,UAAU,EAAE,EADD,CAEX;;AAFW,KADM;AAKzBM,IAAAA,gBAAgB,EAAET,UALO;AAMzBU,IAAAA,QAAQ,EAAE,MAAM;AACZ;AACAb,MAAAA,QAAQ,CAAC;AAAEF,QAAAA;AAAF,OAAD,EAAe;AAAEgB,QAAAA,OAAO,EAAE;AAAX,OAAf,CAAR;AACH;AATwB,GAAD,CAAxB;AAUA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,YAA3B;AAAyCC,IAAAA,YAAzC;AAAuDC,IAAAA;AAAvD,MAAyEV,MAA/E;AAEA,sBACI;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,KAAK,EAAE;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAA3B;AAAA,4BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAEI,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEX,MAAvB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,YAAY,EAAC,KAAnB;AAAyB,QAAA,UAAU,MAAnC;AAAoC,QAAA,QAAQ,EAAES,YAA9C;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,CAAhB;AAAA,kCACI,QAAC,SAAD;AACI,YAAA,SAAS,MADb;AAEI,YAAA,YAAY,EAAC,YAFjB;AAGI,YAAA,IAAI,EAAC,OAHT;AAII,YAAA,KAAK,EAAC,oBAJV;AAAA,eAKQC,aAAa,CAAC,OAAD,CALrB;AAMI,YAAA,KAAK,EAAEE,OAAO,CAACN,OAAO,CAACV,UAAR,IAAsBS,MAAM,CAACT,UAA9B,CANlB;AAOI,YAAA,UAAU,EAAEU,OAAO,CAACV,UAAR,IAAsBS,MAAM,CAACT;AAP7C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAiBI,QAAC,aAAD;AACI,YAAA,SAAS,MADb;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,IAAI,EAAC,QAHT;AAII,YAAA,OAAO,EAAC,WAJZ;AAKI,YAAA,OAAO,EAAEY,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GAxDuBnB,Q;UAEHf,W,EAOFC,S;;;KATKc,Q","sourcesContent":["import React, {useState} from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {UserPage} from 'features/user'\r\n\r\nexport default function UserLost(){\r\n\r\n    const navigate = useNavigate();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const LostSchema = Yup.object().shape({\r\n        user_email: Yup.string().email().required('*필수 항목'),\r\n        // user_phone: Yup.string().required('*필수 항목')\r\n        // because user/views.py searches by user_email only\r\n      });\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            user_email: ''           \r\n            // user_phone:'',\r\n    },\r\n    validationSchema: LostSchema,\r\n    onSubmit: () => {\r\n        // need pop up with id/pw info\r\n        navigate({ UserPage }, { replace: true });        \r\n    }});\r\n    const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n    return(\r\n        <div align=\"center\" style={{ display: \"inline-block\" }}>\r\n                <h2>PW 찾기</h2>\r\n            <FormikProvider value={formik}>\r\n                <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                    <Stack spacing={3}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoComplete=\"user_email\"\r\n                            type=\"email\"\r\n                            label=\"이메일\"\r\n                            {...getFieldProps('email')}\r\n                            error={Boolean(touched.user_email && errors.user_email)}\r\n                            helperText={touched.user_email && errors.user_email}\r\n                        />\r\n                        {/* <TextField\r\n                            fullWidth\r\n                            label=\"연락처\"\r\n                            {...getFieldProps('user_phone')}\r\n                            error={Boolean(touched.user_phone && errors.user_phone)}\r\n                            helperText={touched.user_phone && errors.user_phone}\r\n                        />*/}\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            loading={isSubmitting}>\r\n                            PW 찾기\r\n                        </LoadingButton>        \r\n                    </Stack>\r\n                </Form>\r\n            </FormikProvider>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
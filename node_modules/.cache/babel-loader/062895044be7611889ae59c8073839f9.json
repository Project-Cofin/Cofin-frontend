{"ast":null,"code":"import _slicedToArray from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from'react';import Paper from'@material-ui/core/Paper';import{Chart,BarSeries,ArgumentAxis,ValueAxis}from'@devexpress/dx-react-chart-material-ui';import{EventTracker,SelectionState}from'@devexpress/dx-react-chart';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function StackChart(x){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selection=_useState2[0],setSelection=_useState2[1];var data=x.param.slice(0,-1);var compare=function compare(_ref,_ref2){var series=_ref.series,point=_ref.point;var targetSeries=_ref2.series,targetPoint=_ref2.point;return series===targetSeries&&point===targetPoint;};var toggle=function toggle(_ref3){var targets=_ref3.targets;var target=targets[0];if(target){setSelection(selection.length>0&&compare(selection[0],target)?[]:[target]);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:selection.length?\"\".concat(data[selection[0].point].label,\" : \").concat(data[selection[0].point].value*100):undefined}),/*#__PURE__*/_jsx(Paper,{children:/*#__PURE__*/_jsxs(Chart,{data:data,children:[/*#__PURE__*/_jsx(ArgumentAxis,{}),/*#__PURE__*/_jsx(ValueAxis,{}),/*#__PURE__*/_jsx(BarSeries,{valueField:\"value\",argumentField:\"label\"}),/*#__PURE__*/_jsx(EventTracker,{onClick:toggle}),/*#__PURE__*/_jsx(SelectionState,{selection:selection})]})})]});}","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/corona/components/StackChart.js"],"names":["React","Paper","Chart","BarSeries","ArgumentAxis","ValueAxis","EventTracker","SelectionState","useState","StackChart","x","selection","setSelection","data","param","slice","compare","series","point","targetSeries","targetPoint","toggle","targets","target","length","label","value","undefined"],"mappings":"wKAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,OACEC,KADF,CAEEC,SAFF,CAGEC,YAHF,CAIEC,SAJF,KAKO,wCALP,CAOA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,4BAA7C,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAGA,cAAe,SAASC,CAAAA,UAAT,CAAqBC,CAArB,CAAuB,eACDF,QAAQ,CAAC,EAAD,CADP,wCAC5BG,SAD4B,eACjBC,YADiB,eAEpC,GAAMC,CAAAA,IAAI,CAAGH,CAAC,CAACI,KAAF,CAAQC,KAAR,CAAc,CAAd,CAAiB,CAAC,CAAlB,CAAb,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,gBACZC,CAAAA,MADY,MACZA,MADY,CACJC,KADI,MACJA,KADI,IACeC,CAAAA,YADf,OACOF,MADP,CACoCG,WADpC,OAC6BF,KAD7B,OAEXD,CAAAA,MAAM,GAAKE,YAAX,EAA2BD,KAAK,GAAKE,WAF1B,EAAhB,CAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,OAAiB,IAAdC,CAAAA,OAAc,OAAdA,OAAc,CAC5B,GAAMC,CAAAA,MAAM,CAAGD,OAAO,CAAC,CAAD,CAAtB,CACF,GAAIC,MAAJ,CAAY,CACVX,YAAY,CAAED,SAAS,CAACa,MAAV,CAAmB,CAApB,EAA0BR,OAAO,CAACL,SAAS,CAAC,CAAD,CAAV,CAAeY,MAAf,CAAjC,CAA0D,EAA1D,CAA+D,CAACA,MAAD,CAAhE,CAAZ,CACC,CACF,CALH,CAOE,mBACE,oCACE,sBACGZ,SAAS,CAACa,MAAV,WAAsBX,IAAI,CAACF,SAAS,CAAC,CAAD,CAAT,CAAaO,KAAd,CAAJ,CAAyBO,KAA/C,eAA0DZ,IAAI,CAACF,SAAS,CAAC,CAAD,CAAT,CAAaO,KAAd,CAAJ,CAAyBQ,KAAzB,CAA+B,GAAzF,EAAiGC,SADpG,EADF,cAIE,KAAC,KAAD,wBACE,MAAC,KAAD,EACE,IAAI,CAAEd,IADR,wBAGE,KAAC,YAAD,IAHF,cAIE,KAAC,SAAD,IAJF,cAME,KAAC,SAAD,EACE,UAAU,CAAC,OADb,CAEE,aAAa,CAAC,OAFhB,EANF,cAUE,KAAC,YAAD,EAAc,OAAO,CAAEQ,MAAvB,EAVF,cAWE,KAAC,cAAD,EAAgB,SAAS,CAAEV,SAA3B,EAXF,GADF,EAJF,GADF,CAsBD","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { EventTracker, SelectionState } from '@devexpress/dx-react-chart';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function StackChart (x){\r\n  const [ selection, setSelection] = useState([])\r\n  const data = x.param.slice(0, -1)\r\n  const compare = (\r\n    { series, point }, { series: targetSeries, point: targetPoint },\r\n  ) => series === targetSeries && point === targetPoint;\r\n  const toggle = ({ targets }) => {\r\n      const target = targets[0];\r\n    if (target) {\r\n      setSelection((selection.length > 0) && compare(selection[0], target) ? [] : [target])\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <span>\r\n          {selection.length ? `${data[selection[0].point].label} : ${data[selection[0].point].value*100}` : undefined}\r\n        </span>\r\n        <Paper>\r\n          <Chart\r\n            data={data}\r\n          >\r\n            <ArgumentAxis />\r\n            <ValueAxis />\r\n\r\n            <BarSeries\r\n              valueField=\"value\"\r\n              argumentField=\"label\"\r\n            />\r\n            <EventTracker onClick={toggle} />\r\n            <SelectionState selection={selection} />\r\n          </Chart>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}
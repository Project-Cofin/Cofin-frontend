{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\cofin-msa-board\\\\frontend\\\\src\\\\features\\\\chatbot\\\\components\\\\Chat.js\";\nimport ChatBot from \"react-simple-chatbot\";\nimport React, { Component } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { LayOut } from \"features/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = props => {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: {\n      background: \"#f5f8fb\",\n      fontFamily: \"Helvetica Neue\",\n      headerBgColor: \"#EF6C00\",\n      headerFontColor: \"#fff\",\n      headerFontSize: \"15px\",\n      botBubbleColor: \"#EF6C00\",\n      botFontColor: \"#fff\",\n      userBubbleColor: \"#fff\",\n      userFontColor: \"#4a4a4a\"\n    },\n    children: /*#__PURE__*/_jsxDEV(LayOut, {\n      children: [/*#__PURE__*/_jsxDEV(ChatBot, {\n        steps: [{\n          id: \"q-name\",\n          message: \"What is your name?\",\n          trigger: \"name\"\n        }, {\n          id: \"name\",\n          user: true,\n          trigger: \"q-age\"\n        }, {\n          id: \"q-age\",\n          message: \"How old are you??\",\n          trigger: \"age\"\n        }, {\n          id: \"age\",\n          user: true,\n          trigger: \"q-job\"\n        }, {\n          id: \"q-job\",\n          message: \"Finally. what is you job?\",\n          trigger: \"job\"\n        }, {\n          id: \"job\",\n          user: true,\n          trigger: \"q-submit\"\n        }, {\n          id: \"q-submit\",\n          message: \"Do you wish to submit?\",\n          trigger: \"submit\"\n        }, {\n          id: \"submit\",\n          options: [{\n            value: \"y\",\n            label: \"Yes\",\n            trigger: \"end-message\"\n          }, {\n            value: \"n\",\n            label: \"No\",\n            trigger: \"no-submit\"\n          }]\n        }, {\n          id: \"no-submit\",\n          message: \"Your information was not submitted.\",\n          end: true\n        }, {\n          id: \"end-message\",\n          component: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }, this),\n          asMessage: true,\n          end: true\n        }],\n        botAvatar: require(\"./data/icon.png\").default,\n        userAvatar: require(\"./data/user.png\").default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chat;\nexport default Chat;\nexport class Post extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      steps\n    } = this.props;\n    const {\n      submit,\n      name,\n      age,\n      job\n    } = steps;\n    this.state = {\n      submit,\n      name,\n      age,\n      job\n    };\n  }\n\n  componentDidMount() {\n    const userObject = {\n      submit: this.state.submit.value,\n      name: this.state.name.value,\n      age: this.state.age.value,\n      job: this.state.job.value\n    };\n    alert(`data: ${JSON.stringify(userObject)}`); // axios.post(`/api`, userObject)\n    // .then(res => {\n    //     console.log(res.status)\n    // }).catch(function(error) {\n    //     console.log(error);\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Thank you! Your data was submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/chatbot/components/Chat.js"],"names":["ChatBot","React","Component","ThemeProvider","LayOut","Chat","props","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","id","message","trigger","user","options","value","label","end","component","asMessage","require","default","Post","constructor","steps","submit","name","age","job","state","componentDidMount","userObject","alert","JSON","stringify","render"],"mappings":"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","sourcesContent":["import ChatBot from \"react-simple-chatbot\";\r\nimport React, { Component } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { LayOut } from \"features/common\";\r\n\r\n\r\n\r\nconst Chat = (props) => {\r\n  return (\r\n    <ThemeProvider\r\n      theme={{\r\n        background: \"#f5f8fb\",\r\n        fontFamily: \"Helvetica Neue\",\r\n        headerBgColor: \"#EF6C00\",\r\n        headerFontColor: \"#fff\",\r\n        headerFontSize: \"15px\",\r\n        botBubbleColor: \"#EF6C00\",\r\n        botFontColor: \"#fff\",\r\n        userBubbleColor: \"#fff\",\r\n        userFontColor: \"#4a4a4a\",\r\n      }}\r\n    >\r\n      <LayOut>\r\n      <ChatBot\r\n        steps={[\r\n          {\r\n            id: \"q-name\",\r\n            message: \"What is your name?\",\r\n            trigger: \"name\",\r\n          },\r\n          {\r\n            id: \"name\",\r\n            user: true,\r\n            trigger: \"q-age\",\r\n          },\r\n          {\r\n            id: \"q-age\",\r\n            message: \"How old are you??\",\r\n            trigger: \"age\",\r\n          },\r\n          {\r\n            id: \"age\",\r\n            user: true,\r\n            trigger: \"q-job\",\r\n          },\r\n          {\r\n            id: \"q-job\",\r\n            message: \"Finally. what is you job?\",\r\n            trigger: \"job\",\r\n          },\r\n          {\r\n            id: \"job\",\r\n            user: true,\r\n            trigger: \"q-submit\",\r\n          },\r\n          {\r\n            id: \"q-submit\",\r\n            message: \"Do you wish to submit?\",\r\n            trigger: \"submit\",\r\n          },\r\n          {\r\n            id: \"submit\",\r\n            options: [\r\n              { value: \"y\", label: \"Yes\", trigger: \"end-message\" },\r\n              { value: \"n\", label: \"No\", trigger: \"no-submit\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"no-submit\",\r\n            message: \"Your information was not submitted.\",\r\n            end: true,\r\n          },\r\n          {\r\n            id: \"end-message\",\r\n            component: <Post />,\r\n            asMessage: true,\r\n            end: true,\r\n          },\r\n        ]}\r\n        botAvatar={require(\"./data/icon.png\").default}\r\n        userAvatar={require(\"./data/user.png\").default}\r\n      /><br/>\r\n      </LayOut>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\nexport class Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { steps } = this.props;\r\n    const { submit, name, age, job } = steps;\r\n\r\n    this.state = { submit, name, age, job };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const userObject = {\r\n      submit: this.state.submit.value,\r\n      name: this.state.name.value,\r\n      age: this.state.age.value,\r\n      job: this.state.job.value,\r\n    };\r\n    alert(`data: ${JSON.stringify(userObject)}`);\r\n    // axios.post(`/api`, userObject)\r\n    // .then(res => {\r\n    //     console.log(res.status)\r\n    // }).catch(function(error) {\r\n    //     console.log(error);\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>Thank you! Your data was submitted successfully!</div>\r\n      </>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
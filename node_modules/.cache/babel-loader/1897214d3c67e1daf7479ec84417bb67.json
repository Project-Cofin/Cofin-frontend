{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\cofin-msa-board\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\LocalMap.js\",\n    _s = $RefreshSig$();\n\nimport { Map, MapMarker } from 'react-kakao-maps-sdk';\nimport React, { useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { EventMarkerContainer } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LocalMap() {\n  _s();\n\n  const geoInfo = window.localStorage.getItem('sessionGeo').split(',');\n  const [isOpen, setIsOpen] = useState(false);\n  const [map, setMap] = useState();\n  let points = useSelector(state => state.map.mapsState.map(x => {\n    return {\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"5px\",\n          color: \"#000\"\n        },\n        children: x.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 32\n      }, this),\n      latlng: {\n        lat: x.latitude,\n        lng: x.longitude\n      }\n    };\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      center: {\n        lat: geoInfo[0],\n        lng: geoInfo[1]\n      },\n      style: {\n        width: \"1000px\",\n        height: \"600px\"\n      },\n      level: 6,\n      onCreate: setMap,\n      children: [/*#__PURE__*/_jsxDEV(MapMarker, {\n        position: {\n          lat: geoInfo[0],\n          lng: geoInfo[1]\n        } // title='현재 위치'\n        ,\n        image: {\n          // 무료 마커이미지의 주소: https://www.flaticon.com/kr/\n          src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693914.png?token=exp=1637741898~hmac=fada3fe37d0197cf397c5d7713400e95\",\n          size: {\n            width: 45,\n            height: 45\n          },\n          options: {\n            offset: {\n              x: 25,\n              y: 45\n            }\n          }\n        },\n        onClick: marker => map.panTo(marker.getPosition()),\n        onMouseOver: () => setIsOpen(true),\n        onMouseOut: () => setIsOpen(false),\n        children: isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"5px\",\n            color: \"#000\"\n          },\n          children: \"\\uB0B4 \\uC704\\uCE58\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), points.map(value => /*#__PURE__*/_jsxDEV(EventMarkerContainer, {\n        position: value.latlng,\n        content: value.content\n      }, `EventMarkerContainer-${value.latlng.lat}-${value.latlng.lng}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(LocalMap, \"UYJ6Tt1SK3uf5jztyk7ww3ueLAw=\", false, function () {\n  return [useSelector];\n});\n\n_c = LocalMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalMap\");","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/map/components/LocalMap.js"],"names":["Map","MapMarker","React","useState","useSelector","EventMarkerContainer","LocalMap","geoInfo","window","localStorage","getItem","split","isOpen","setIsOpen","map","setMap","points","state","mapsState","x","content","padding","color","name","latlng","lat","latitude","lng","longitude","width","height","src","size","options","offset","y","marker","panTo","getPosition","value"],"mappings":"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","sourcesContent":["import { Map, MapMarker } from 'react-kakao-maps-sdk';\r\nimport React, {useState} from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { EventMarkerContainer } from '..';\r\n\r\n\r\n\r\nexport default function LocalMap() {\r\n    const geoInfo = window.localStorage.getItem('sessionGeo').split(',')\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [map, setMap] = useState()\r\n    let points = useSelector(state => state.map.mapsState.map(\r\n        x => {return {content: <div style={{ padding: \"5px\", color: \"#000\" }}>{x.name}</div>,\r\n                      latlng: {lat: x.latitude, lng:x.longitude}}}\r\n    )) \r\n\r\n    return(<>\r\n    <Map\r\n          center={{\r\n            lat: geoInfo[0],\r\n            lng: geoInfo[1],\r\n          }}\r\n          style={{\r\n            width: \"1000px\",\r\n            height: \"600px\",\r\n          }}\r\n          level={6}\r\n          onCreate={setMap}\r\n        >\r\n            <MapMarker\r\n            position={{lat: geoInfo[0], lng:geoInfo[1]}}\r\n            // title='현재 위치'\r\n            image={{\r\n                // 무료 마커이미지의 주소: https://www.flaticon.com/kr/\r\n                src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693914.png?token=exp=1637741898~hmac=fada3fe37d0197cf397c5d7713400e95\", \r\n                size: {\r\n                  width: 45,\r\n                  height: 45,\r\n                }, \r\n                options: {\r\n                  offset: {\r\n                    x: 25,\r\n                    y: 45,\r\n                  }, \r\n                },\r\n              }}\r\n              onClick={(marker) => map.panTo(marker.getPosition())}\r\n              onMouseOver={() => setIsOpen(true)}\r\n              onMouseOut={() => setIsOpen(false)}\r\n            >{isOpen && <div style={{ padding: \"5px\", color: \"#000\" }}>내 위치</div>}</MapMarker>\r\n            {points.map((value) => (\r\n              <EventMarkerContainer\r\n                key={`EventMarkerContainer-${value.latlng.lat}-${value.latlng.lng}`}\r\n                position={value.latlng}\r\n                content={value.content}\r\n              />\r\n            ))}\r\n        </Map>\r\n    </>);\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorldMap = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar d3_geo_1 = require(\"d3-geo\");\n\nvar countries_geo_1 = require(\"./countries.geo\");\n\nvar constants_1 = require(\"./constants\");\n\nvar utils_1 = require(\"./utils\");\n\nvar draw_1 = require(\"./draw\");\n\nvar Frame_1 = require(\"./components/Frame\");\n\nvar Region_1 = require(\"./components/Region\");\n\nvar TextLabel_1 = require(\"./components/TextLabel\");\n\n(0, tslib_1.__exportStar)(require(\"./types\"), exports);\n\nfunction WorldMap(props) {\n  var data = props.data,\n      title = props.title,\n      _props$valuePrefix = props.valuePrefix,\n      valuePrefix = _props$valuePrefix === void 0 ? '' : _props$valuePrefix,\n      _props$valueSuffix = props.valueSuffix,\n      valueSuffix = _props$valueSuffix === void 0 ? '' : _props$valueSuffix,\n      _props$color = props.color,\n      color = _props$color === void 0 ? constants_1.defaultColor : _props$color,\n      _props$strokeOpacity = props.strokeOpacity,\n      strokeOpacity = _props$strokeOpacity === void 0 ? 0.2 : _props$strokeOpacity,\n      _props$backgroundColo = props.backgroundColor,\n      backgroundColor = _props$backgroundColo === void 0 ? 'white' : _props$backgroundColo,\n      _props$tooltipBgColor = props.tooltipBgColor,\n      tooltipBgColor = _props$tooltipBgColor === void 0 ? 'black' : _props$tooltipBgColor,\n      _props$tooltipTextCol = props.tooltipTextColor,\n      tooltipTextColor = _props$tooltipTextCol === void 0 ? 'white' : _props$tooltipTextCol,\n      _props$size = props.size,\n      size = _props$size === void 0 ? constants_1.defaultSize : _props$size,\n      _props$frame = props.frame,\n      frame = _props$frame === void 0 ? false : _props$frame,\n      _props$frameColor = props.frameColor,\n      frameColor = _props$frameColor === void 0 ? 'black' : _props$frameColor,\n      _props$borderColor = props.borderColor,\n      borderColor = _props$borderColor === void 0 ? 'black' : _props$borderColor,\n      _props$richInteractio = props.richInteraction,\n      richInteraction = _props$richInteractio === void 0 ? false : _props$richInteractio,\n      _props$styleFunction = props.styleFunction,\n      styleFunction = _props$styleFunction === void 0 ? (0, constants_1.defaultCountryStyle)(borderColor, strokeOpacity) : _props$styleFunction,\n      _props$tooltipTextFun = props.tooltipTextFunction,\n      tooltipTextFunction = _props$tooltipTextFun === void 0 ? constants_1.defaultTooltip : _props$tooltipTextFun,\n      onClickFunction = props.onClickFunction,\n      hrefFunction = props.hrefFunction,\n      _props$textLabelFunct = props.textLabelFunction,\n      textLabelFunction = _props$textLabelFunct === void 0 ? function () {\n    return [];\n  } : _props$textLabelFunct;\n  var windowWidth = (0, utils_1.useWindowWidth)();\n  var width = typeof size === 'number' ? size : (0, utils_1.responsify)(size, windowWidth);\n  var height = width * constants_1.heightRatio;\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      scale = _React$useState2[0],\n      setScale = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      translateX = _React$useState4[0],\n      setTranslateX = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      translateY = _React$useState6[0],\n      setTranslateY = _React$useState6[1];\n\n  var containerRef = React.createRef();\n  var countryValueMap = Object.fromEntries(data.map(function (_ref) {\n    var country = _ref.country,\n        value = _ref.value;\n    return [country.toUpperCase(), value];\n  }));\n  var minValue = Math.min.apply(Math, _toConsumableArray(data.map(function (_ref2) {\n    var value = _ref2.value;\n    return value;\n  })));\n  var maxValue = Math.max.apply(Math, _toConsumableArray(data.map(function (_ref3) {\n    var value = _ref3.value;\n    return value;\n  })));\n  var projection = (0, d3_geo_1.geoMercator)();\n  var pathGenerator = (0, d3_geo_1.geoPath)().projection(projection);\n  var regions = countries_geo_1.default.features.map(function (feature, idx) {\n    var triggerRef = React.createRef();\n    var isoCode = feature.I,\n        countryName = feature.N,\n        coordinates = feature.C;\n    var geoFeature = {\n      type: 'Feature',\n      properties: {\n        NAME: countryName,\n        ISO_A2: isoCode\n      },\n      geometry: {\n        type: 'MultiPolygon',\n        coordinates: coordinates\n      }\n    };\n    var context = {\n      countryCode: isoCode,\n      countryValue: countryValueMap[isoCode],\n      countryName: countryName,\n      color: color,\n      minValue: minValue,\n      maxValue: maxValue,\n      prefix: valuePrefix,\n      suffix: valueSuffix\n    };\n    var path = React.createElement(Region_1.default, {\n      ref: triggerRef,\n      d: pathGenerator(geoFeature),\n      style: styleFunction(context),\n      onClick: function onClick(event) {\n        return onClickFunction === null || onClickFunction === void 0 ? void 0 : onClickFunction(Object.assign(Object.assign({}, context), {\n          event: event\n        }));\n      },\n      strokeOpacity: strokeOpacity,\n      href: hrefFunction === null || hrefFunction === void 0 ? void 0 : hrefFunction(context),\n      key: \"path\".concat(idx)\n    });\n    var tooltip = (0, draw_1.drawTooltip)(typeof context.countryValue === 'undefined' ? undefined : tooltipTextFunction(context), tooltipBgColor, tooltipTextColor, idx, triggerRef, containerRef);\n    return {\n      path: path,\n      highlightedTooltip: tooltip\n    };\n  });\n  var regionPaths = regions.map(function (entry) {\n    return entry.path;\n  });\n  var regionTooltips = regions.map(function (entry) {\n    return entry.highlightedTooltip;\n  });\n  var eventHandlers = {\n    onMouseDown: function onMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    onDoubleClick: function onDoubleClick(e) {\n      var rect = e.currentTarget.getBoundingClientRect();\n      var x = e.clientX - rect.left;\n      var y = e.clientY - rect.top;\n\n      if (scale === 4) {\n        setTranslateX(0);\n        setTranslateY(0);\n        setScale(1);\n      } else {\n        setTranslateX(2 * translateX - x);\n        setTranslateY(2 * translateY - y);\n        setScale(scale * 2);\n      }\n    }\n  };\n  return React.createElement(\"figure\", {\n    className: \"worldmap__figure-container\",\n    style: {\n      backgroundColor: backgroundColor\n    }\n  }, title && React.createElement(\"figcaption\", {\n    className: \"worldmap__figure-caption\"\n  }, title), React.createElement(\"svg\", Object.assign({\n    ref: containerRef,\n    height: \"\".concat(height, \"px\"),\n    width: \"\".concat(width, \"px\")\n  }, richInteraction ? eventHandlers : undefined), frame && React.createElement(Frame_1.default, {\n    color: frameColor\n  }), React.createElement(\"g\", {\n    transform: \"translate(\".concat(translateX, \", \").concat(translateY, \") scale(\").concat(width / 960 * scale, \") translate(0, 240)\"),\n    style: {\n      transition: 'all 0.2s'\n    }\n  }, regionPaths), React.createElement(\"g\", null, textLabelFunction(width).map(function (props, idx) {\n    return React.createElement(TextLabel_1.default, Object.assign({}, props, {\n      key: \"text_\".concat(idx)\n    }));\n  })), regionTooltips));\n}\n\nexports.default = WorldMap;\nexports.WorldMap = WorldMap;","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/react-svg-worldmap/dist/index.js"],"names":["Object","defineProperty","exports","value","WorldMap","tslib_1","require","React","d3_geo_1","countries_geo_1","constants_1","utils_1","draw_1","Frame_1","Region_1","TextLabel_1","__exportStar","props","data","title","valuePrefix","valueSuffix","color","defaultColor","strokeOpacity","backgroundColor","tooltipBgColor","tooltipTextColor","size","defaultSize","frame","frameColor","borderColor","richInteraction","styleFunction","defaultCountryStyle","tooltipTextFunction","defaultTooltip","onClickFunction","hrefFunction","textLabelFunction","windowWidth","useWindowWidth","width","responsify","height","heightRatio","useState","scale","setScale","translateX","setTranslateX","translateY","setTranslateY","containerRef","createRef","countryValueMap","fromEntries","map","country","toUpperCase","minValue","Math","min","maxValue","max","projection","geoMercator","pathGenerator","geoPath","regions","default","features","feature","idx","triggerRef","isoCode","I","countryName","N","coordinates","C","geoFeature","type","properties","NAME","ISO_A2","geometry","context","countryCode","countryValue","prefix","suffix","path","createElement","ref","d","style","onClick","event","assign","href","key","tooltip","drawTooltip","undefined","highlightedTooltip","regionPaths","entry","regionTooltips","eventHandlers","onMouseDown","e","preventDefault","stopPropagation","onDoubleClick","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","className","transform","transition"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorldMap = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = require(\"react\");\nconst d3_geo_1 = require(\"d3-geo\");\nconst countries_geo_1 = require(\"./countries.geo\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"./utils\");\nconst draw_1 = require(\"./draw\");\nconst Frame_1 = require(\"./components/Frame\");\nconst Region_1 = require(\"./components/Region\");\nconst TextLabel_1 = require(\"./components/TextLabel\");\n(0, tslib_1.__exportStar)(require(\"./types\"), exports);\nfunction WorldMap(props) {\n    const { data, title, valuePrefix = '', valueSuffix = '', color = constants_1.defaultColor, strokeOpacity = 0.2, backgroundColor = 'white', tooltipBgColor = 'black', tooltipTextColor = 'white', size = constants_1.defaultSize, frame = false, frameColor = 'black', borderColor = 'black', richInteraction = false, styleFunction = (0, constants_1.defaultCountryStyle)(borderColor, strokeOpacity), tooltipTextFunction = constants_1.defaultTooltip, onClickFunction, hrefFunction, textLabelFunction = () => [], } = props;\n    const windowWidth = (0, utils_1.useWindowWidth)();\n    const width = typeof size === 'number' ? size : (0, utils_1.responsify)(size, windowWidth);\n    const height = width * constants_1.heightRatio;\n    const [scale, setScale] = React.useState(1);\n    const [translateX, setTranslateX] = React.useState(0);\n    const [translateY, setTranslateY] = React.useState(0);\n    const containerRef = React.createRef();\n    const countryValueMap = Object.fromEntries(data.map(({ country, value }) => [country.toUpperCase(), value]));\n    const minValue = Math.min(...data.map(({ value }) => value));\n    const maxValue = Math.max(...data.map(({ value }) => value));\n    const projection = (0, d3_geo_1.geoMercator)();\n    const pathGenerator = (0, d3_geo_1.geoPath)().projection(projection);\n    const regions = countries_geo_1.default.features.map((feature, idx) => {\n        const triggerRef = React.createRef();\n        const { I: isoCode, N: countryName, C: coordinates } = feature;\n        const geoFeature = {\n            type: 'Feature',\n            properties: { NAME: countryName, ISO_A2: isoCode },\n            geometry: {\n                type: 'MultiPolygon',\n                coordinates: coordinates,\n            },\n        };\n        const context = {\n            countryCode: isoCode,\n            countryValue: countryValueMap[isoCode],\n            countryName,\n            color,\n            minValue,\n            maxValue,\n            prefix: valuePrefix,\n            suffix: valueSuffix,\n        };\n        const path = (React.createElement(Region_1.default, { ref: triggerRef, d: pathGenerator(geoFeature), style: styleFunction(context), onClick: (event) => onClickFunction === null || onClickFunction === void 0 ? void 0 : onClickFunction(Object.assign(Object.assign({}, context), { event })), strokeOpacity: strokeOpacity, href: hrefFunction === null || hrefFunction === void 0 ? void 0 : hrefFunction(context), key: `path${idx}` }));\n        const tooltip = (0, draw_1.drawTooltip)(typeof context.countryValue === 'undefined'\n            ? undefined\n            : tooltipTextFunction(context), tooltipBgColor, tooltipTextColor, idx, triggerRef, containerRef);\n        return { path, highlightedTooltip: tooltip };\n    });\n    const regionPaths = regions.map((entry) => entry.path);\n    const regionTooltips = regions.map((entry) => entry.highlightedTooltip);\n    const eventHandlers = {\n        onMouseDown(e) {\n            e.preventDefault();\n            e.stopPropagation();\n        },\n        onDoubleClick(e) {\n            const rect = e.currentTarget.getBoundingClientRect();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            if (scale === 4) {\n                setTranslateX(0);\n                setTranslateY(0);\n                setScale(1);\n            }\n            else {\n                setTranslateX(2 * translateX - x);\n                setTranslateY(2 * translateY - y);\n                setScale(scale * 2);\n            }\n        },\n    };\n    return (React.createElement(\"figure\", { className: \"worldmap__figure-container\", style: { backgroundColor } },\n        title && (React.createElement(\"figcaption\", { className: \"worldmap__figure-caption\" }, title)),\n        React.createElement(\"svg\", Object.assign({ ref: containerRef, height: `${height}px`, width: `${width}px` }, (richInteraction ? eventHandlers : undefined)),\n            frame && React.createElement(Frame_1.default, { color: frameColor }),\n            React.createElement(\"g\", { transform: `translate(${translateX}, ${translateY}) scale(${(width / 960) * scale}) translate(0, 240)`, style: { transition: 'all 0.2s' } }, regionPaths),\n            React.createElement(\"g\", null, textLabelFunction(width).map((props, idx) => (React.createElement(TextLabel_1.default, Object.assign({}, props, { key: `text_${idx}` }))))),\n            regionTooltips)));\n}\nexports.default = WorldMap;\nexports.WorldMap = WorldMap;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\cofin-msa-board\\\\frontend\\\\src\\\\features\\\\corona\\\\components\\\\MainChart.js\";\nimport * as React from 'react';\nimport { Chart, AreaSeries, BarSeries, SplineSeries, ScatterSeries, ArgumentAxis, ValueAxis, Title, Legend, Tooltip } from '@devexpress/dx-react-chart-bootstrap4';\nimport '@devexpress/dx-react-chart-bootstrap4/dist/dx-react-chart-bootstrap4.css';\nimport { ValueScale, Stack, Animation, EventTracker, HoverState } from '@devexpress/dx-react-chart';\nimport { connectProps } from '@devexpress/dx-react-core';\nimport { format } from 'd3-format';\nimport { oilProduction } from '../demo-data/data-vizualization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst consumptionSeriesName = 'Consumption';\nconst consumptionColor = '#41c0f0';\nconst priceColor = '#fcd45a';\n\nconst makeLabel = (symbol, color) => _ref => {\n  let {\n    text,\n    style,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ValueAxis.Label, {\n    text: `${text} ${symbol}`,\n    style: {\n      fill: color,\n      ...style\n    },\n    ...restProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\nconst PriceLabel = makeLabel('$', priceColor);\nconst LabelWithThousand = makeLabel('k', consumptionColor);\n\nconst patchProps = _ref2 => {\n  let {\n    hoverIndex,\n    ...props\n  } = _ref2;\n  return {\n    state: props.index === hoverIndex ? 'hovered' : null,\n    ...props\n  };\n};\n\nconst BarPoint = props => /*#__PURE__*/_jsxDEV(BarSeries.Point, { ...patchProps(props)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this);\n\n_c = BarPoint;\nconst pointOptions = {\n  size: 7\n};\n\nconst getPointOptions = state => state ? {\n  size: 7\n} : {\n  size: 0\n};\n\nconst AreaPoint = props => {\n  const patched = patchProps(props);\n  return /*#__PURE__*/_jsxDEV(ScatterSeries.Point, {\n    point: getPointOptions(patched.state),\n    ...patched\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = AreaPoint;\n\nconst AreaWithPoints = _ref3 => {\n  let {\n    state,\n    ...props\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AreaSeries.Path, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ScatterSeries.Path, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = AreaWithPoints;\n\nconst SplinePoint = props => /*#__PURE__*/_jsxDEV(ScatterSeries.Point, {\n  point: pointOptions,\n  ...patchProps(props)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 3\n}, this);\n\n_c4 = SplinePoint;\n\nconst SplineWithPoints = props => /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(SplineSeries.Path, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ScatterSeries.Path, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 3\n}, this);\n\n_c5 = SplineWithPoints;\nconst series = [{\n  name: 'USA',\n  key: 'usa',\n  color: '#08abbd'\n}, {\n  name: 'Saudi Arabia',\n  key: 'saudiArabia',\n  color: '#78bc97'\n}, {\n  name: 'Iran',\n  key: 'iran',\n  color: '#d4d67e'\n}, {\n  name: 'Mexico',\n  key: 'mexico',\n  color: '#9ccc65'\n}, {\n  name: 'Russia',\n  key: 'russia',\n  color: '#1698af'\n}, {\n  name: consumptionSeriesName,\n  key: 'consumption',\n  color: consumptionColor,\n  type: AreaSeries\n}, {\n  name: 'Oil Price',\n  key: 'price',\n  color: priceColor,\n  scale: 'price',\n  type: SplineSeries\n}];\nconst legendRootStyle = {\n  display: 'flex',\n  margin: 'auto',\n  flexDirection: 'row'\n};\n\nconst LegendRoot = props => /*#__PURE__*/_jsxDEV(Legend.Root, { ...props,\n  style: legendRootStyle\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 99,\n  columnNumber: 3\n}, this);\n\n_c6 = LegendRoot;\nconst legendItemStyle = {\n  flexDirection: 'column',\n  marginLeft: '-2px',\n  marginRight: '-2px'\n};\n\nconst LegendItem = props => /*#__PURE__*/_jsxDEV(Legend.Item, { ...props,\n  style: legendItemStyle\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 108,\n  columnNumber: 3\n}, this);\n\n_c7 = LegendItem;\nconst legendLabelStyle = {\n  whiteSpace: 'nowrap'\n};\n\nconst LegendLabel = props => /*#__PURE__*/_jsxDEV(Legend.Label, { ...props,\n  style: legendLabelStyle\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 115,\n  columnNumber: 3\n}, this);\n\n_c8 = LegendLabel;\nconst formatTooltip = format('.1f');\n\nconst TooltipContent = _ref4 => {\n  let {\n    data,\n    text,\n    style,\n    ...props\n  } = _ref4;\n  const alignStyle = { ...style,\n    paddingLeft: '10px'\n  };\n  const items = series.map(_ref5 => {\n    let {\n      name,\n      key,\n      color\n    } = _ref5;\n    const val = data[key];\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"10\",\n          height: \"10\",\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"5\",\n            cy: \"5\",\n            r: \"5\",\n            fill: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Tooltip.Content, {\n          style: alignStyle,\n          text: name,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        align: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Tooltip.Content, {\n          style: alignStyle,\n          text: val ? formatTooltip(val) : 'N/A',\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_c9 = TooltipContent;\nconst stacks = [{\n  series: series.filter(obj => !obj.type).map(obj => obj.name)\n}];\n\nconst modifyOilDomain = domain => [domain[0], 2200];\n\nconst modifyPriceDomain = () => [0, 110];\n\nconst getHoverIndex = _ref6 => {\n  let {\n    target\n  } = _ref6;\n  return target ? target.point : -1;\n};\n\nexport default class MainChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: oilProduction,\n      target: null\n    };\n\n    this.changeHover = target => this.setState({\n      target: target ? {\n        series: consumptionSeriesName,\n        point: target.point\n      } : null\n    });\n\n    this.createComponents();\n    this.createSeries();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (getHoverIndex(prevState) !== getHoverIndex(this.state)) {\n      this.BarPoint.update();\n      this.SplinePoint.update();\n      this.AreaPoint.update();\n      this.TooltipContent.update();\n    }\n  }\n\n  createComponents() {\n    const getHoverProps = () => ({\n      hoverIndex: getHoverIndex(this.state)\n    });\n\n    this.BarPoint = connectProps(BarPoint, getHoverProps);\n    this.SplinePoint = connectProps(SplinePoint, getHoverProps);\n    this.AreaPoint = connectProps(AreaPoint, getHoverProps);\n    this.TooltipContent = connectProps(TooltipContent, () => {\n      const {\n        data,\n        target\n      } = this.state;\n      return {\n        data: target ? data[target.point] : null\n      };\n    });\n  }\n\n  createSeries() {\n    this.series = series.map(_ref7 => {\n      let {\n        name,\n        key,\n        color,\n        type,\n        scale\n      } = _ref7;\n      const props = {\n        key: name,\n        name,\n        valueField: key,\n        argumentField: 'year',\n        color,\n        scaleName: scale || 'oil',\n        pointComponent: this.BarPoint\n      };\n\n      if (type === AreaSeries) {\n        props.seriesComponent = AreaWithPoints;\n        props.pointComponent = this.AreaPoint;\n      } else if (type) {\n        props.seriesComponent = SplineWithPoints;\n        props.pointComponent = this.SplinePoint;\n      }\n\n      return /*#__PURE__*/React.createElement(type || BarSeries, props);\n    });\n  }\n\n  render() {\n    const {\n      data,\n      target\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(ValueScale, {\n          name: \"oil\",\n          modifyDomain: modifyOilDomain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValueScale, {\n          name: \"price\",\n          modifyDomain: modifyPriceDomain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {\n          scaleName: \"oil\",\n          labelComponent: LabelWithThousand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {\n          scaleName: \"price\",\n          position: \"right\",\n          labelComponent: PriceLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          text: \"Oil production vs Oil price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), this.series, /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          position: \"bottom\",\n          rootComponent: LegendRoot,\n          itemComponent: LegendItem,\n          labelComponent: LegendLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          stacks: stacks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EventTracker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HoverState, {\n          hover: target,\n          onHoverChange: this.changeHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          targetItem: target,\n          contentComponent: this.TooltipContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"BarPoint\");\n$RefreshReg$(_c2, \"AreaPoint\");\n$RefreshReg$(_c3, \"AreaWithPoints\");\n$RefreshReg$(_c4, \"SplinePoint\");\n$RefreshReg$(_c5, \"SplineWithPoints\");\n$RefreshReg$(_c6, \"LegendRoot\");\n$RefreshReg$(_c7, \"LegendItem\");\n$RefreshReg$(_c8, \"LegendLabel\");\n$RefreshReg$(_c9, \"TooltipContent\");","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/corona/components/MainChart.js"],"names":["React","Chart","AreaSeries","BarSeries","SplineSeries","ScatterSeries","ArgumentAxis","ValueAxis","Title","Legend","Tooltip","ValueScale","Stack","Animation","EventTracker","HoverState","connectProps","format","oilProduction","consumptionSeriesName","consumptionColor","priceColor","makeLabel","symbol","color","text","style","restProps","fill","PriceLabel","LabelWithThousand","patchProps","hoverIndex","props","state","index","BarPoint","pointOptions","size","getPointOptions","AreaPoint","patched","AreaWithPoints","SplinePoint","SplineWithPoints","series","name","key","type","scale","legendRootStyle","display","margin","flexDirection","LegendRoot","legendItemStyle","marginLeft","marginRight","LegendItem","legendLabelStyle","whiteSpace","LegendLabel","formatTooltip","TooltipContent","data","alignStyle","paddingLeft","items","map","val","stacks","filter","obj","modifyOilDomain","domain","modifyPriceDomain","getHoverIndex","target","point","MainChart","PureComponent","constructor","changeHover","setState","createComponents","createSeries","componentDidUpdate","prevProps","prevState","update","getHoverProps","valueField","argumentField","scaleName","pointComponent","seriesComponent","createElement","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Chart,\r\n  AreaSeries,\r\n  BarSeries,\r\n  SplineSeries,\r\n  ScatterSeries,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Title,\r\n  Legend,\r\n  Tooltip,\r\n} from '@devexpress/dx-react-chart-bootstrap4';\r\nimport '@devexpress/dx-react-chart-bootstrap4/dist/dx-react-chart-bootstrap4.css';\r\nimport {\r\n  ValueScale,\r\n  Stack,\r\n  Animation,\r\n  EventTracker,\r\n  HoverState,\r\n} from '@devexpress/dx-react-chart';\r\nimport { connectProps } from '@devexpress/dx-react-core';\r\nimport { format } from 'd3-format';\r\n\r\nimport { oilProduction } from '../demo-data/data-vizualization';\r\n\r\nconst consumptionSeriesName = 'Consumption';\r\nconst consumptionColor = '#41c0f0';\r\nconst priceColor = '#fcd45a';\r\n\r\nconst makeLabel = (symbol, color) => ({ text, style, ...restProps }) => (\r\n  <ValueAxis.Label\r\n    text={`${text} ${symbol}`}\r\n    style={{\r\n      fill: color,\r\n      ...style,\r\n    }}\r\n    {...restProps}\r\n  />\r\n);\r\nconst PriceLabel = makeLabel('$', priceColor);\r\nconst LabelWithThousand = makeLabel('k', consumptionColor);\r\n\r\nconst patchProps = ({ hoverIndex, ...props }) => ({\r\n  state: props.index === hoverIndex ? 'hovered' : null,\r\n  ...props,\r\n});\r\n\r\nconst BarPoint = props => (\r\n  <BarSeries.Point {...patchProps(props)} />\r\n);\r\n\r\nconst pointOptions = { size: 7 };\r\nconst getPointOptions = state => (state ? { size: 7 } : { size: 0 });\r\n\r\nconst AreaPoint = (props) => {\r\n  const patched = patchProps(props);\r\n  return <ScatterSeries.Point point={getPointOptions(patched.state)} {...patched} />;\r\n};\r\n\r\nconst AreaWithPoints = ({ state, ...props }) => (\r\n  <React.Fragment>\r\n    <AreaSeries.Path {...props} />\r\n    <ScatterSeries.Path {...props} />\r\n  </React.Fragment>\r\n);\r\n\r\nconst SplinePoint = props => (\r\n  <ScatterSeries.Point point={pointOptions} {...patchProps(props)} />\r\n);\r\n\r\nconst SplineWithPoints = props => (\r\n  <React.Fragment>\r\n    <SplineSeries.Path {...props} />\r\n    <ScatterSeries.Path {...props} />\r\n  </React.Fragment>\r\n);\r\n\r\nconst series = [\r\n  { name: 'USA', key: 'usa', color: '#08abbd' },\r\n  { name: 'Saudi Arabia', key: 'saudiArabia', color: '#78bc97' },\r\n  { name: 'Iran', key: 'iran', color: '#d4d67e' },\r\n  { name: 'Mexico', key: 'mexico', color: '#9ccc65' },\r\n  { name: 'Russia', key: 'russia', color: '#1698af' },\r\n  {\r\n    name: consumptionSeriesName, key: 'consumption', color: consumptionColor, type: AreaSeries,\r\n  },\r\n  {\r\n    name: 'Oil Price', key: 'price', color: priceColor, scale: 'price', type: SplineSeries,\r\n  },\r\n];\r\n\r\nconst legendRootStyle = {\r\n  display: 'flex',\r\n  margin: 'auto',\r\n  flexDirection: 'row',\r\n};\r\nconst LegendRoot = props => (\r\n  <Legend.Root {...props} style={legendRootStyle} />\r\n);\r\n\r\nconst legendItemStyle = {\r\n  flexDirection: 'column',\r\n  marginLeft: '-2px',\r\n  marginRight: '-2px',\r\n};\r\nconst LegendItem = props => (\r\n  <Legend.Item {...props} style={legendItemStyle} />\r\n);\r\n\r\nconst legendLabelStyle = {\r\n  whiteSpace: 'nowrap',\r\n};\r\nconst LegendLabel = props => (\r\n  <Legend.Label {...props} style={legendLabelStyle} />\r\n);\r\n\r\nconst formatTooltip = format('.1f');\r\nconst TooltipContent = ({\r\n  data, text, style, ...props\r\n}) => {\r\n  const alignStyle = {\r\n    ...style,\r\n    paddingLeft: '10px',\r\n  };\r\n  const items = series.map(({ name, key, color }) => {\r\n    const val = data[key];\r\n    return (\r\n      <tr key={key}>\r\n        <td>\r\n          <svg width=\"10\" height=\"10\">\r\n            <circle cx=\"5\" cy=\"5\" r=\"5\" fill={color} />\r\n          </svg>\r\n        </td>\r\n        <td>\r\n          <Tooltip.Content style={alignStyle} text={name} {...props} />\r\n        </td>\r\n        <td align=\"right\">\r\n          <Tooltip.Content style={alignStyle} text={val ? formatTooltip(val) : 'N/A'} {...props} />\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n  return (\r\n    <table>\r\n      {items}\r\n    </table>\r\n  );\r\n};\r\n\r\nconst stacks = [\r\n  { series: series.filter(obj => !obj.type).map(obj => obj.name) },\r\n];\r\n\r\nconst modifyOilDomain = domain => [domain[0], 2200];\r\nconst modifyPriceDomain = () => [0, 110];\r\n\r\nconst getHoverIndex = ({ target }) => (target ? target.point : -1);\r\n\r\nexport default class MainChart extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: oilProduction,\r\n      target: null,\r\n    };\r\n\r\n    this.changeHover = target => this.setState({\r\n      target: target ? { series: consumptionSeriesName, point: target.point } : null,\r\n    });\r\n\r\n    this.createComponents();\r\n    this.createSeries();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (getHoverIndex(prevState) !== getHoverIndex(this.state)) {\r\n      this.BarPoint.update();\r\n      this.SplinePoint.update();\r\n      this.AreaPoint.update();\r\n      this.TooltipContent.update();\r\n    }\r\n  }\r\n\r\n  createComponents() {\r\n    const getHoverProps = () => ({\r\n      hoverIndex: getHoverIndex(this.state),\r\n    });\r\n    this.BarPoint = connectProps(BarPoint, getHoverProps);\r\n    this.SplinePoint = connectProps(SplinePoint, getHoverProps);\r\n    this.AreaPoint = connectProps(AreaPoint, getHoverProps);\r\n\r\n    this.TooltipContent = connectProps(TooltipContent, () => {\r\n      const { data, target } = this.state;\r\n      return { data: target ? data[target.point] : null };\r\n    });\r\n  }\r\n\r\n  createSeries() {\r\n    this.series = series.map(({\r\n      name, key, color, type, scale,\r\n    }) => {\r\n      const props = {\r\n        key: name,\r\n        name,\r\n        valueField: key,\r\n        argumentField: 'year',\r\n        color,\r\n        scaleName: scale || 'oil',\r\n        pointComponent: this.BarPoint,\r\n      };\r\n      if (type === AreaSeries) {\r\n        props.seriesComponent = AreaWithPoints;\r\n        props.pointComponent = this.AreaPoint;\r\n      } else if (type) {\r\n        props.seriesComponent = SplineWithPoints;\r\n        props.pointComponent = this.SplinePoint;\r\n      }\r\n      return React.createElement(type || BarSeries, props);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { data, target } = this.state;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <Chart\r\n          data={data}\r\n        >\r\n          <ValueScale\r\n            name=\"oil\"\r\n            modifyDomain={modifyOilDomain}\r\n          />\r\n          <ValueScale\r\n            name=\"price\"\r\n            modifyDomain={modifyPriceDomain}\r\n          />\r\n\r\n          <ArgumentAxis />\r\n          <ValueAxis\r\n            scaleName=\"oil\"\r\n            labelComponent={LabelWithThousand}\r\n          />\r\n          <ValueAxis\r\n            scaleName=\"price\"\r\n            position=\"right\"\r\n            labelComponent={PriceLabel}\r\n          />\r\n\r\n          <Title\r\n            text=\"Oil production vs Oil price\"\r\n          />\r\n\r\n          {this.series}\r\n\r\n          <Animation />\r\n          <Legend\r\n            position=\"bottom\"\r\n            rootComponent={LegendRoot}\r\n            itemComponent={LegendItem}\r\n            labelComponent={LegendLabel}\r\n          />\r\n          <Stack stacks={stacks} />\r\n          <EventTracker />\r\n          <HoverState\r\n            hover={target}\r\n            onHoverChange={this.changeHover}\r\n          />\r\n          <Tooltip\r\n            targetItem={target}\r\n            contentComponent={this.TooltipContent}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
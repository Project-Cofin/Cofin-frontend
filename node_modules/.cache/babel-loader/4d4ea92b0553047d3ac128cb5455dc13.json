{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\test\\\\new\\\\Cofin-frontend\\\\src\\\\features\\\\corona\\\\components\\\\ChartLayOut.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Header from 'features/common/components/Header';\nimport Footer from 'features/common/components/Footer';\nimport styled from \"styled-components\";\nimport 'features/corona/style/ChartLayOutStyle.css';\nimport { AppBugReports, HeaderChart, MainChart, StackChart } from 'features/corona/index';\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getToday, getWeek } from \"../reducer/coronaSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartLayOut = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const today = useSelector(state => state.corona.todayState);\n  const week = useSelector(state => state.corona.weekState);\n  console.log(`today :: ${JSON.stringify(today)}`);\n  console.log(`week :: ${JSON.stringify(week)}`);\n  useEffect(() => {\n    dispatch(getToday());\n    dispatch(getWeek());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"Chartcontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"item6\",\n        children: /*#__PURE__*/_jsxDEV(HeaderChart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), Object.keys(today).map((x, i) => {\n        if (x != 'update_at') {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            class: `item${i + 7}`,\n            children: /*#__PURE__*/_jsxDEV(AppBugReports, {\n              param: {\n                'label': x,\n                'value': today[x]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 22\n          }, this);\n        }\n      }), Object.keys(week).map((x, i) => {\n        if (x != 'update_at') {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            class: `item${i + 7}`,\n            children: /*#__PURE__*/_jsxDEV(AppBugReports, {\n              param: {\n                'label': x,\n                'value': week[x]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 22\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"item11\",\n        children: /*#__PURE__*/_jsxDEV(StackChart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"item12\",\n        children: /*#__PURE__*/_jsxDEV(MainChart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"ChartFooter\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChartLayOut, \"/GfjekBz631Qw+rH8HQN1vxmRRk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ChartLayOut;\nexport default ChartLayOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartLayOut\");","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/test/new/Cofin-frontend/src/features/corona/components/ChartLayOut.js"],"names":["React","Header","Footer","styled","AppBugReports","HeaderChart","MainChart","StackChart","useEffect","useDispatch","useSelector","getToday","getWeek","ChartLayOut","dispatch","today","state","corona","todayState","week","weekState","console","log","JSON","stringify","Object","keys","map","x","i"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,4CAAP;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,UAAhD,QAAkE,uBAAlE;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,wBAAlC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,UAAvB,CAAzB;AACA,QAAMC,IAAI,GAAGT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaG,SAAvB,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWC,IAAI,CAACC,SAAL,CAAeT,KAAf,CAAsB,EAA9C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAUC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAqB,EAA5C;AACAX,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;AACAG,IAAAA,QAAQ,CAACF,OAAO,EAAR,CAAR;AACH,GAHQ,EAGP,EAHO,CAAT;AAIA,sBACE;AAAK,IAAA,KAAK,EAAG,SAAb;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA,8BACA;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,+BAAyB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADA,eAGE;AAAM,QAAA,KAAK,EAAE,OAAb;AAAA,+BAAqB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,cAHF,EAKIa,MAAM,CAACC,IAAP,CAAYX,KAAZ,EAAmBY,GAAnB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC/B,YAAGD,CAAC,IAAI,WAAR,EAAoB;AAClB,8BAAO;AAAM,YAAA,KAAK,EAAK,OAAMC,CAAC,GAAC,CAAE,EAA1B;AAAA,mCAA6B,QAAC,aAAD;AAAe,cAAA,KAAK,EAAE;AAAC,yBAAQD,CAAT;AAAY,yBAASb,KAAK,CAACa,CAAD;AAA1B;AAAtB;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAJD,CALJ,EAYIH,MAAM,CAACC,IAAP,CAAYP,IAAZ,EAAkBQ,GAAlB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,YAAGD,CAAC,IAAI,WAAR,EAAoB;AAClB,8BAAO;AAAM,YAAA,KAAK,EAAK,OAAMC,CAAC,GAAC,CAAE,EAA1B;AAAA,mCAA6B,QAAC,aAAD;AAAe,cAAA,KAAK,EAAE;AAAC,yBAAQD,CAAT;AAAY,yBAAST,IAAI,CAACS,CAAD;AAAzB;AAAtB;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAJD,CAZJ,eAkBE;AAAM,QAAA,KAAK,EAAE,QAAb;AAAA,+BAAsB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE;AAAM,QAAA,KAAK,EAAE,QAAb;AAAA,+BAAsB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAnBF,eAqBA;AAAM,QAAA,KAAK,EAAC,aAAZ;AAAA,+BAA0B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CArCD;;GAAMf,W;UACaJ,W,EACHC,W,EACDA,W;;;KAHTG,W;AAuCN,eAAeA,WAAf","sourcesContent":["import * as React from 'react';\r\nimport Header from 'features/common/components/Header'\r\nimport Footer from 'features/common/components/Footer'\r\nimport styled from \"styled-components\";\r\n\r\nimport 'features/corona/style/ChartLayOutStyle.css'\r\nimport { AppBugReports, HeaderChart, MainChart, StackChart } from 'features/corona/index';\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getToday, getWeek } from \"../reducer/coronaSlice\";\r\n\r\nconst ChartLayOut = () => {\r\n  const dispatch = useDispatch()\r\n  const today = useSelector(state => state.corona.todayState)\r\n  const week = useSelector(state => state.corona.weekState)\r\n  console.log(`today :: ${JSON.stringify(today)}`)\r\n  console.log(`week :: ${JSON.stringify(week)}`)\r\n  useEffect(()=>{\r\n      dispatch(getToday())\r\n      dispatch(getWeek())\r\n  },[])\r\n  return (\r\n    <div class = \"wrapper\">\r\n      <div class=\"Chartcontainer\">\r\n      <span className=\"header\"><Header/></span> \r\n\r\n        <span class =\"item6\"><HeaderChart/></span>\r\n        {\r\n          Object.keys(today).map((x, i) => {\r\n            if(x != 'update_at'){\r\n              return(<span class = {`item${i+7}`}><AppBugReports param={{'label':x, 'value': today[x]}}/></span>)\r\n            }\r\n          })\r\n        }\r\n        {\r\n          Object.keys(week).map((x, i) => {\r\n            if(x != 'update_at'){\r\n              return(<span class = {`item${i+7}`}><AppBugReports param={{'label':x, 'value': week[x]}}/></span>)\r\n            }\r\n          })\r\n        }\r\n        <span class =\"item11\"><StackChart/></span>\r\n        <span class =\"item12\"><MainChart/></span>\r\n        \r\n      <span class=\"ChartFooter\"><Footer/></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartLayOut;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import*as Yup from'yup';import{Link as RouterLink,useNavigate}from'react-router-dom';import{useFormik,Form,FormikProvider}from'formik';import{Icon}from'@iconify/react';import eyeFill from'@iconify/icons-eva/eye-fill';import eyeOffFill from'@iconify/icons-eva/eye-off-fill';import{Link,Stack,Checkbox,TextField,IconButton,InputAdornment,FormControlLabel}from'@mui/material';import{LoadingButton}from'@mui/lab';import{UserPage}from'features/user';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function UserLost(){var navigate=useNavigate();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];var LostSchema=Yup.object().shape({user_email:Yup.string().email().required('*필수 항목')// user_phone: Yup.string().required('*필수 항목')\n// because user/views.py searches by user_email only\n});var formik=useFormik({initialValues:{user_email:''// user_phone:'',\n},validationSchema:LostSchema,onSubmit:function onSubmit(){// need pop up with id/pw info\nnavigate({UserPage:UserPage},{replace:true});}});var errors=formik.errors,touched=formik.touched,values=formik.values,isSubmitting=formik.isSubmitting,handleSubmit=formik.handleSubmit,getFieldProps=formik.getFieldProps;return/*#__PURE__*/_jsxs(\"div\",{align:\"center\",style:{display:\"inline-block\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"PW \\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Stack,{spacing:3,children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,autoComplete:\"user_email\",type:\"email\",label:\"\\uC774\\uBA54\\uC77C\"},getFieldProps('email')),{},{error:Boolean(touched.user_email&&errors.user_email),helperText:touched.user_email&&errors.user_email})),/*#__PURE__*/_jsx(LoadingButton,{fullWidth:true,size:\"large\",type:\"submit\",variant:\"contained\",loading:isSubmitting,children:\"PW \\uCC3E\\uAE30\"})]})})})]});}","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/user/components/UserLost.js"],"names":["React","useState","Yup","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","LoadingButton","UserPage","UserLost","navigate","showPassword","setShowPassword","LostSchema","object","shape","user_email","string","email","required","formik","initialValues","validationSchema","onSubmit","replace","errors","touched","values","isSubmitting","handleSubmit","getFieldProps","display","Boolean"],"mappings":"+UAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,IAAI,GAAIC,CAAAA,UAAjB,CAA6BC,WAA7B,KAAgD,kBAAhD,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,cAA1B,KAAgD,QAAhD,CACA,OAASC,IAAT,KAAqB,gBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,iCAAvB,CACA,OACER,IADF,CAEES,KAFF,CAGEC,QAHF,CAIEC,SAJF,CAKEC,UALF,CAMEC,cANF,CAOEC,gBAPF,KAQO,eARP,CASA,OAASC,aAAT,KAA8B,UAA9B,CACA,OAAQC,QAAR,KAAuB,eAAvB,C,wFAEA,cAAe,SAASC,CAAAA,QAAT,EAAmB,CAE9B,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CACA,cAAwCJ,QAAQ,CAAC,KAAD,CAAhD,wCAAOqB,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,UAAU,CAAGtB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB,CAClCC,UAAU,CAAEzB,GAAG,CAAC0B,MAAJ,GAAaC,KAAb,GAAqBC,QAArB,CAA8B,QAA9B,CACZ;AACA;AAHkC,CAAnB,CAAnB,CAKA,GAAMC,CAAAA,MAAM,CAAGzB,SAAS,CAAC,CACrB0B,aAAa,CAAE,CACXL,UAAU,CAAE,EACZ;AAFW,CADM,CAKzBM,gBAAgB,CAAET,UALO,CAMzBU,QAAQ,CAAE,mBAAM,CACZ;AACAb,QAAQ,CAAC,CAAEF,QAAQ,CAARA,QAAF,CAAD,CAAe,CAAEgB,OAAO,CAAE,IAAX,CAAf,CAAR,CACH,CATwB,CAAD,CAAxB,CAUA,GAAQC,CAAAA,MAAR,CAA+EL,MAA/E,CAAQK,MAAR,CAAgBC,OAAhB,CAA+EN,MAA/E,CAAgBM,OAAhB,CAAyBC,MAAzB,CAA+EP,MAA/E,CAAyBO,MAAzB,CAAiCC,YAAjC,CAA+ER,MAA/E,CAAiCQ,YAAjC,CAA+CC,YAA/C,CAA+ET,MAA/E,CAA+CS,YAA/C,CAA6DC,aAA7D,CAA+EV,MAA/E,CAA6DU,aAA7D,CAEA,mBACI,aAAK,KAAK,CAAC,QAAX,CAAoB,KAAK,CAAE,CAAEC,OAAO,CAAE,cAAX,CAA3B,wBACQ,uCADR,cAEI,KAAC,cAAD,EAAgB,KAAK,CAAEX,MAAvB,uBACI,KAAC,IAAD,EAAM,YAAY,CAAC,KAAnB,CAAyB,UAAU,KAAnC,CAAoC,QAAQ,CAAES,YAA9C,uBACI,MAAC,KAAD,EAAO,OAAO,CAAE,CAAhB,wBACI,KAAC,SAAD,8BACI,SAAS,KADb,CAEI,YAAY,CAAC,YAFjB,CAGI,IAAI,CAAC,OAHT,CAII,KAAK,CAAC,oBAJV,EAKQC,aAAa,CAAC,OAAD,CALrB,MAMI,KAAK,CAAEE,OAAO,CAACN,OAAO,CAACV,UAAR,EAAsBS,MAAM,CAACT,UAA9B,CANlB,CAOI,UAAU,CAAEU,OAAO,CAACV,UAAR,EAAsBS,MAAM,CAACT,UAP7C,GADJ,cAiBI,KAAC,aAAD,EACI,SAAS,KADb,CAEI,IAAI,CAAC,OAFT,CAGI,IAAI,CAAC,QAHT,CAII,OAAO,CAAC,WAJZ,CAKI,OAAO,CAAEY,YALb,6BAjBJ,GADJ,EADJ,EAFJ,GADJ,CAmCH","sourcesContent":["import React, {useState} from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {UserPage} from 'features/user'\r\n\r\nexport default function UserLost(){\r\n\r\n    const navigate = useNavigate();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const LostSchema = Yup.object().shape({\r\n        user_email: Yup.string().email().required('*필수 항목'),\r\n        // user_phone: Yup.string().required('*필수 항목')\r\n        // because user/views.py searches by user_email only\r\n      });\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            user_email: ''           \r\n            // user_phone:'',\r\n    },\r\n    validationSchema: LostSchema,\r\n    onSubmit: () => {\r\n        // need pop up with id/pw info\r\n        navigate({ UserPage }, { replace: true });        \r\n    }});\r\n    const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n    return(\r\n        <div align=\"center\" style={{ display: \"inline-block\" }}>\r\n                <h2>PW 찾기</h2>\r\n            <FormikProvider value={formik}>\r\n                <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                    <Stack spacing={3}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoComplete=\"user_email\"\r\n                            type=\"email\"\r\n                            label=\"이메일\"\r\n                            {...getFieldProps('email')}\r\n                            error={Boolean(touched.user_email && errors.user_email)}\r\n                            helperText={touched.user_email && errors.user_email}\r\n                        />\r\n                        {/* <TextField\r\n                            fullWidth\r\n                            label=\"연락처\"\r\n                            {...getFieldProps('user_phone')}\r\n                            error={Boolean(touched.user_phone && errors.user_phone)}\r\n                            helperText={touched.user_phone && errors.user_phone}\r\n                        />*/}\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            loading={isSubmitting}>\r\n                            PW 찾기\r\n                        </LoadingButton>        \r\n                    </Stack>\r\n                </Form>\r\n            </FormikProvider>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
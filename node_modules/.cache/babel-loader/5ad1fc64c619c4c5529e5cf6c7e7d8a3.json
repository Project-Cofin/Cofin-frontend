{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { coronaAPI } from 'features/corona';\n\nconst TODAY = async () => {\n  const res = await coronaAPI.today();\n  return res.data;\n};\n\n_c = TODAY;\n\nconst WEEK = async () => {\n  const res = await coronaAPI.week();\n  return res.data;\n};\n\n_c2 = WEEK;\n\nconst CONFIRMED = async () => {\n  const res = await coronaAPI.confirmed();\n  return res.data;\n};\n\n_c3 = CONFIRMED;\nexport const getToday = createAsyncThunk('/today', TODAY);\nexport const getWeek = createAsyncThunk('/week', WEEK);\nexport const getConfirmed = createAsyncThunk('/confirmed', CONFIRMED);\nconst coronaSlice = createSlice({\n  name: 'chart',\n  initialState: {\n    mapState: {\n      name: ''\n    },\n    mapsState: [],\n    type: '',\n    keyword: '',\n    params: {}\n  },\n  reducers: {},\n  extraReducers: {\n    [getToday.fulfilled]: (state, action) => {\n      state.mapsState = action.payload;\n    },\n    [getWeek.fulfilled]: (state, action) => {\n      state.mapState = action.payload;\n    },\n    [getConfirmed.fulfilled]: (state, action) => {\n      state.mapsState = action.payload;\n    }\n  }\n}); // export const currentMapState = state => state.chart.mapState\n// export const currentMapsState = state => state.chart.mapsState\n\nexport default coronaSlice.reducer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TODAY\");\n$RefreshReg$(_c2, \"WEEK\");\n$RefreshReg$(_c3, \"CONFIRMED\");","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/test/new/Cofin-frontend/src/features/corona/reducer/coronaSlice.js"],"names":["createAsyncThunk","createSlice","coronaAPI","TODAY","res","today","data","WEEK","week","CONFIRMED","confirmed","getToday","getWeek","getConfirmed","coronaSlice","name","initialState","mapState","mapsState","type","keyword","params","reducers","extraReducers","fulfilled","state","action","payload","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AACA,MAAMC,KAAK,GAAG,YAAY;AACvB,QAAMC,GAAG,GAAG,MAAMF,SAAS,CAACG,KAAV,EAAlB;AACA,SAAOD,GAAG,CAACE,IAAX;AACF,CAHD;;KAAMH,K;;AAIN,MAAMI,IAAI,GAAG,YAAY;AACrB,QAAMH,GAAG,GAAG,MAAMF,SAAS,CAACM,IAAV,EAAlB;AACA,SAAOJ,GAAG,CAACE,IAAX;AACF,CAHF;;MAAMC,I;;AAIN,MAAME,SAAS,GAAG,YAAY;AAC1B,QAAML,GAAG,GAAG,MAAMF,SAAS,CAACQ,SAAV,EAAlB;AACA,SAAON,GAAG,CAACE,IAAX;AACF,CAHF;;MAAMG,S;AAIN,OAAO,MAAME,QAAQ,GAAGX,gBAAgB,CAAC,QAAD,EAAWG,KAAX,CAAjC;AACP,OAAO,MAAMS,OAAO,GAAGZ,gBAAgB,CAAC,OAAD,EAAUO,IAAV,CAAhC;AACP,OAAO,MAAMM,YAAY,GAAGb,gBAAgB,CAAC,YAAD,EAAeS,SAAf,CAArC;AACP,MAAMK,WAAW,GAAGb,WAAW,CAAC;AAC9Bc,EAAAA,IAAI,EAAE,OADwB;AAE9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AACRF,MAAAA,IAAI,EAAC;AADG,KADE;AAIZG,IAAAA,SAAS,EAAE,EAJC;AAKZC,IAAAA,IAAI,EAAE,EALM;AAMZC,IAAAA,OAAO,EAAE,EANG;AAOZC,IAAAA,MAAM,EAAE;AAPI,GAFgB;AAW9BC,EAAAA,QAAQ,EAAE,EAXoB;AAY9BC,EAAAA,aAAa,EAAE;AACb,KAACZ,QAAQ,CAACa,SAAV,GAAsB,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACzCD,MAAAA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACC,OAAzB;AACD,KAHY;AAIb,KAACf,OAAO,CAACY,SAAT,GAAqB,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACxCD,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;AACD,KANY;AAOb,KAACd,YAAY,CAACW,SAAd,GAA0B,CAAEC,KAAF,EAASC,MAAT,KAAqB;AAC7CD,MAAAA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACC,OAAzB;AACD;AATY;AAZe,CAAD,CAA/B,C,CAwBA;AACA;;AACA,eAAeb,WAAW,CAACc,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { coronaAPI } from 'features/corona';\r\nconst TODAY = async () => {\r\n   const res = await coronaAPI.today()\r\n   return res.data\r\n}\r\nconst WEEK = async () => {\r\n    const res = await coronaAPI.week()\r\n    return res.data\r\n }\r\nconst CONFIRMED = async () => {\r\n    const res = await coronaAPI.confirmed()\r\n    return res.data\r\n }\r\nexport const getToday = createAsyncThunk('/today', TODAY)\r\nexport const getWeek = createAsyncThunk('/week', WEEK)\r\nexport const getConfirmed = createAsyncThunk('/confirmed', CONFIRMED)\r\nconst coronaSlice = createSlice({\r\n  name: 'chart',\r\n  initialState: {\r\n    mapState: {\r\n      name:''\r\n    },\r\n    mapsState: [],\r\n    type: '',\r\n    keyword: '',\r\n    params: {}\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getToday.fulfilled]: ( state, action ) => {\r\n      state.mapsState = action.payload\r\n    },\r\n    [getWeek.fulfilled]: ( state, action ) => {\r\n      state.mapState = action.payload\r\n    },\r\n    [getConfirmed.fulfilled]: ( state, action ) => {\r\n      state.mapsState = action.payload\r\n    },\r\n  }\r\n})\r\n// export const currentMapState = state => state.chart.mapState\r\n// export const currentMapsState = state => state.chart.mapsState\r\nexport default coronaSlice.reducer;"]},"metadata":{},"sourceType":"module"}
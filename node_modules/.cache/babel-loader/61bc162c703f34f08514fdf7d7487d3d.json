{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\test\\\\new\\\\Cofin-frontend\\\\src\\\\features\\\\corona\\\\components\\\\StackChart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, BarSeries, ArgumentAxis, ValueAxis } from '@devexpress/dx-react-chart-material-ui';\nimport { EventTracker, SelectionState } from '@devexpress/dx-react-chart';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StackChart(x) {\n  _s();\n\n  const [selection, setSelection] = useState([]);\n  const data = x.param.slice(0, -1);\n\n  const compare = ({\n    series,\n    point\n  }, {\n    series: targetSeries,\n    point: targetPoint\n  }) => series === targetSeries && point === targetPoint;\n\n  const btn = ({\n    targets\n  }) => {\n    const target = targets[0];\n\n    if (target) {\n      console.log(`타겟 :: ${JSON.stringify(targets[0])}`);\n      setSelection(selection.length > 0 && compare(selection[0], target) ? [] : [target]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Selected value:\", ' ', console.log(selection.length ? data[selection[0].point] : undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: data // data={data}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n          valueField: \"value\",\n          argumentField: \"label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EventTracker, {\n          onClick: btn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectionState, {\n          selection: selection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n} // import * as React from 'react';\n// import {\n//   Chart,\n//   ArgumentAxis,\n//   ValueAxis,\n//   BarSeries,\n//   Title,\n//   Legend,\n// } from '@devexpress/dx-react-chart-bootstrap4';\n// import { Stack, Animation } from '@devexpress/dx-react-chart';\n// import { energyConsumption as data } from '../demo-data/data-vizualization';\n// const Root = props => (\n//   <Legend.Root\n//     {...props}\n//     className=\"m-auto flex-row\"\n//   />\n// );\n// export default class StackChart extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data,\n//     };\n//   }\n//   render() {\n//     const { data: chartData } = this.state;\n//     return (\n//       <div className=\"card\">\n//         <Chart\n//           data={chartData}\n//         >\n//           <ArgumentAxis />\n//           <ValueAxis\n//             max={2400}\n//           />\n//           <BarSeries\n//             name=\"Hydro-electric\"\n//             valueField=\"hydro\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Oil\"\n//             valueField=\"oil\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Natural gas\"\n//             valueField=\"gas\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Coal\"\n//             valueField=\"coal\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Nuclear\"\n//             valueField=\"nuclear\"\n//             argumentField=\"country\"\n//           />\n//           <Animation />\n//           <Legend position=\"bottom\" rootComponent={Root} />\n//           <Title text=\"Energy Consumption in 2004 (Millions of Tons, Oil Equivalent)\" />\n//           <Stack\n//             stacks={[\n//               { series: ['Hydro-electric', 'Oil', 'Natural gas', 'Coal', 'Nuclear'] },\n//             ]}\n//           />\n//         </Chart>\n//       </div>\n//     );\n//   }\n// }\n\n_s(StackChart, \"5bDNcU5KNLI7pZ+h/QoUquozQYU=\");\n\n_c = StackChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackChart\");","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/test/new/Cofin-frontend/src/features/corona/components/StackChart.js"],"names":["React","Paper","Chart","BarSeries","ArgumentAxis","ValueAxis","EventTracker","SelectionState","useState","StackChart","x","selection","setSelection","data","param","slice","compare","series","point","targetSeries","targetPoint","btn","targets","target","console","log","JSON","stringify","length","undefined"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,SAJF,QAKO,wCALP;AAOA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,4BAA7C;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,eAAe,SAASC,UAAT,CAAqBC,CAArB,EAAuB;AAAA;;AACpC,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA6BJ,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAMK,IAAI,GAAGH,CAAC,CAACI,KAAF,CAAQC,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAb;;AACA,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GADc,EACK;AAAED,IAAAA,MAAM,EAAEE,YAAV;AAAwBD,IAAAA,KAAK,EAAEE;AAA/B,GADL,KAEXH,MAAM,KAAKE,YAAX,IAA2BD,KAAK,KAAKE,WAF1C;;AAGA,QAAMC,GAAG,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AACzB,UAAMC,MAAM,GAAGD,OAAO,CAAC,CAAD,CAAtB;;AACF,QAAIC,MAAJ,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAQC,IAAI,CAACC,SAAL,CAAeL,OAAO,CAAC,CAAD,CAAtB,CAA2B,EAAhD;AACAV,MAAAA,YAAY,CAAED,SAAS,CAACiB,MAAV,GAAmB,CAApB,IAA0BZ,OAAO,CAACL,SAAS,CAAC,CAAD,CAAV,EAAeY,MAAf,CAAjC,GAA0D,EAA1D,GAA+D,CAACA,MAAD,CAAhE,CAAZ;AACC;AACF,GANH;;AAQE,sBACE;AAAA,4BACE;AAAA,oCAEG,GAFH,EAGGC,OAAO,CAACC,GAAR,CAAYd,SAAS,CAACiB,MAAV,GAAmBf,IAAI,CAACF,SAAS,CAAC,CAAD,CAAT,CAAaO,KAAd,CAAvB,GAA8CW,SAA1D,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAEhB,IADR,CAEE;AAFF;AAAA,gCAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBALF,eAOE,QAAC,SAAD;AACE,UAAA,UAAU,EAAC,OADb;AAEE,UAAA,aAAa,EAAC;AAFhB;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEQ;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAEV;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,C,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAxHwBF,U;;KAAAA,U","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { EventTracker, SelectionState } from '@devexpress/dx-react-chart';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function StackChart (x){\r\n  const [ selection, setSelection] = useState([])\r\n  const data = x.param.slice(0, -1)\r\n  const compare = (\r\n    { series, point }, { series: targetSeries, point: targetPoint },\r\n  ) => series === targetSeries && point === targetPoint;\r\n  const btn = ({ targets }) => {\r\n      const target = targets[0];\r\n    if (target) {\r\n      console.log(`타겟 :: ${JSON.stringify(targets[0])}`)\r\n      setSelection((selection.length > 0) && compare(selection[0], target) ? [] : [target])\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <span>\r\n          Selected value:\r\n          {' '}\r\n          {console.log(selection.length ? data[selection[0].point] : undefined)}\r\n        </span>\r\n        <Paper>\r\n          <Chart\r\n            data={data}\r\n            // data={data}\r\n          >\r\n            <ArgumentAxis />\r\n            <ValueAxis />\r\n\r\n            <BarSeries\r\n              valueField=\"value\"\r\n              argumentField=\"label\"\r\n            />\r\n            <EventTracker onClick={btn} />\r\n            <SelectionState selection={selection} />\r\n          </Chart>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n// import * as React from 'react';\r\n// import {\r\n//   Chart,\r\n//   ArgumentAxis,\r\n//   ValueAxis,\r\n//   BarSeries,\r\n//   Title,\r\n//   Legend,\r\n// } from '@devexpress/dx-react-chart-bootstrap4';\r\n// import { Stack, Animation } from '@devexpress/dx-react-chart';\r\n\r\n// import { energyConsumption as data } from '../demo-data/data-vizualization';\r\n\r\n// const Root = props => (\r\n//   <Legend.Root\r\n//     {...props}\r\n//     className=\"m-auto flex-row\"\r\n//   />\r\n// );\r\n\r\n// export default class StackChart extends React.PureComponent {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       data,\r\n//     };\r\n//   }\r\n\r\n//   render() {\r\n//     const { data: chartData } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"card\">\r\n//         <Chart\r\n//           data={chartData}\r\n//         >\r\n//           <ArgumentAxis />\r\n//           <ValueAxis\r\n//             max={2400}\r\n//           />\r\n\r\n//           <BarSeries\r\n//             name=\"Hydro-electric\"\r\n//             valueField=\"hydro\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Oil\"\r\n//             valueField=\"oil\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Natural gas\"\r\n//             valueField=\"gas\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Coal\"\r\n//             valueField=\"coal\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Nuclear\"\r\n//             valueField=\"nuclear\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <Animation />\r\n//           <Legend position=\"bottom\" rootComponent={Root} />\r\n//           <Title text=\"Energy Consumption in 2004 (Millions of Tons, Oil Equivalent)\" />\r\n//           <Stack\r\n//             stacks={[\r\n//               { series: ['Hydro-electric', 'Oil', 'Natural gas', 'Coal', 'Nuclear'] },\r\n//             ]}\r\n//           />\r\n//         </Chart>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}
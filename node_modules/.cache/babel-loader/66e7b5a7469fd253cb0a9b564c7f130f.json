{"ast":null,"code":"import _defineProperty from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{answer,answerStatus}from\"features/chatbot/reducer/chatbotSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Ask(props){var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var key=props.previousStep.key;var botAnswer=_defineProperty({},key,useSelector(function(state){return state.chatbot.answersState[key];}));useEffect(function(){setText(props.steps.userinput.value);dispatch(answer({'key':props.previousStep.key,'query':props.steps.userinput.value}));},[text]);return/*#__PURE__*/_jsx(_Fragment,{children:text==\"체크리스트\"?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return props.triggerNextStep({trigger:'fever'});},style:{border:\"0.5px\",background:'burlywood',borderRadius:\"9px\",margin:\"1em 2em 5px 2em\",cursor:\"pointer\",boxShadow:\"1px 1px 3px 1px #cbbab0\"},children:\"\\uBC31\\uC2E0 \\uC811\\uC885 \\uC99D\\uC0C1 \\uCCB4\\uD06C\\uD558\\uAE30!\"}):/*#__PURE__*/_jsx(\"div\",{children:botAnswer[key]})});}export function CheckStatus(props){var dispatch=useDispatch();var pain_arr=['fever','ino_area','swell','sick','pain','fatigue','allergy','etc','welcome'];var symptom=props.previousStep.value.slice(0,-1);var choice=useSelector(function(state){return state.chatbot.healthStates[symptom];});useEffect(function(){dispatch(answerStatus({'symptom':symptom,'details':props.previousStep.message}));},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:choice['answer']}),/*#__PURE__*/_jsx(\"button\",{style:{border:\"0.5px\",background:'burlywood',borderRadius:\"9px\",margin:\"0.7em auto\",cursor:\"pointer\",boxShadow:\"1px 1px 3px 1px #cbbab0\",width:\"10em\",display:\"block\"},onClick:function onClick(){try{if(props.previousStep.value.slice(-1)>2){window.localStorage.setItem(\"counter\",parseInt(localStorage.getItem(\"counter\"))+1);}props.triggerNextStep(pain_arr.indexOf(symptom)+1<8?{trigger:pain_arr[pain_arr.indexOf(symptom)+1]}:{trigger:'alert'});}catch(error){}},children:\"\\uC774\\uC5B4\\uC11C \\uC9C4\\uD589\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{style:{border:\"0.5px\",background:'burlywood',borderRadius:\"9px\",margin:\"0.5em auto\",cursor:\"pointer\",boxShadow:\"1px 1px 3px 1px #cbbab0\",width:\"10em\",display:\"block\"},onClick:function onClick(){if(props.previousStep.value.slice(-1)>2){window.localStorage.setItem(\"counter\",parseInt(localStorage.getItem(\"counter\"))+1);}props.triggerNextStep({trigger:'alert'});},children:\"\\uADF8\\uB9CC\\uD558\\uAE30\"})]});}export function AlertMessage(){return/*#__PURE__*/_jsx(_Fragment,{children:localStorage.getItem(\"counter\")==0?/*#__PURE__*/_jsx(\"div\",{children:\"\\uC8FC\\uC694 \\uC774\\uC0C1 \\uBC18\\uC751\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}):/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uC8FC\\uC694 \\uC774\\uC0C1 \\uBC18\\uC751\\uC774 '\",localStorage.getItem(\"counter\"),\"' \\uAC74 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uAC00\\uAE4C\\uC6B4 \\uC758\\uB8CC\\uAE30\\uAD00\\uC5D0 \\uBC29\\uBB38\\uD558\\uC2DC\\uAE30\\uB97C \\uCD94\\uCC9C\\uB4DC\\uB9BD\\uB2C8\\uB2E4.\"]})});}export function ResetMessage(){// localStorage.setItem(\"counter\", 0)\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{children:\"\\uB610 \\uB2E4\\uB978 \\uAD81\\uAE08\\uD558\\uC2E0 \\uBD80\\uBD84\\uC774 \\uC788\\uB098\\uC694?\"})});}","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/chatbot/components/ChatModules.js"],"names":["useEffect","useState","useDispatch","useSelector","answer","answerStatus","Ask","props","dispatch","text","setText","key","previousStep","botAnswer","state","chatbot","answersState","steps","userinput","value","triggerNextStep","trigger","border","background","borderRadius","margin","cursor","boxShadow","CheckStatus","pain_arr","symptom","slice","choice","healthStates","message","width","display","window","localStorage","setItem","parseInt","getItem","indexOf","error","AlertMessage","ResetMessage"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { answer, answerStatus } from \"features/chatbot/reducer/chatbotSlice\"\r\n\r\nexport function Ask(props){\r\n    const dispatch = useDispatch()\r\n    const [ text, setText ] = useState('')\r\n    const key = props.previousStep.key\r\n    const botAnswer = {\r\n      [key]:useSelector((state)=>state.chatbot.answersState[key])\r\n    }\r\n    useEffect(()=>{\r\n      setText(props.steps.userinput.value)\r\n      dispatch(answer({'key': props.previousStep.key,'query':props.steps.userinput.value}))\r\n    },[text])\r\n      return (\r\n        <>\r\n        {/* <div>{text}이(가) 라고 질문하신 것이 맞습니까?</div> */}\r\n        {text == \"체크리스트\" ? <button onClick={() => props.triggerNextStep({trigger: 'fever'})} \r\n        style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"1em 2em 5px 2em\", cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\"}} >\r\n          백신 접종 증상 체크하기!\r\n        </button>:<div>{botAnswer[key]}</div>}\r\n        </>\r\n      );\r\n  }\r\n  \r\n  \r\n  export function CheckStatus(props){\r\n    const dispatch = useDispatch()\r\n    const pain_arr = ['fever', 'ino_area', 'swell', 'sick', 'pain', 'fatigue', 'allergy', 'etc', 'welcome']\r\n    const symptom = props.previousStep.value.slice(0, -1)\r\n    const choice = useSelector((state)=>state.chatbot.healthStates[symptom])\r\n    useEffect(()=>{\r\n      dispatch(answerStatus({'symptom': symptom, 'details':props.previousStep.message}))\r\n    },[])\r\n      return (\r\n        <>\r\n        <div>{choice['answer']}</div>\r\n        <button style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"0.7em auto\", \r\n                        cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\", width: \"10em\", display: \"block\"}} \r\n                onClick={() => {\r\n                  try {\r\n                    if(props.previousStep.value.slice(-1)>2){\r\n                      window.localStorage.setItem(\"counter\", parseInt(localStorage.getItem(\"counter\"))+1)\r\n                    }\r\n                    props.triggerNextStep((pain_arr.indexOf(symptom)+1) < 8 ? {trigger: pain_arr[pain_arr.indexOf(symptom)+1]} : {trigger: 'alert'})\r\n                  } catch (error) {\r\n                  }\r\n                }}>\r\n          이어서 진행하기\r\n        </button>\r\n        <button style={{border:\"0.5px\", background:'burlywood', borderRadius: \"9px\", margin: \"0.5em auto\", \r\n                        cursor: \"pointer\", boxShadow: \"1px 1px 3px 1px #cbbab0\", width: \"10em\", display: \"block\"}} \r\n                onClick={() => {\r\n                  if(props.previousStep.value.slice(-1)>2){\r\n                    window.localStorage.setItem(\"counter\", parseInt(localStorage.getItem(\"counter\"))+1)\r\n                  }\r\n                  props.triggerNextStep({trigger: 'alert'})\r\n                }}>\r\n          그만하기\r\n        </button>\r\n        </>\r\n      );\r\n  }\r\n  \r\n  export function AlertMessage(){\r\n    return(<>\r\n    {\r\n      localStorage.getItem(\"counter\") == 0\r\n      ? <div>주요 이상 반응이 없습니다.</div>\r\n      : <div>주요 이상 반응이 '{localStorage.getItem(\"counter\")}' 건 있습니다. 가까운 의료기관에 방문하시기를 추천드립니다.</div>\r\n    }\r\n    </>)\r\n  }\r\n  \r\n  export function ResetMessage(){\r\n    // localStorage.setItem(\"counter\", 0)\r\n    return(<>\r\n      <div>\r\n        또 다른 궁금하신 부분이 있나요?\r\n      </div>\r\n    </>)\r\n  }"]},"metadata":{},"sourceType":"module"}
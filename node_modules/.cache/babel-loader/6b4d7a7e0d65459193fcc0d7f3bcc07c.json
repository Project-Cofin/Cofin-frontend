{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\test\\\\new\\\\Cofin-frontend\\\\src\\\\features\\\\corona\\\\components\\\\StackChart.js\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, BarSeries, ArgumentAxis, ValueAxis } from '@devexpress/dx-react-chart-material-ui';\nimport { EventTracker, SelectionState } from '@devexpress/dx-react-chart';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  label: 'death',\n  value: 68\n}, {\n  label: 'serious',\n  value: 1097\n}, {\n  label: 'new_hospitalization',\n  value: 564\n}, {\n  label: 'confirmed',\n  value: 5412\n}];\nexport default function StackChart(x) {\n  // console.log(`x :: ${JSON.stringify()}`)\n  // const [ selection, setSelection] = useState([0])\n  // const compare = (\n  //   { series, point }, { series: targetSeries, point: targetPoint },\n  // ) => series === targetSeries && point === targetPoint;\n  const btn = ({\n    targets\n  }) => {\n    //   const target = targets[0];\n    if (targets[0]) {\n      console.log(`타겟 :: ${JSON.stringify(targets[0])}`); //       setSelection(({ selection }) => ({\n      //         selection: selection[0] && compare(selection[0], target) ? [] : [target],\n      //       }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: x.param.slice(0, -1) // data={data}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n          valueField: \"value\",\n          argumentField: \"label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EventTracker, {\n          onClick: btn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n} // import * as React from 'react';\n// import {\n//   Chart,\n//   ArgumentAxis,\n//   ValueAxis,\n//   BarSeries,\n//   Title,\n//   Legend,\n// } from '@devexpress/dx-react-chart-bootstrap4';\n// import { Stack, Animation } from '@devexpress/dx-react-chart';\n// import { energyConsumption as data } from '../demo-data/data-vizualization';\n// const Root = props => (\n//   <Legend.Root\n//     {...props}\n//     className=\"m-auto flex-row\"\n//   />\n// );\n// export default class StackChart extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data,\n//     };\n//   }\n//   render() {\n//     const { data: chartData } = this.state;\n//     return (\n//       <div className=\"card\">\n//         <Chart\n//           data={chartData}\n//         >\n//           <ArgumentAxis />\n//           <ValueAxis\n//             max={2400}\n//           />\n//           <BarSeries\n//             name=\"Hydro-electric\"\n//             valueField=\"hydro\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Oil\"\n//             valueField=\"oil\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Natural gas\"\n//             valueField=\"gas\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Coal\"\n//             valueField=\"coal\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Nuclear\"\n//             valueField=\"nuclear\"\n//             argumentField=\"country\"\n//           />\n//           <Animation />\n//           <Legend position=\"bottom\" rootComponent={Root} />\n//           <Title text=\"Energy Consumption in 2004 (Millions of Tons, Oil Equivalent)\" />\n//           <Stack\n//             stacks={[\n//               { series: ['Hydro-electric', 'Oil', 'Natural gas', 'Coal', 'Nuclear'] },\n//             ]}\n//           />\n//         </Chart>\n//       </div>\n//     );\n//   }\n// }\n\n_c = StackChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackChart\");","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/test/new/Cofin-frontend/src/features/corona/components/StackChart.js"],"names":["React","Paper","Chart","BarSeries","ArgumentAxis","ValueAxis","EventTracker","SelectionState","useState","data","label","value","StackChart","x","btn","targets","console","log","JSON","stringify","param","slice"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,SAJF,QAKO,wCALP;AAOA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,4BAA7C;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADW,EAEX;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAFW,EAGX;AAAED,EAAAA,KAAK,EAAE,qBAAT;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CAHW,EAIX;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAJW,CAAb;AAQA,eAAe,SAASC,UAAT,CAAqBC,CAArB,EAAuB;AACpC;AACA;AACA;AACA;AACA;AACA,QAAMC,GAAG,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AAC3B;AACA,QAAIA,OAAO,CAAC,CAAD,CAAX,EAAgB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAQC,IAAI,CAACC,SAAL,CAAeJ,OAAO,CAAC,CAAD,CAAtB,CAA2B,EAAhD,EADc,CAElB;AACA;AACA;AACK;AACF,GARH;;AAUE,sBACE;AAAA,2BAME,QAAC,KAAD;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAEF,CAAC,CAACO,KAAF,CAAQC,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CADR,CAEE;AAFF;AAAA,gCAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBALF,eAOE,QAAC,SAAD;AACE,UAAA,UAAU,EAAC,OADb;AAEE,UAAA,aAAa,EAAC;AAFhB;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEP;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,C,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA1HwBF,U","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { EventTracker, SelectionState } from '@devexpress/dx-react-chart';\r\nimport { useState } from 'react';\r\n\r\nconst data = [\r\n  { label: 'death', value: 68 },\r\n  { label: 'serious', value: 1097 },\r\n  { label: 'new_hospitalization', value: 564 },\r\n  { label: 'confirmed', value: 5412 },\r\n];\r\n\r\n\r\nexport default function StackChart (x){\r\n  // console.log(`x :: ${JSON.stringify()}`)\r\n  // const [ selection, setSelection] = useState([0])\r\n  // const compare = (\r\n  //   { series, point }, { series: targetSeries, point: targetPoint },\r\n  // ) => series === targetSeries && point === targetPoint;\r\n  const btn = ({ targets }) => {\r\n    //   const target = targets[0];\r\n    if (targets[0]) {\r\n      console.log(`타겟 :: ${JSON.stringify(targets[0])}`)\r\n  //       setSelection(({ selection }) => ({\r\n  //         selection: selection[0] && compare(selection[0], target) ? [] : [target],\r\n  //       }));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* <span>\r\n          Selected value:\r\n          {' '}\r\n          {selection.length ? data[selection[0].point].population : undefined}\r\n        </span> */}\r\n        <Paper>\r\n          <Chart\r\n            data={x.param.slice(0, -1)}\r\n            // data={data}\r\n          >\r\n            <ArgumentAxis />\r\n            <ValueAxis />\r\n\r\n            <BarSeries\r\n              valueField=\"value\"\r\n              argumentField=\"label\"\r\n            />\r\n            <EventTracker onClick={btn} />\r\n            {/* <SelectionState selection={selection} /> */}\r\n          </Chart>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n// import * as React from 'react';\r\n// import {\r\n//   Chart,\r\n//   ArgumentAxis,\r\n//   ValueAxis,\r\n//   BarSeries,\r\n//   Title,\r\n//   Legend,\r\n// } from '@devexpress/dx-react-chart-bootstrap4';\r\n// import { Stack, Animation } from '@devexpress/dx-react-chart';\r\n\r\n// import { energyConsumption as data } from '../demo-data/data-vizualization';\r\n\r\n// const Root = props => (\r\n//   <Legend.Root\r\n//     {...props}\r\n//     className=\"m-auto flex-row\"\r\n//   />\r\n// );\r\n\r\n// export default class StackChart extends React.PureComponent {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       data,\r\n//     };\r\n//   }\r\n\r\n//   render() {\r\n//     const { data: chartData } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"card\">\r\n//         <Chart\r\n//           data={chartData}\r\n//         >\r\n//           <ArgumentAxis />\r\n//           <ValueAxis\r\n//             max={2400}\r\n//           />\r\n\r\n//           <BarSeries\r\n//             name=\"Hydro-electric\"\r\n//             valueField=\"hydro\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Oil\"\r\n//             valueField=\"oil\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Natural gas\"\r\n//             valueField=\"gas\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Coal\"\r\n//             valueField=\"coal\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Nuclear\"\r\n//             valueField=\"nuclear\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <Animation />\r\n//           <Legend position=\"bottom\" rootComponent={Root} />\r\n//           <Title text=\"Energy Consumption in 2004 (Millions of Tons, Oil Equivalent)\" />\r\n//           <Stack\r\n//             stacks={[\r\n//               { series: ['Hydro-electric', 'Oil', 'Natural gas', 'Coal', 'Nuclear'] },\r\n//             ]}\r\n//           />\r\n//         </Chart>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}
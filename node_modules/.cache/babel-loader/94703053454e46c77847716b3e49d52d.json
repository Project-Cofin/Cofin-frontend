{"ast":null,"code":"import _slicedToArray from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Map,MapMarker}from'react-kakao-maps-sdk';import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from'react-redux';import{EventMarkerContainer}from'..';import{medPoints}from'../reducer/mapSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function LocalMap(){var geoInfo=window.localStorage.getItem('sessionGeo').split(',');var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),map=_useState4[0],setMap=_useState4[1];var points=useSelector(function(state){return state.map.mapsState.map(function(x){return{content:/*#__PURE__*/_jsx(\"div\",{style:{padding:\"5px\",color:\"#000\"},children:x.name}),latlng:{lat:x.latitude,lng:x.longitude},id:x.med_point!=null?x.med_point.split(']')[0].substr(1):\"None\"};});});var dispatch=useDispatch();useEffect(function(){dispatch(medPoints({'latitude':geoInfo[0],'longitude':geoInfo[1]}));},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Map,{center:{lat:geoInfo[0],lng:geoInfo[1]},style:{width:\"1400px\",height:\"500px\"},level:6,onCreate:setMap,children:[/*#__PURE__*/_jsx(MapMarker,{position:{lat:geoInfo[0],lng:geoInfo[1]}// title='현재 위치'\n,image:{// 무료 마커이미지의 주소: https://www.flaticon.com/kr/\nsrc:\"https://cdn-icons.flaticon.com/png/512/5693/premium/5693914.png?token=exp=1640596397~hmac=f840c4931c45ce95c0c41f436359ac05\",size:{width:45,height:45},options:{offset:{x:25,y:45}}},onClick:function onClick(marker){return map.panTo(marker.getPosition());},onMouseOver:function onMouseOver(){return setIsOpen(true);},onMouseOut:function onMouseOut(){return setIsOpen(false);},children:isOpen&&/*#__PURE__*/_jsx(\"div\",{style:{padding:\"5px\",color:\"#000\"},children:\"\\uB0B4 \\uC704\\uCE58\"})}),points.map(function(value){return/*#__PURE__*/_jsx(EventMarkerContainer,{position:value.latlng,content:value.content,id:value.id},\"EventMarkerContainer-\".concat(value.latlng.lat,\"-\").concat(value.latlng.lng));})]})});}","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/map/components/LocalMap.js"],"names":["Map","MapMarker","React","useEffect","useState","useDispatch","useSelector","EventMarkerContainer","medPoints","LocalMap","geoInfo","window","localStorage","getItem","split","isOpen","setIsOpen","map","setMap","points","state","mapsState","x","content","padding","color","name","latlng","lat","latitude","lng","longitude","id","med_point","substr","dispatch","width","height","src","size","options","offset","y","marker","panTo","getPosition","value"],"mappings":"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","sourcesContent":["import { Map, MapMarker } from 'react-kakao-maps-sdk';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EventMarkerContainer } from '..';\r\nimport { medPoints } from '../reducer/mapSlice';\r\n\r\n\r\nexport default function LocalMap() {\r\n    const geoInfo = window.localStorage.getItem('sessionGeo').split(',')\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [map, setMap] = useState()\r\n    let points = useSelector(state => state.map.mapsState.map(\r\n        x => {return {content: <div style={{ padding: \"5px\", color: \"#000\" }}>{x.name}</div>,\r\n                      latlng: {lat: x.latitude, lng:x.longitude},\r\n                      id: x.med_point != null ? x.med_point.split(']')[0].substr(1) : \"None\"\r\n                    }}\r\n    )) \r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{ dispatch(medPoints({'latitude': geoInfo[0], 'longitude': geoInfo[1]})) },[])\r\n    return(<>\r\n    <Map\r\n          center={{\r\n            lat: geoInfo[0],\r\n            lng: geoInfo[1],\r\n          }}\r\n          style={{\r\n            width: \"1400px\",\r\n            height: \"500px\",\r\n          }}\r\n          level={6}\r\n          onCreate={setMap}\r\n        >\r\n            <MapMarker\r\n            position={{lat: geoInfo[0], lng:geoInfo[1]}}\r\n            // title='현재 위치'\r\n            image={{\r\n                // 무료 마커이미지의 주소: https://www.flaticon.com/kr/\r\n                src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693914.png?token=exp=1640596397~hmac=f840c4931c45ce95c0c41f436359ac05\", \r\n                size: {\r\n                  width: 45,\r\n                  height: 45,\r\n                }, \r\n                options: {\r\n                  offset: {\r\n                    x: 25,\r\n                    y: 45,\r\n                  }, \r\n                },\r\n              }}\r\n              onClick={(marker) => map.panTo(marker.getPosition())}\r\n              onMouseOver={() => setIsOpen(true)}\r\n              onMouseOut={() => setIsOpen(false)}\r\n            >{isOpen && <div style={{ padding: \"5px\", color: \"#000\" }}>내 위치</div>}</MapMarker>\r\n            {points.map((value) => (\r\n              <EventMarkerContainer\r\n                key={`EventMarkerContainer-${value.latlng.lat}-${value.latlng.lng}`}\r\n                position={value.latlng}\r\n                content={value.content}\r\n                id={value.id}\r\n              />\r\n            ))}\r\n        </Map>\r\n    </>);\r\n}"]},"metadata":{},"sourceType":"module"}
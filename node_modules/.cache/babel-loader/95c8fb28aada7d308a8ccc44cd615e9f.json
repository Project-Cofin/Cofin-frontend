{"ast":null,"code":"import _defineProperty from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{chatbotAPI}from\"..\";var ANSWER=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(x){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return chatbotAPI.chatAnswer(x);case 2:res=_context.sent;return _context.abrupt(\"return\",res.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function ANSWER(_x){return _ref.apply(this,arguments);};}();var STATUS=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(x){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return chatbotAPI.statusAnswer(x);case 2:res=_context2.sent;return _context2.abrupt(\"return\",res.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function STATUS(_x2){return _ref2.apply(this,arguments);};}();var INITSTATUS=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return chatbotAPI.getStatus();case 2:res=_context3.sent;return _context3.abrupt(\"return\",res.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function INITSTATUS(){return _ref3.apply(this,arguments);};}();export var answer=createAsyncThunk('/chat',ANSWER);export var answerStatus=createAsyncThunk('/status',STATUS);export var initStatus=createAsyncThunk('/initStatus',INITSTATUS);var chatbotSlice=createSlice({name:'bot',initialState:{answersState:{},// healthState:{\n//   symptom: '', details: '', level: '', answer: ''\n// },\nhealthStates:{},type:'',keyword:'',params:{}},reducers:{},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,answer.fulfilled,function(state,action){state.answersState=_objectSpread(_objectSpread({},state.answersState),{},_defineProperty({},action.payload['queryid'],action.payload['answer']));}),_defineProperty(_extraReducers,answerStatus.fulfilled,function(state,action){state.healthStates=_objectSpread(_objectSpread({},state.healthStates),{},_defineProperty({},action.payload.symptom,action.payload));}),_defineProperty(_extraReducers,initStatus.fulfilled,function(state,action){window.localStorage.setItem('counter',0);action.payload.forEach(function(element){state.healthStates=_objectSpread(_objectSpread({},state.healthStates),{},_defineProperty({},element['symptom'],action.payload));});}),_extraReducers)});export var currentAnswersState=function currentAnswersState(state){return state.bot.answersState;};export var currentHealthState=function currentHealthState(state){return state.bot.healthState;};// export const currentBotParam = state => state.bot.param\nexport default chatbotSlice.reducer;","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/chatbot/reducer/chatbotSlice.js"],"names":["createAsyncThunk","createSlice","chatbotAPI","ANSWER","x","chatAnswer","res","data","STATUS","statusAnswer","INITSTATUS","getStatus","answer","answerStatus","initStatus","chatbotSlice","name","initialState","answersState","healthStates","type","keyword","params","reducers","extraReducers","fulfilled","state","action","payload","symptom","window","localStorage","setItem","forEach","element","currentAnswersState","bot","currentHealthState","healthState","reducer"],"mappings":"irBAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA8C,kBAA9C,CACA,OAASC,UAAT,KAA2B,IAA3B,CAEA,GAAMC,CAAAA,MAAM,0FAAG,iBAAOC,CAAP,gJACMF,CAAAA,UAAU,CAACG,UAAX,CAAsBD,CAAtB,CADN,QACNE,GADM,+CAELA,GAAG,CAACC,IAFC,wDAAH,kBAANJ,CAAAA,MAAM,4CAAZ,CAIA,GAAMK,CAAAA,MAAM,2FAAG,kBAAOJ,CAAP,qJACKF,CAAAA,UAAU,CAACO,YAAX,CAAwBL,CAAxB,CADL,QACPE,GADO,iDAENA,GAAG,CAACC,IAFE,0DAAH,kBAANC,CAAAA,MAAM,8CAAZ,CAIA,GAAME,CAAAA,UAAU,2FAAG,uKACCR,CAAAA,UAAU,CAACS,SAAX,EADD,QACXL,GADW,iDAEVA,GAAG,CAACC,IAFM,0DAAH,kBAAVG,CAAAA,UAAU,2CAAhB,CAMA,MAAO,IAAME,CAAAA,MAAM,CAAGZ,gBAAgB,CAAC,OAAD,CAAUG,MAAV,CAA/B,CACP,MAAO,IAAMU,CAAAA,YAAY,CAAGb,gBAAgB,CAAC,SAAD,CAAYQ,MAAZ,CAArC,CACP,MAAO,IAAMM,CAAAA,UAAU,CAAGd,gBAAgB,CAAC,aAAD,CAAgBU,UAAhB,CAAnC,CAEP,GAAMK,CAAAA,YAAY,CAAGd,WAAW,CAAC,CAC/Be,IAAI,CAAE,KADyB,CAE/BC,YAAY,CAAE,CACZC,YAAY,CAAE,EADF,CAEZ;AACA;AACA;AACAC,YAAY,CAAC,EALD,CAMZC,IAAI,CAAE,EANM,CAOZC,OAAO,CAAE,EAPG,CAQZC,MAAM,CAAE,EARI,CAFiB,CAY/BC,QAAQ,CAAE,EAZqB,CAa/BC,aAAa,mDACVZ,MAAM,CAACa,SADG,CACS,SAAEC,KAAF,CAASC,MAAT,CAAqB,CACvCD,KAAK,CAACR,YAAN,gCAAyBQ,KAAK,CAACR,YAA/B,wBAA8CS,MAAM,CAACC,OAAP,CAAe,SAAf,CAA9C,CAAyED,MAAM,CAACC,OAAP,CAAe,QAAf,CAAzE,GACD,CAHU,iCAIVf,YAAY,CAACY,SAJH,CAIe,SAAEC,KAAF,CAASC,MAAT,CAAqB,CAC7CD,KAAK,CAACP,YAAN,gCAAyBO,KAAK,CAACP,YAA/B,wBAA8CQ,MAAM,CAACC,OAAP,CAAeC,OAA7D,CAAsEF,MAAM,CAACC,OAA7E,GACD,CANU,iCAOVd,UAAU,CAACW,SAPD,CAOa,SAAEC,KAAF,CAASC,MAAT,CAAoB,CAC1CG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,CAAuC,CAAvC,EACAL,MAAM,CAACC,OAAP,CAAeK,OAAf,CAAuB,SAAAC,OAAO,CAAI,CAChCR,KAAK,CAACP,YAAN,gCAAyBO,KAAK,CAACP,YAA/B,wBAA8Ce,OAAO,CAAC,SAAD,CAArD,CAAkEP,MAAM,CAACC,OAAzE,GACD,CAFD,EAID,CAbU,iBAbkB,CAAD,CAAhC,CA8BA,MAAO,IAAMO,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAT,KAAK,QAAIA,CAAAA,KAAK,CAACU,GAAN,CAAUlB,YAAd,EAAjC,CACP,MAAO,IAAMmB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAX,KAAK,QAAIA,CAAAA,KAAK,CAACU,GAAN,CAAUE,WAAd,EAAhC,CACP;AACA,cAAevB,CAAAA,YAAY,CAACwB,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { chatbotAPI } from \"..\";\r\n\r\nconst ANSWER = async (x) => {\r\n   const res = await chatbotAPI.chatAnswer(x)\r\n   return res.data\r\n}\r\nconst STATUS = async (x) => {\r\n  const res = await chatbotAPI.statusAnswer(x)\r\n  return res.data\r\n}\r\nconst INITSTATUS = async() => {\r\n  const res = await chatbotAPI.getStatus()\r\n  return res.data\r\n}\r\n\r\n\r\nexport const answer = createAsyncThunk('/chat', ANSWER)\r\nexport const answerStatus = createAsyncThunk('/status', STATUS)\r\nexport const initStatus = createAsyncThunk('/initStatus', INITSTATUS)\r\n\r\nconst chatbotSlice = createSlice({\r\n  name: 'bot',\r\n  initialState: {\r\n    answersState: {},\r\n    // healthState:{\r\n    //   symptom: '', details: '', level: '', answer: ''\r\n    // },\r\n    healthStates:{},\r\n    type: '',\r\n    keyword: '',\r\n    params: {}\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [answer.fulfilled]: ( state, action ) => { \r\n      state.answersState = {...state.answersState, [action.payload['queryid']]:action.payload['answer']}\r\n    },\r\n    [answerStatus.fulfilled]: ( state, action ) => { \r\n      state.healthStates = {...state.healthStates, [action.payload.symptom]:action.payload}\r\n    },\r\n    [initStatus.fulfilled]: ( state, action) => {\r\n      window.localStorage.setItem('counter', 0)\r\n      action.payload.forEach(element => {\r\n        state.healthStates = {...state.healthStates, [element['symptom']]:action.payload}\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n})\r\nexport const currentAnswersState = state => state.bot.answersState\r\nexport const currentHealthState = state => state.bot.healthState\r\n// export const currentBotParam = state => state.bot.param\r\nexport default chatbotSlice.reducer;"]},"metadata":{},"sourceType":"module"}
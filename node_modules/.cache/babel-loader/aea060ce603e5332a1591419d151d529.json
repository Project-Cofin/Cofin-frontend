{"ast":null,"code":"import _objectSpread from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import*as Yup from'yup';import{Link as RouterLink,useNavigate}from'react-router-dom';import{useFormik,Form,FormikProvider}from'formik';import{Icon}from'@iconify/react';import eyeFill from'@iconify/icons-eva/eye-fill';import eyeOffFill from'@iconify/icons-eva/eye-off-fill';import{Link,Stack,Checkbox,TextField,IconButton,InputAdornment,FormControlLabel}from'@mui/material';import{Button}from'@mui/material';// import Navigation from 'common/Navigation';\nimport{UserLost,UserPage}from'features/user';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LoginForm(){var navigate=useNavigate();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];var LoginSchema=Yup.object().shape({email:Yup.string().email().required('*필수 항목'),password:Yup.string().required('*필수 항목')});var formik=useFormik({initialValues:{email:'',password:'',remember:true},validationSchema:LoginSchema,onSubmit:function onSubmit(){navigate({UserPage:UserPage},{replace:true});}});var errors=formik.errors,touched=formik.touched,values=formik.values,isSubmitting=formik.isSubmitting,handleSubmit=formik.handleSubmit,getFieldProps=formik.getFieldProps;var handleShowPassword=function handleShowPassword(){setShowPassword(function(show){return!show;});};return/*#__PURE__*/_jsxs(\"div\",{align:\"center\",style:{display:\"inline-block\",marginLeft:\"200px\",width:\"800px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"\\uB85C\\uADF8\\uC778\"})}),/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsxs(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Stack,{spacing:3,children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,autoComplete:\"user_email\",type:\"email\",label:\"\\uC774\\uBA54\\uC77C\"},getFieldProps('email')),{},{error:Boolean(touched.email&&errors.email),helperText:touched.email&&errors.email})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,autoComplete:\"current-password\",type:showPassword?'text':'password',label:\"\\uBE44\\uBC00\\uBC88\\uD638\"},getFieldProps('password')),{},{InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleShowPassword,edge:\"end\",children:/*#__PURE__*/_jsx(Icon,{icon:showPassword?eyeFill:eyeOffFill})})})},error:Boolean(touched.password&&errors.password),helperText:touched.password&&errors.password}))]}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",justifyContent:\"space-between\",sx:{my:2},children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread({},getFieldProps('remember')),{},{checked:values.remember})),label:\"\\uB85C\\uADF8\\uC778 \\uC0C1\\uD0DC \\uC720\\uC9C0\"}),/*#__PURE__*/_jsx(\"a\",{href:\"lost\",children:/*#__PURE__*/_jsx(\"small\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"})}),/*#__PURE__*/_jsx(\"a\",{href:\"unregis\",children:/*#__PURE__*/_jsx(\"small\",{children:\"\\uD68C\\uC6D0 \\uD0C8\\uD1F4\"})})]}),/*#__PURE__*/_jsx(Button,{fullWidth:true,size:\"large\",type:\"submit\",variant:\"contained\",loading:isSubmitting,onClick:function onClick(){console.log(\"success\");},children:\"\\uB85C\\uADF8\\uC778\"})]})})]});}","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/user/components/UserLogin.js"],"names":["React","useState","Yup","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","Button","UserLost","UserPage","LoginForm","navigate","showPassword","setShowPassword","LoginSchema","object","shape","email","string","required","password","formik","initialValues","remember","validationSchema","onSubmit","replace","errors","touched","values","isSubmitting","handleSubmit","getFieldProps","handleShowPassword","show","display","marginLeft","width","Boolean","endAdornment","my","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport { Button } from '@mui/material';\r\n// import Navigation from 'common/Navigation';\r\nimport { UserLost, UserPage } from 'features/user';\r\n\r\nexport default function LoginForm() {\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email().required('*필수 항목'),\r\n    password: Yup.string().required('*필수 항목')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      remember: true\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: () => {\r\n      navigate({UserPage}, { replace: true });\r\n    }\r\n  });\r\n\r\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((show) => !show);\r\n  };\r\n\r\n  return (\r\n    <div align=\"center\" style={{ display: \"inline-block\", marginLeft:\"200px\", width: \"800px\" }}>\r\n      <h1><b>로그인</b></h1>\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"user_email\"\r\n            type=\"email\"\r\n            label=\"이메일\"\r\n            {...getFieldProps('email')}\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"current-password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            label=\"비밀번호\"\r\n            {...getFieldProps('password')}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\r\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\r\n          <FormControlLabel\r\n            control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\r\n            label=\"로그인 상태 유지\"\r\n          />\r\n\r\n          <a href=\"lost\"><small>비밀번호 찾기</small></a>\r\n          <a href=\"unregis\"><small>회원 탈퇴</small></a>\r\n        </Stack>\r\n\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          loading={isSubmitting}\r\n          onClick={()=>{\r\n            \r\n            console.log(`success`)\r\n        }}>\r\n          로그인\r\n        </Button>        \r\n      </Form>\r\n    </FormikProvider>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
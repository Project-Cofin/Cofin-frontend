{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\cofin-msa-board\\\\frontend\\\\src\\\\features\\\\map\\\\components\\\\EventMarkerContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MapMarker, useMap } from \"react-kakao-maps-sdk\";\nimport { useDispatch } from \"react-redux\";\nimport { medPoint } from \"../reducer/mapSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventMarkerContainer({\n  position,\n  content,\n  id\n}) {\n  _s();\n\n  const map = useMap();\n  const [isVisible, setIsVisible] = useState(false);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(MapMarker, {\n    position: position,\n    image: {\n      src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693879.png?token=exp=1637741898~hmac=59a8cfd836c546dab8091bb296ba21aa\",\n      size: {\n        width: 45,\n        height: 45\n      },\n      options: {\n        offset: {\n          x: 25,\n          y: 45\n        }\n      }\n    },\n    onClick: marker => {\n      if (id != \"None\") dispatch(medPoint(id));\n      map.panTo(marker.getPosition());\n    },\n    onMouseOver: () => setIsVisible(true),\n    onMouseOut: () => setIsVisible(false),\n    children: isVisible && content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EventMarkerContainer, \"1nnxATW6P68XKqHCiD7IyJh4UAg=\", false, function () {\n  return [useMap, useDispatch];\n});\n\n_c = EventMarkerContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventMarkerContainer\");","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/map/components/EventMarkerContainer.js"],"names":["React","useState","MapMarker","useMap","useDispatch","medPoint","EventMarkerContainer","position","content","id","map","isVisible","setIsVisible","dispatch","src","size","width","height","options","offset","x","y","marker","panTo","getPosition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,sBAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,eAAe,SAASC,oBAAT,CAA8B;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAA9B,EAAyD;AAAA;;AACpE,QAAMC,GAAG,GAAGP,MAAM,EAAlB;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMY,QAAQ,GAAGT,WAAW,EAA5B;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,QAAQ,EAAEG,QADZ;AAEE,IAAA,KAAK,EAAE;AACLO,MAAAA,GAAG,EAAE,4HADA;AAELC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OAFD;AAMLC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE,EADG;AAENC,UAAAA,CAAC,EAAE;AAFG;AADD;AANJ,KAFT;AAeE,IAAA,OAAO,EAAGC,MAAD,IAAY;AACnB,UAAIb,EAAE,IAAI,MAAV,EAAkBI,QAAQ,CAACR,QAAQ,CAACI,EAAD,CAAT,CAAR;AAClBC,MAAAA,GAAG,CAACa,KAAJ,CAAUD,MAAM,CAACE,WAAP,EAAV;AAAgC,KAjBpC;AAkBE,IAAA,WAAW,EAAE,MAAMZ,YAAY,CAAC,IAAD,CAlBjC;AAmBE,IAAA,UAAU,EAAE,MAAMA,YAAY,CAAC,KAAD,CAnBhC;AAAA,cAqBGD,SAAS,IAAIH;AArBhB;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA9BqBF,oB;UACRH,M,EAEKC,W;;;KAHGE,oB","sourcesContent":["import React, { useState } from \"react\"\r\nimport { MapMarker, useMap } from \"react-kakao-maps-sdk\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { medPoint } from \"../reducer/mapSlice\"\r\n\r\nexport default function EventMarkerContainer({ position, content, id }) {\r\n    const map = useMap()\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n      <MapMarker\r\n        position={position}\r\n        image={{\r\n          src: \"https://cdn-icons.flaticon.com/png/512/5693/premium/5693879.png?token=exp=1637741898~hmac=59a8cfd836c546dab8091bb296ba21aa\", \r\n          size: {\r\n            width: 45,\r\n            height: 45,\r\n          }, \r\n          options: {\r\n            offset: {\r\n              x: 25,\r\n              y: 45,\r\n            }, \r\n          },\r\n        }}\r\n        onClick={(marker) => {\r\n          if (id != \"None\") dispatch(medPoint(id))\r\n          map.panTo(marker.getPosition())}}\r\n        onMouseOver={() => setIsVisible(true)}\r\n        onMouseOut={() => setIsVisible(false)}\r\n      >\r\n        {isVisible && content}\r\n      </MapMarker>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}
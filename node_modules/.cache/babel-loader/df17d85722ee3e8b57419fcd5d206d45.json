{"ast":null,"code":"import _defineProperty from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{coronaAPI}from'features/corona';var TODAY=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return coronaAPI.today();case 2:res=_context.sent;return _context.abrupt(\"return\",res.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function TODAY(){return _ref.apply(this,arguments);};}();var WEEK=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return coronaAPI.week();case 2:res=_context2.sent;return _context2.abrupt(\"return\",res.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function WEEK(){return _ref2.apply(this,arguments);};}();var CONFIRMED=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return coronaAPI.confirmed();case 2:res=_context3.sent;return _context3.abrupt(\"return\",res.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function CONFIRMED(){return _ref3.apply(this,arguments);};}();export var getToday=createAsyncThunk('/today',TODAY);export var getWeek=createAsyncThunk('/week',WEEK);export var getConfirmed=createAsyncThunk('/confirmed',CONFIRMED);var coronaSlice=createSlice({name:'chart',initialState:{todayState:{death:\"\",serious:\"\",new_hospitalization:\"\",confirmed:\"\",update_at:\"\"},weekState:{death:\"\",serious:\"\",new_hospitalization:\"\",confirmed:\"\",update_at:\"\"},confirmedState:[],type:'',keyword:'',params:{}},reducers:{},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,getToday.fulfilled,function(state,action){state.todayState=action.payload;}),_defineProperty(_extraReducers,getWeek.fulfilled,function(state,action){state.weekState=action.payload;}),_defineProperty(_extraReducers,getConfirmed.fulfilled,function(state,action){state.confirmedState=[];action.payload.forEach(function(element){state.confirmedState=[].concat(_toConsumableArray(state.confirmedState),[{lineValue:element.confirmed*0.01,argument:element.date.split('T')[0].substr(5)}]);});}),_extraReducers)});export var currentTodayState=function currentTodayState(state){return state.chart.todayState;};export var currentWeekState=function currentWeekState(state){return state.chart.weekState;};export var currentConfirmedState=function currentConfirmedState(state){return state.chart.confirmedState;};export default coronaSlice.reducer;","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/cofin-msa-board/frontend/src/features/corona/reducer/coronaSlice.js"],"names":["createAsyncThunk","createSlice","coronaAPI","TODAY","today","res","data","WEEK","week","CONFIRMED","confirmed","getToday","getWeek","getConfirmed","coronaSlice","name","initialState","todayState","death","serious","new_hospitalization","update_at","weekState","confirmedState","type","keyword","params","reducers","extraReducers","fulfilled","state","action","payload","forEach","element","lineValue","argument","date","split","substr","currentTodayState","chart","currentWeekState","currentConfirmedState","reducer"],"mappings":"0rBAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA8C,kBAA9C,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,GAAMC,CAAAA,KAAK,0FAAG,iKACOD,CAAAA,SAAS,CAACE,KAAV,EADP,QACLC,GADK,+CAEJA,GAAG,CAACC,IAFA,wDAAH,kBAALH,CAAAA,KAAK,0CAAX,CAIA,GAAMI,CAAAA,IAAI,2FAAG,uKACSL,CAAAA,SAAS,CAACM,IAAV,EADT,QACHH,GADG,iDAEFA,GAAG,CAACC,IAFF,0DAAH,kBAAJC,CAAAA,IAAI,2CAAV,CAIA,GAAME,CAAAA,SAAS,2FAAG,uKACIP,CAAAA,SAAS,CAACQ,SAAV,EADJ,QACRL,GADQ,iDAEPA,GAAG,CAACC,IAFG,0DAAH,kBAATG,CAAAA,SAAS,2CAAf,CAIA,MAAO,IAAME,CAAAA,QAAQ,CAAGX,gBAAgB,CAAC,QAAD,CAAWG,KAAX,CAAjC,CACP,MAAO,IAAMS,CAAAA,OAAO,CAAGZ,gBAAgB,CAAC,OAAD,CAAUO,IAAV,CAAhC,CACP,MAAO,IAAMM,CAAAA,YAAY,CAAGb,gBAAgB,CAAC,YAAD,CAAeS,SAAf,CAArC,CACP,GAAMK,CAAAA,WAAW,CAAGb,WAAW,CAAC,CAC9Bc,IAAI,CAAE,OADwB,CAE9BC,YAAY,CAAE,CACZC,UAAU,CAAE,CACVC,KAAK,CAAE,EADG,CAEVC,OAAO,CAAE,EAFC,CAGVC,mBAAmB,CAAE,EAHX,CAIVV,SAAS,CAAE,EAJD,CAKVW,SAAS,CAAE,EALD,CADA,CAQZC,SAAS,CAAE,CACTJ,KAAK,CAAE,EADE,CAETC,OAAO,CAAE,EAFA,CAGTC,mBAAmB,CAAE,EAHZ,CAITV,SAAS,CAAE,EAJF,CAKTW,SAAS,CAAE,EALF,CARC,CAeZE,cAAc,CAAE,EAfJ,CAgBZC,IAAI,CAAE,EAhBM,CAiBZC,OAAO,CAAE,EAjBG,CAkBZC,MAAM,CAAE,EAlBI,CAFgB,CAsB9BC,QAAQ,CAAE,EAtBoB,CAuB9BC,aAAa,mDACVjB,QAAQ,CAACkB,SADC,CACW,SAAEC,KAAF,CAASC,MAAT,CAAqB,CACzCD,KAAK,CAACb,UAAN,CAAmBc,MAAM,CAACC,OAA1B,CACD,CAHU,iCAIVpB,OAAO,CAACiB,SAJE,CAIU,SAAEC,KAAF,CAASC,MAAT,CAAqB,CACxCD,KAAK,CAACR,SAAN,CAAkBS,MAAM,CAACC,OAAzB,CACD,CANU,iCAOVnB,YAAY,CAACgB,SAPH,CAOe,SAAEC,KAAF,CAASC,MAAT,CAAqB,CAC7CD,KAAK,CAACP,cAAN,CAAuB,EAAvB,CACAQ,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuB,SAAAC,OAAO,CAAI,CAChCJ,KAAK,CAACP,cAAN,8BAA2BO,KAAK,CAACP,cAAjC,GAAiD,CAACY,SAAS,CAAED,OAAO,CAACxB,SAAR,CAAkB,IAA9B,CAAoC0B,QAAQ,CAAEF,OAAO,CAACG,IAAR,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,EAA2BC,MAA3B,CAAkC,CAAlC,CAA9C,CAAjD,GACD,CAFD,EAGD,CAZU,iBAvBiB,CAAD,CAA/B,CAsCA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAV,KAAK,QAAIA,CAAAA,KAAK,CAACW,KAAN,CAAYxB,UAAhB,EAA/B,CACP,MAAO,IAAMyB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAZ,KAAK,QAAIA,CAAAA,KAAK,CAACW,KAAN,CAAYnB,SAAhB,EAA9B,CACP,MAAO,IAAMqB,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAAb,KAAK,QAAIA,CAAAA,KAAK,CAACW,KAAN,CAAYlB,cAAhB,EAAnC,CACP,cAAeT,CAAAA,WAAW,CAAC8B,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { coronaAPI } from 'features/corona';\r\nconst TODAY = async () => {\r\n   const res = await coronaAPI.today()\r\n   return res.data\r\n}\r\nconst WEEK = async () => {\r\n    const res = await coronaAPI.week()\r\n    return res.data\r\n }\r\nconst CONFIRMED = async () => {\r\n    const res = await coronaAPI.confirmed()\r\n    return res.data\r\n }\r\nexport const getToday = createAsyncThunk('/today', TODAY)\r\nexport const getWeek = createAsyncThunk('/week', WEEK)\r\nexport const getConfirmed = createAsyncThunk('/confirmed', CONFIRMED)\r\nconst coronaSlice = createSlice({\r\n  name: 'chart',\r\n  initialState: {\r\n    todayState: {\r\n      death: \"\",\r\n      serious: \"\",\r\n      new_hospitalization: \"\",\r\n      confirmed: \"\",\r\n      update_at: \"\"\r\n    },\r\n    weekState: {\r\n      death: \"\",\r\n      serious: \"\",\r\n      new_hospitalization: \"\",\r\n      confirmed: \"\",\r\n      update_at: \"\"\r\n    },\r\n    confirmedState: [],\r\n    type: '',\r\n    keyword: '',\r\n    params: {}\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getToday.fulfilled]: ( state, action ) => {\r\n      state.todayState = action.payload\r\n    },\r\n    [getWeek.fulfilled]: ( state, action ) => {\r\n      state.weekState = action.payload\r\n    },\r\n    [getConfirmed.fulfilled]: ( state, action ) => {\r\n      state.confirmedState = []\r\n      action.payload.forEach(element => {\r\n        state.confirmedState = [...state.confirmedState, {lineValue: element.confirmed*0.01, argument: element.date.split('T')[0].substr(5)}]\r\n      });\r\n    },\r\n  }\r\n})\r\nexport const currentTodayState = state => state.chart.todayState\r\nexport const currentWeekState = state => state.chart.weekState\r\nexport const currentConfirmedState = state => state.chart.confirmedState\r\nexport default coronaSlice.reducer;"]},"metadata":{},"sourceType":"module"}
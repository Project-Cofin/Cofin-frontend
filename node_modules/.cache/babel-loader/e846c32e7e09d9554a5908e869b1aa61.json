{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\test\\\\new\\\\Cofin-frontend\\\\src\\\\features\\\\corona\\\\components\\\\StackChart.js\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, BarSeries, ArgumentAxis, ValueAxis } from '@devexpress/dx-react-chart-material-ui';\nimport { EventTracker, SelectionState } from '@devexpress/dx-react-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  label: '1950',\n  population: 2.525\n}, {\n  label: '1960',\n  population: 3.018\n}, {\n  label: '1970',\n  population: 3.682\n}, {\n  label: '1980',\n  population: 4.440\n}, {\n  label: '1990',\n  population: 5.310\n}, {\n  label: '2000',\n  population: 6.127\n}, {\n  label: '2010',\n  population: 6.930\n}];\n\nconst compare = ({\n  series,\n  point\n}, {\n  series: targetSeries,\n  point: targetPoint\n}) => series === targetSeries && point === targetPoint;\n\nexport default class StackChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data,\n      selection: []\n    };\n\n    this.click = ({\n      targets\n    }) => {\n      const target = targets[0];\n\n      if (target) {\n        this.setState(({\n          selection\n        }) => ({\n          selection: selection[0] && compare(selection[0], target) ? [] : [target]\n        }));\n      }\n    };\n  }\n\n  render() {\n    const {\n      data: chartData,\n      selection\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Selected value:\", ' ', selection.length ? data[selection[0].point].population : undefined]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n            valueField: \"population\",\n            argumentField: \"year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EventTracker, {\n            onClick: this.click\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SelectionState, {\n            selection: selection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n} // import * as React from 'react';\n// import {\n//   Chart,\n//   ArgumentAxis,\n//   ValueAxis,\n//   BarSeries,\n//   Title,\n//   Legend,\n// } from '@devexpress/dx-react-chart-bootstrap4';\n// import { Stack, Animation } from '@devexpress/dx-react-chart';\n// import { energyConsumption as data } from '../demo-data/data-vizualization';\n// const Root = props => (\n//   <Legend.Root\n//     {...props}\n//     className=\"m-auto flex-row\"\n//   />\n// );\n// export default class StackChart extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data,\n//     };\n//   }\n//   render() {\n//     const { data: chartData } = this.state;\n//     return (\n//       <div className=\"card\">\n//         <Chart\n//           data={chartData}\n//         >\n//           <ArgumentAxis />\n//           <ValueAxis\n//             max={2400}\n//           />\n//           <BarSeries\n//             name=\"Hydro-electric\"\n//             valueField=\"hydro\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Oil\"\n//             valueField=\"oil\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Natural gas\"\n//             valueField=\"gas\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Coal\"\n//             valueField=\"coal\"\n//             argumentField=\"country\"\n//           />\n//           <BarSeries\n//             name=\"Nuclear\"\n//             valueField=\"nuclear\"\n//             argumentField=\"country\"\n//           />\n//           <Animation />\n//           <Legend position=\"bottom\" rootComponent={Root} />\n//           <Title text=\"Energy Consumption in 2004 (Millions of Tons, Oil Equivalent)\" />\n//           <Stack\n//             stacks={[\n//               { series: ['Hydro-electric', 'Oil', 'Natural gas', 'Coal', 'Nuclear'] },\n//             ]}\n//           />\n//         </Chart>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/test/new/Cofin-frontend/src/features/corona/components/StackChart.js"],"names":["React","Paper","Chart","BarSeries","ArgumentAxis","ValueAxis","EventTracker","SelectionState","data","label","population","compare","series","point","targetSeries","targetPoint","StackChart","PureComponent","constructor","props","state","selection","click","targets","target","setState","render","chartData","length","undefined"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,SAJF,QAKO,wCALP;AAOA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,4BAA7C;;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CADW,EAEX;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CAFW,EAGX;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CAHW,EAIX;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CAJW,EAKX;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CALW,EAMX;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CANW,EAOX;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CAPW,CAAb;;AAUA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CADc,EACK;AAAED,EAAAA,MAAM,EAAEE,YAAV;AAAwBD,EAAAA,KAAK,EAAEE;AAA/B,CADL,KAEXH,MAAM,KAAKE,YAAX,IAA2BD,KAAK,KAAKE,WAF1C;;AAIA,eAAe,MAAMC,UAAN,SAAyBhB,KAAK,CAACiB,aAA/B,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXZ,MAAAA,IADW;AAEXa,MAAAA,SAAS,EAAE;AAFA,KAAb;;AAKA,SAAKC,KAAL,GAAa,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AAC5B,YAAMC,MAAM,GAAGD,OAAO,CAAC,CAAD,CAAtB;;AACA,UAAIC,MAAJ,EAAY;AACV,aAAKC,QAAL,CAAc,CAAC;AAAEJ,UAAAA;AAAF,SAAD,MAAoB;AAChCA,UAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAAT,IAAgBV,OAAO,CAACU,SAAS,CAAC,CAAD,CAAV,EAAeG,MAAf,CAAvB,GAAgD,EAAhD,GAAqD,CAACA,MAAD;AADhC,SAApB,CAAd;AAGD;AACF,KAPD;AAQD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA,IAAI,EAAEmB,SAAR;AAAmBN,MAAAA;AAAnB,QAAiC,KAAKD,KAA5C;AAEA,wBACE;AAAA,8BACE;AAAA,sCAEG,GAFH,EAGGC,SAAS,CAACO,MAAV,GAAmBpB,IAAI,CAACa,SAAS,CAAC,CAAD,CAAT,CAAaR,KAAd,CAAJ,CAAyBH,UAA5C,GAAyDmB,SAH5D;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAEF,SADR;AAAA,kCAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAME,QAAC,SAAD;AACE,YAAA,UAAU,EAAC,YADb;AAEE,YAAA,aAAa,EAAC;AAFhB;AAAA;AAAA;AAAA;AAAA,kBANF,eAUE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAE,KAAKL;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE,QAAC,cAAD;AAAgB,YAAA,SAAS,EAAED;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AA9CyD,C,CAiD5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { EventTracker, SelectionState } from '@devexpress/dx-react-chart';\r\n\r\nconst data = [\r\n  { label: '1950', population: 2.525 },\r\n  { label: '1960', population: 3.018 },\r\n  { label: '1970', population: 3.682 },\r\n  { label: '1980', population: 4.440 },\r\n  { label: '1990', population: 5.310 },\r\n  { label: '2000', population: 6.127 },\r\n  { label: '2010', population: 6.930 },\r\n];\r\n\r\nconst compare = (\r\n  { series, point }, { series: targetSeries, point: targetPoint },\r\n) => series === targetSeries && point === targetPoint;\r\n\r\nexport default class StackChart extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data,\r\n      selection: [],\r\n    };\r\n\r\n    this.click = ({ targets }) => {\r\n      const target = targets[0];\r\n      if (target) {\r\n        this.setState(({ selection }) => ({\r\n          selection: selection[0] && compare(selection[0], target) ? [] : [target],\r\n        }));\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { data: chartData, selection } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <span>\r\n          Selected value:\r\n          {' '}\r\n          {selection.length ? data[selection[0].point].population : undefined}\r\n        </span>\r\n        <Paper>\r\n          <Chart\r\n            data={chartData}\r\n          >\r\n            <ArgumentAxis />\r\n            <ValueAxis />\r\n\r\n            <BarSeries\r\n              valueField=\"population\"\r\n              argumentField=\"year\"\r\n            />\r\n            <EventTracker onClick={this.click} />\r\n            <SelectionState selection={selection} />\r\n          </Chart>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// import * as React from 'react';\r\n// import {\r\n//   Chart,\r\n//   ArgumentAxis,\r\n//   ValueAxis,\r\n//   BarSeries,\r\n//   Title,\r\n//   Legend,\r\n// } from '@devexpress/dx-react-chart-bootstrap4';\r\n// import { Stack, Animation } from '@devexpress/dx-react-chart';\r\n\r\n// import { energyConsumption as data } from '../demo-data/data-vizualization';\r\n\r\n// const Root = props => (\r\n//   <Legend.Root\r\n//     {...props}\r\n//     className=\"m-auto flex-row\"\r\n//   />\r\n// );\r\n\r\n// export default class StackChart extends React.PureComponent {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       data,\r\n//     };\r\n//   }\r\n\r\n//   render() {\r\n//     const { data: chartData } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"card\">\r\n//         <Chart\r\n//           data={chartData}\r\n//         >\r\n//           <ArgumentAxis />\r\n//           <ValueAxis\r\n//             max={2400}\r\n//           />\r\n\r\n//           <BarSeries\r\n//             name=\"Hydro-electric\"\r\n//             valueField=\"hydro\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Oil\"\r\n//             valueField=\"oil\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Natural gas\"\r\n//             valueField=\"gas\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Coal\"\r\n//             valueField=\"coal\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <BarSeries\r\n//             name=\"Nuclear\"\r\n//             valueField=\"nuclear\"\r\n//             argumentField=\"country\"\r\n//           />\r\n//           <Animation />\r\n//           <Legend position=\"bottom\" rootComponent={Root} />\r\n//           <Title text=\"Energy Consumption in 2004 (Millions of Tons, Oil Equivalent)\" />\r\n//           <Stack\r\n//             stacks={[\r\n//               { series: ['Hydro-electric', 'Oil', 'Natural gas', 'Coal', 'Nuclear'] },\r\n//             ]}\r\n//           />\r\n//         </Chart>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}
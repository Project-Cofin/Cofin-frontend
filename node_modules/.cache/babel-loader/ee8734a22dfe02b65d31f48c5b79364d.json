{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\test\\\\new\\\\Cofin-frontend\\\\src\\\\features\\\\corona\\\\components\\\\HeaderChart.js\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { ArgumentAxis, ValueAxis, Chart, LineSeries, SplineSeries } from '@devexpress/dx-react-chart-material-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateData = (start, end, step) => {\n  const data = [];\n\n  for (let i = start; i < end; i += step) {\n    data.push({\n      lineValue: (i / 15) ** 2.718 - 0.2,\n      argument: i\n    });\n  } // alert(JSON.stringify(data))\n\n\n  return data;\n};\n\nexport default class HeaderChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: generateData(2.5, 12, 0.5)\n    };\n  }\n\n  render() {\n    const {\n      data: chartData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          name: \"line\",\n          valueField: \"lineValue\",\n          argumentField: \"argument\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SplineSeries, {\n          name: \"spline\",\n          valueField: \"splineValue\",\n          argumentField: \"argument\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n} // import * as React from 'react';\n// import {\n//   Chart,\n//   ArgumentAxis,\n//   ValueAxis,\n//   LineSeries,\n//   Title,\n//   Legend,\n// } from '@devexpress/dx-react-chart-bootstrap4';\n// import { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\n// import {\n//   curveCatmullRom,\n//   line,\n// } from 'd3-shape';\n// import { scalePoint } from 'd3-scale';\n// import { energyConsumption as data } from '../demo-data/data-vizualization';\n// const Line = props => (\n//   <LineSeries.Path\n//     {...props}\n//     path={line()\n//       .x(({ arg }) => arg)\n//       .y(({ val }) => val)\n//       .curve(curveCatmullRom)}\n//   />\n// );\n// const Text = (props) => {\n//   const { text } = props;\n//   const [mainText, subText] = text.split('\\\\n');\n//   return (\n//     <div className=\"w-100 text-center mb-2\">\n//       <h3>\n//         {mainText}\n//       </h3>\n//       <p>{subText}</p>\n//     </div>\n//   );\n// };\n// const Root = props => (\n//   <Legend.Root\n//     {...props}\n//     className=\"m-auto flex-row\"\n//   />\n// );\n// const Item = props => (\n//   <Legend.Item\n//     {...props}\n//     className=\"flex-column-reverse\"\n//   />\n// );\n// const Label = props => (\n//   <Legend.Label\n//     {...props}\n//     className=\"pb-2\"\n//   />\n// );\n// export default class HeaderChart extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data,\n//     };\n//   }\n//   render() {\n//     const { data: chartData } = this.state;\n//     return (\n//       <div className=\"card\">\n//         <Chart\n//           data={chartData}\n//           className=\"pr-4\"\n//         >\n//           <ArgumentScale factory={scalePoint} />\n//           <ArgumentAxis />\n//           <ValueAxis />\n//           <LineSeries\n//             name=\"결과\"\n//             valueField=\"hydro\"\n//             argumentField=\"country\"\n//             seriesComponent={Line}\n//           />\n//           <LineSeries\n//             name=\"예상치\"\n//             valueField=\"oil\"\n//             argumentField=\"country\"\n//             seriesComponent={Line}\n//           />\n//           <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} />\n//           <Title\n//             text=\"Energy Consumption in 2004\\n(Millions of Tons, Oil Equivalent)\"\n//             textComponent={Text}\n//           />\n//           <Animation />\n//         </Chart>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/test/new/Cofin-frontend/src/features/corona/components/HeaderChart.js"],"names":["React","Paper","ArgumentAxis","ValueAxis","Chart","LineSeries","SplineSeries","generateData","start","end","step","data","i","push","lineValue","argument","HeaderChart","PureComponent","constructor","props","state","render","chartData"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACEC,YADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,YALF,QAMO,wCANP;;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,IAAb,KAAsB;AACzC,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAGJ,KAAb,EAAoBI,CAAC,GAAGH,GAAxB,EAA6BG,CAAC,IAAIF,IAAlC,EAAwC;AACtCC,IAAAA,IAAI,CAACE,IAAL,CAAU;AAAEC,MAAAA,SAAS,EAAG,CAACF,CAAC,GAAG,EAAL,KAAY,KAAb,GAAsB,GAAnC;AAAwCG,MAAAA,QAAQ,EAAEH;AAAlD,KAAV;AACD,GAJwC,CAKzC;;;AAEA,SAAOD,IAAP;AACD,CARD;;AAUA,eAAe,MAAMK,WAAN,SAA0BhB,KAAK,CAACiB,aAAhC,CAA8C;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXT,MAAAA,IAAI,EAAEJ,YAAY,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV;AADP,KAAb;AAGD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,IAAI,EAAEW;AAAR,QAAsB,KAAKF,KAAjC;AAEA,wBACE,QAAC,KAAD;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAEE,SADR;AAAA,gCAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAME,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,UAAU,EAAC,WAFb;AAGE,UAAA,aAAa,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,UAAU,EAAC,aAFb;AAGE,UAAA,aAAa,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAjC0D,C,CAoC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Chart,\r\n  LineSeries,\r\n  SplineSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nconst generateData = (start, end, step) => {\r\n  const data = [];\r\n  for (let i = start; i < end; i += step) {\r\n    data.push({ lineValue: ((i / 15) ** 2.718) - 0.2, argument: i });\r\n  }\r\n  // alert(JSON.stringify(data))\r\n\r\n  return data;\r\n};\r\n\r\nexport default class HeaderChart extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: generateData(2.5, 12, 0.5),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { data: chartData } = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n        <Chart\r\n          data={chartData}\r\n        >\r\n          <ArgumentAxis />\r\n          <ValueAxis />\r\n\r\n          <LineSeries\r\n            name=\"line\"\r\n            valueField=\"lineValue\"\r\n            argumentField=\"argument\"\r\n          />\r\n          <SplineSeries\r\n            name=\"spline\"\r\n            valueField=\"splineValue\"\r\n            argumentField=\"argument\"\r\n          />\r\n        </Chart>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n// import * as React from 'react';\r\n// import {\r\n//   Chart,\r\n//   ArgumentAxis,\r\n//   ValueAxis,\r\n//   LineSeries,\r\n//   Title,\r\n//   Legend,\r\n// } from '@devexpress/dx-react-chart-bootstrap4';\r\n// import { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\r\n// import {\r\n//   curveCatmullRom,\r\n//   line,\r\n// } from 'd3-shape';\r\n// import { scalePoint } from 'd3-scale';\r\n\r\n// import { energyConsumption as data } from '../demo-data/data-vizualization';\r\n\r\n// const Line = props => (\r\n//   <LineSeries.Path\r\n//     {...props}\r\n//     path={line()\r\n//       .x(({ arg }) => arg)\r\n//       .y(({ val }) => val)\r\n//       .curve(curveCatmullRom)}\r\n//   />\r\n// );\r\n\r\n// const Text = (props) => {\r\n//   const { text } = props;\r\n//   const [mainText, subText] = text.split('\\\\n');\r\n//   return (\r\n//     <div className=\"w-100 text-center mb-2\">\r\n//       <h3>\r\n//         {mainText}\r\n//       </h3>\r\n//       <p>{subText}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n// const Root = props => (\r\n//   <Legend.Root\r\n//     {...props}\r\n//     className=\"m-auto flex-row\"\r\n//   />\r\n// );\r\n// const Item = props => (\r\n//   <Legend.Item\r\n//     {...props}\r\n//     className=\"flex-column-reverse\"\r\n//   />\r\n// );\r\n// const Label = props => (\r\n//   <Legend.Label\r\n//     {...props}\r\n//     className=\"pb-2\"\r\n//   />\r\n// );\r\n\r\n// export default class HeaderChart extends React.PureComponent {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       data,\r\n//     };\r\n//   }\r\n\r\n//   render() {\r\n//     const { data: chartData } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"card\">\r\n//         <Chart\r\n//           data={chartData}\r\n//           className=\"pr-4\"\r\n//         >\r\n//           <ArgumentScale factory={scalePoint} />\r\n//           <ArgumentAxis />\r\n//           <ValueAxis />\r\n\r\n//           <LineSeries\r\n//             name=\"결과\"\r\n//             valueField=\"hydro\"\r\n//             argumentField=\"country\"\r\n//             seriesComponent={Line}\r\n//           />\r\n//           <LineSeries\r\n//             name=\"예상치\"\r\n//             valueField=\"oil\"\r\n//             argumentField=\"country\"\r\n//             seriesComponent={Line}\r\n//           />\r\n//           <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} />\r\n//           <Title\r\n//             text=\"Energy Consumption in 2004\\n(Millions of Tons, Oil Equivalent)\"\r\n//             textComponent={Text}\r\n//           />\r\n//           <Animation />\r\n//         </Chart>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}